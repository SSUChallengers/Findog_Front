{"version":3,"sources":["images/header_dog.jpg","images/doghouse.png","styles/BoardEditor.module.css","components/Header.js","components/Tab.js","utils/api.js","pages/Login.js","pages/NotFound.js","utils/utils.js","pages/SignUp.js","components/BoardEditor.js","components/BoardOptionTab.js","components/AnimalItem.js","components/AnimalPopup.js","components/Pagination.js","components/AnimalOptionTab.js","pages/AbandonedAnimal.js","components/BoardBox.js","pages/Board.js","components/MyPageTab.js","components/MyBoard.js","components/MyComment.js","components/MyInterestedAnimal.js","components/MyInterestedBoard.js","components/EditMyInfo.js","pages/MyPage.js","components/CommentWrite.js","components/CommentUpdate.js","components/SingleComment.js","components/ReplyComments.js","components/BoardComment.js","components/BoardContent.js","pages/BoardDetail.js","pages/CenterMap.js","components/BoardUpdate.js","App.js","reportWebVitals.js","index.js","images/profileImage.png"],"names":["module","exports","__webpack_require__","p","frag","container","title","content","btn__container","btn__cancel","btn__confirm","ImageSelect","file__container","imageContainer","ImageBox","Top","styled","div","_templateObject","Object","taggedTemplateLiteral","headerImage","HeaderText","_templateObject2","Container","_templateObject3","ContainerText","_templateObject4","Header","props","setTabMenu","menu","tabMenuChange","react_default","a","createElement","isLogin","react_router_dom","to","onClick","sessionStorage","removeItem","isLoginChange","alert","TabBar","Tab_templateObject","TabUl","ul","Tab_templateObject2","TabLi","Tab_templateObject3","Tab","_useState","useState","tabMenu","_useState2","slicedToArray","setMenu","useEffect","className","API","axios","create","baseURL","timeout","Login_templateObject","Login_templateObject2","BoxContainer","Login_templateObject3","Box","input","Login_templateObject4","LoginBtn","button","_templateObject5","Bottom","_templateObject6","Signup","span","_templateObject7","IdSearch","_templateObject8","PwSearch","_templateObject9","BottomRight","_templateObject10","Login","navigate","useNavigate","email","password","inputs","setInputs","onInputChange","e","_e$target","target","value","name","objectSpread","defineProperty","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","post","JSON","stringify","headers","Content-Type","then","response","isSuccess","setItem","result","userJWT","userId","profileImgUrl","window","location","reload","message","catch","error","console","log","t0","stop","apply","this","arguments","Login_Container","Login_Header","placeholder","onChange","NotFound","AuthLogin","jwt","get","X-ACCESS-TOKEN","SignUp_templateObject","SignUp_templateObject2","SignUp_templateObject3","BoxWrapper","SignUp_templateObject4","SignUp_templateObject5","BoxText","SignUp_templateObject6","Profile","SignUp_templateObject7","ProfileText","SignUp_templateObject8","SelectProfileBox","SignUp_templateObject9","ProfileImageWrap","SignUp_templateObject10","ProfileImage","img","_templateObject11","CheckIcon","FontAwesomeIcon","_templateObject12","BtnWrap","_templateObject13","Btn","_templateObject14","background","BoxSearch","_templateObject15","InputSearch","_templateObject16","ErrorNotification","_templateObject17","BtnSearch","_templateObject18","SignUp","id","nickname","passwordCheck","phoneNumber","_useState3","image_file","preview_URL","_useState4","image","setImage","_useState5","_useState6","defaultImg","setDefaultImg","fileInput","useRef","_useState7","_useState8","isIdChecked","setIsIdChecked","_useState9","_useState10","isIdValidate","setIsIdValidate","_useState11","_useState12","idNotification","setIdNotification","_useState13","_useState14","idOpacity","setIdOpacity","idNotiArray","_useState15","_useState16","idNotiText","setIdNotiText","_useState17","_useState18","isNicknameChecked","setIsNicknameChecked","_useState19","_useState20","nicknameNotification","setNicknameNotification","_useState21","_useState22","isNicknameValidate","setIsNicknameValidate","_useState23","_useState24","nicknameOpacity","setNicknameOpacity","_useState25","_useState26","isPwChecked","setIsPwChecked","_useState27","_useState28","pwNotification","setPwNotification","_useState29","_useState30","pwCheckNotification","setPwCheckNotification","pwNotiArray","_useState31","_useState32","pwNotiText","setPwNotiText","_useState33","_useState34","isPhonenumChecked","setIsPhonenumChecked","_useState35","_useState36","phoneNumNotification","setPhoneNumNotification","_useState37","_useState38","isAllChecked","setIsAllChecked","setPasswordValidation","length","test","replace","checkDuplicateId","params","res","sent","checkDuplicateNickname","_ref2","_callee2","_context2","_ref3","_callee3","formData","_context3","FormData","append","type","SignUp_Container","SignUp_Header","SignUp_BoxContainer","src","style","display","accept","reader","FileReader","files","readAsDataURL","onload","ref","marginBottom","current","click","SignUp_Box","disabled","opacity","size","icon","faCheck","color","width","maxLength","InputPicker","select","BoardEditor_templateObject","BoardEditor","showImages","setShowImages","sendingImg","setSendingImg","category","region","getItem","postId","setPostId","patchState","onChangeData","onClickUpload","abrupt","Number","values","forEach","method","concat","state","myBoard","styles","key","map","alt","filter","_","index","handleDeleteImage","multiple","event","imageLists","imageUrlLists","toConsumableArray","i","currentImageUrl","URL","createObjectURL","push","slice","readOnlyError","htmlFor","defaultProps","patchPostId","imgList","BoardOptionTab_templateObject","ContainerSearch","BoardOptionTab_templateObject2","BoardOptionTab_templateObject3","BoxRegion","BoardOptionTab_templateObject4","BoxCate","BoardOptionTab_templateObject5","BoxFilter","BoardOptionTab_templateObject6","FilterVisibility","BoxDate","BoardOptionTab_templateObject7","BtnWrite","BoardOptionTab_templateObject8","BoardOptionTab_templateObject9","BoardOptionTab_templateObject10","BoardOptionTab_templateObject11","TextDate","BoardOptionTab_templateObject12","SDatePicker","DatePicker","BoardOptionTab_templateObject13","BoardOptionTab","setOptions","start","end","keyword","sort","startDate","setStartDate","endDate","setEndDate","BoardOptionTab_Container","marginLeft","marginRight","BoardOptionTab_BoxSearch","BoardOptionTab_InputSearch","BoardOptionTab_BtnSearch","BoardOptionTab_InputPicker","preventDefault","placeholderText","dateFormat","selected","date","getFullYear","getMonth","getDate","maxDate","Date","locale","ko","fontSize","textAlign","AnimalItem_templateObject","processState","AnimalItem_templateObject2","HeaderLeft","AnimalItem_templateObject3","RecruitState","AnimalItem_templateObject4","AnimalGender","AnimalItem_templateObject5","LikeIcon","AnimalItem_templateObject6","DogImage","AnimalItem_templateObject7","DogInfo","AnimalItem_templateObject8","DogInfoDetail","AnimalItem_templateObject9","AnimalItem","item","onView","animalId","sexCd","neuterYn","kindCd","happenDt","orgNm","happenPlace","popfile","likeFlag","gender","neuter","AnimalItem_Container","AnimalItem_Box","solidHeart","regularHeart","AnimalPopup","onClose","getAnimalInfo","like","setLike","setAnimal","desertionNo","filename","colorCd","age","weight","noticeNo","noticeSdt","noticeEdt","specialMark","careNm","careTe","careAddr","animal","DarkBackground","DialogBlock","AnimalPopup_Header","CloseBtn","closeBtn","Body","AnimalPopup_DogImage","RecruiteState","TextBox","ImageBottomBox","DogKind","AnimalPopup_LikeIcon","delete","animalIdList","parse","url","URLSearchParams","toString","DogInfoText","Divider","DogInfoTextBox","DogInfoTitle","fontWeight","careTel","AnimalPopup_templateObject","AnimalPopup_templateObject2","AnimalPopup_templateObject3","AnimalPopup_templateObject4","AnimalPopup_templateObject5","AnimalPopup_templateObject6","AnimalPopup_templateObject7","AnimalPopup_templateObject8","AnimalPopup_templateObject9","AnimalPopup_templateObject10","AnimalPopup_templateObject11","AnimalPopup_templateObject12","AnimalPopup_templateObject13","AnimalPopup_templateObject14","AnimalPopup_templateObject15","AnimalPopup_templateObject16","Nav","nav","Pagination_templateObject","Button","Pagination_templateObject2","isActive","Pagination","total","page","setPage","showingNum","setShowingNum","arrowHandler","sign","totalPage","nextIndex","isFirstPage","isLastPage","pages","array","getEmptyArray","PageButton","setCurrentPage","Fragment","idx","AnimalOptionTab_templateObject","AnimalOptionTab_templateObject2","AnimalOptionTab_templateObject3","AnimalOptionTab_templateObject4","BtnImgSearch","AnimalOptionTab_templateObject5","AnimalOptionTab_templateObject6","InputOption","AnimalOptionTab_templateObject7","AnimalOptionTab_templateObject8","AnimalOptionTab_templateObject9","AnimalOptionTab","word","breed","status","b","reset","AnimalOptionTab_Container","AnimalOptionTab_ContainerSearch","AnimalOptionTab_BoxSearch","AnimalOptionTab_InputSearch","AnimalOptionTab_BoxFilter","AnimalOptionTab_InputPicker","AnimalOptionTab_BtnSearch","AbandonedAnimal","myInterest","pageCount","setPageCount","dialog","setDialog","animals","setAnimals","currentAnimal","setCurrentAnimal","setReload","isFiltered","setIsFiltered","getAnimalList","some","element","assign","pageCriteria","animalSimpleInfo","find","components_AnimalOptionTab","AbandonedAnimal_Body","AbandonedAnimal_Container","components_AnimalItem","components_AnimalPopup","components_Pagination","AbandonedAnimal_templateObject","AbandonedAnimal_templateObject2","BoardBox_templateObject","Box1","BoardBox_templateObject2","Box2","BoardBox_templateObject3","Title","BoardBox_templateObject4","Content","BoardBox_templateObject5","BoxProfile","BoardBox_templateObject6","TextInfo","BoardBox_templateObject7","BoxProfilePhoto","BoardBox_templateObject8","Photo","BoardBox_templateObject9","BoardBox_templateObject10","popUp","BoardBox","postLike","likeCount","commentLike","commentCount","profile","userImgUrl","profileImage","textDecoration","react","BoardBox_Container","BoardBox_ProfileImage","hits","thumbnail","BoardContainer","Board_templateObject","BoardBody","Board_templateObject2","Board","myInterestedBoard","setData","lastPage","Math","ceil","getBoardsByPage","constructor","keys","components_BoardOptionTab","WriteVisibility","BoardBox_BoardBox","MyPageTab_templateObject","MyPageTab_templateObject2","MyPageTab_templateObject3","TabLink","Link","MyPageTab_templateObject4","MyPageTab","path","pathname","includes","MyPageTab_TabBar","MyPageTab_TabUl","MyPageTab_TabLi","MyBoard","marginTop","Board_Board","MyComment","checkedComments","setCheckedComments","comments","setComments","getMyComments","pageCriteriaDto","commentList","onDelete","_iterator","_step","comment","_createForOfIteratorHelper","s","n","done","commentId","f","finish","t1","MyComment_Container","Checkbox","checked","el","onCheckedElement","MyComment_Box","Comment","commentContent","Option","postTitle","MyComment_Divider","BottomBox","checkedListArray","onCheckedAll","MyComment_Button","MyComment_templateObject","MyComment_templateObject2","MyComment_templateObject3","MyComment_templateObject4","MyComment_templateObject5","MyComment_templateObject6","MyComment_templateObject7","MyComment_templateObject8","MyInterestedAnimal","pages_AbandonedAnimal","MyInterestedBoard","EditMyInfo","newPassword","phoneNum","prevProfileImg","setPrevProfileImg","isProfileChanged","setIsProfileChanged","isPasswordChecked","setIsPasswordChecked","prevPhoneNum","setPrevPhoneNum","profileUrl","onSubmitProfile","deleteFlag","patch","onSubmitNickName","onCheckPassword","_ref4","_callee4","_context4","onSubmitPassword","_ref5","_callee5","_context5","onSubmitPhonenum","_ref6","_callee6","_context6","EditMyInfo_Title","EditMyInfo_Divider","EditMyInfo_Container","EditMyInfo_BoxContainer","EditMyInfo_Profile","EditMyInfo_ProfileText","EditMyInfo_ProfileImageWrap","EditMyInfo_ProfileImage","EditMyInfo_SelectProfileBox","EditBtn","EditMyInfo_Box","EditMyInfo_BoxText","EditMyInfo_BoxSearch","EditMyInfo_InputSearch","EditMyInfo_BtnSearch","EditMyInfo_CheckIcon","EditMyInfo_templateObject","EditMyInfo_templateObject2","EditMyInfo_templateObject3","EditMyInfo_templateObject4","EditMyInfo_templateObject5","EditMyInfo_templateObject6","EditMyInfo_templateObject7","EditMyInfo_templateObject8","EditMyInfo_templateObject9","EditMyInfo_templateObject10","EditMyInfo_templateObject11","EditMyInfo_templateObject12","EditMyInfo_templateObject13","EditMyInfo_templateObject14","EditMyInfo_templateObject15","EditMyInfo_templateObject16","MyPage_templateObject","MyPage_templateObject2","MyPage","MyPage_Container","components_MyPageTab","MyPage_Box","react_router","components_MyBoard","components_MyComment","components_MyInterestedAnimal","components_MyInterestedBoard","components_EditMyInfo","CommentWrite_templateObject","CommentInput","textarea","CommentWrite_templateObject2","CommentWrite_templateObject3","Count","CommentWrite_templateObject4","CommentWrite_templateObject5","CommentWrite","parentCommentId","reply","commentInput","setCommentInput","textAreaCount","setTextAreaCount","CommentWrite_Container","currentTarget","CommentWrite_Box","CommentWrite_Btn","CommentUpdate_templateObject","CommentUpdate_templateObject2","CommentUpdate_templateObject3","CommentUpdate_templateObject4","CommentUpdate_templateObject5","CommentUpdate","commentValue","onCancle","CommentUpdate_Container","CommentUpdate_Count","CommentUpdate_CommentInput","CommentUpdate_Box","CommentUpdate_Btn","SingleComment_templateObject","SingleComment_templateObject2","ProfileImageShow","SingleComment_templateObject3","ProfileName","SingleComment_templateObject4","ContentBox","SingleComment_templateObject5","ExtraInfo","SingleComment_templateObject6","SingleComment_templateObject7","BoxContent","SingleComment_templateObject8","SingleComment_templateObject9","SingleComment","isEditChecked","setIsEditChecked","isReplying","setIsReplying","SingleComment_Container","SingleComment_ProfileImage","referrerpolicy","SingleComment_Box","commentUpdateAt","cursor","CommentUpdate_CommentUpdate","CommentWrite_CommentWrite","SingleComment_Divider","ReplyComments","SingleComment_SingleComment","renderReplyComment","BoardComment_templateObject","BoardComment","BoardComment_Container","ReplyComments_ReplyComments","BoardContent_templateObject","ProfileBox","BoardContent_templateObject2","BoardContent_templateObject3","BoardContent_templateObject4","ProfileInfo","BoardContent_templateObject5","BoardContent_templateObject6","ProfileDate","BoardContent_templateObject7","TitleBox","BoardContent_templateObject8","Category","BoardContent_templateObject9","BoardContent_templateObject10","BoardContent_templateObject11","BoardContent_templateObject12","ExtraBox","BoardContent_templateObject13","BoardContent_templateObject14","BoardContent_templateObject15","ExtraButton","BoardContent_templateObject16","BoardContent_templateObject17","BoardContent","categoryText","setCategoryText","WEEKDAY","postCreateAt","userLiked","board","err","BoardContent_Container","BoardContent_ProfileImage","BoardContent_ProfileImageShow","BoardContent_ProfileName","week","getDay","getHours","getMinutes","dateTrans","BoardContent_Title","BoardContent_ContentBox","BoardContent_Photo","BoardContent_ExtraInfo","BoardContent_LikeIcon","BoardContent_Button","locPostId","locTitle","locCategory","locContent","locImgList","onClickUpdate","body","BoardDetail","useLocation","useParams","BoardContent_BoardContent","BoardComment_BoardComment","CenterMap_templateObject","HomeImg","CenterMap_templateObject2","Intro","CenterMap_templateObject3","MapWrapper","CenterMap_templateObject4","ListWrapper","CenterMap_templateObject5","Map","CenterMap_templateObject6","CenterMap_templateObject7","PlacesList","CenterMap_templateObject8","CenterMap","infowindow","kakao","maps","InfoWindow","zIndex","markers","options","center","LatLng","level","document","getElementById","placesSearchCB","pagination","services","Status","OK","bounds","LatLngBounds","setBounds","places","listEl","menuEl","fragment","createDocumentFragment","hasChildNodes","removeChild","lastChild","removeAllChildNods","setMap","removeMarker","placePosition","y","x","marker","addMarker","itemEl","getListItem","extend","addListener","displayInfowindow","close","onmouseover","onmouseout","place_name","appendChild","scrollTop","displayPlaces","paginationEl","last","innerHTML","onclick","gotoPage","displayPagination","ZERO_RESULT","ERROR","place","imgHeight","itemStr","road_address_name","address_name","phone","position","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","setContent","open","Places","keywordSearch","CenterMap_Container","doghouse","CenterMap_Pagination","BoardUpdate_templateObject","BoardUpdate","ext","metadata","fetch","blob","split","pop","File","_x","convertURLtoFile","BoardUpdate_createForOfIteratorHelper","defaultValue","BoardUpdate_InputPicker","App","setIsLogin","overflow","components_Header","components_Tab","NotFound_NotFound","pages_MyPage","pages_SignUp","BoardEditor_BoardEditor","BoardUpdate_BoardUpdate","pages_Login","BoardDetail_BoardDetail","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9d3c55ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header_dog.85950ef0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doghouse.e6f73a99.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frag\":\"BoardEditor_frag__2jjV4\",\"container\":\"BoardEditor_container__2ixAj\",\"title\":\"BoardEditor_title__3WJ1t\",\"content\":\"BoardEditor_content__H2Yg1\",\"btn__container\":\"BoardEditor_btn__container__2i6UB\",\"btn__cancel\":\"BoardEditor_btn__cancel__2_y5h\",\"btn__confirm\":\"BoardEditor_btn__confirm__2kzSI\",\"ImageSelect\":\"BoardEditor_ImageSelect__1PcVs\",\"file__container\":\"BoardEditor_file__container__EcFCJ\",\"imageContainer\":\"BoardEditor_imageContainer__3hkuV\",\"ImageBox\":\"BoardEditor_ImageBox__3aX5j\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport headerImage from \"../images/header_dog.jpg\";\r\n\r\nconst Top = styled.div`\r\n  position: relative;\r\n  white-space: nowrap;\r\n  width: 100vw;\r\n  min-width: 100%;\r\n  max-width: 1000%;\r\n  height: 30vh;\r\n  text-align: center;\r\n  object-fit: fill;\r\n\r\n  background: linear-gradient(\r\n      rgba(239, 239, 239, 0.6),\r\n      rgba(239, 239, 239, 0.6)\r\n    ),\r\n    url(${headerImage});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  background-attachment: scroll;\r\n`;\r\n\r\nconst HeaderText = styled.div`\r\n  position: absolute;\r\n  top: 2rem;\r\n  left: 50%;\r\n  color: rgb(243, 156, 18);\r\n  font-weight: 800;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 10%;\r\n  left: 90%;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ContainerText = styled.div`\r\n  padding-left: 10px;\r\n  font-size: 1rem;\r\n  font-weight: 800;\r\n  display: inline-block;\r\n  color: rgb(243, 156, 18);\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Header(props) {\r\n  function setTabMenu(menu) {\r\n    props.tabMenuChange(menu);\r\n  }\r\n\r\n  function logout(){\r\n    sessionStorage.removeItem(\"userJWT\");\r\n    sessionStorage.removeItem(\"userID\");\r\n    sessionStorage.removeItem(\r\n      \"profileImgUrl\"\r\n    );\r\n    props.isLoginChange(false);\r\n    alert(\"로그아웃 되었습니다.\");\r\n  }\r\n\r\n  return (\r\n    <Top>\r\n      <Container>\r\n        {!props.isLogin && (\r\n          <Link to=\"/login\">\r\n            <ContainerText\r\n              onClick={() => {\r\n                setTabMenu(0);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              로그인\r\n            </ContainerText>\r\n          </Link>\r\n        )}\r\n        {props.isLogin && (\r\n            <ContainerText\r\n              onClick={() => {\r\n                setTabMenu(0);\r\n                logout();\r\n                // 로그아웃 함수\r\n              }}\r\n            >\r\n              {\" \"}\r\n              로그아웃\r\n            </ContainerText>\r\n        )}\r\n      </Container>\r\n      <Link to=\"/\">\r\n        <HeaderText\r\n          onClick={() => {\r\n            setTabMenu(1);\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Findog\r\n        </HeaderText>\r\n      </Link>\r\n    </Top>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabBar = styled.div`\r\n  background: transparent;\r\n  width: 50vw;\r\n  margin-bottom: 1rem;\r\n  margin-left: 10vw;\r\n  margin-right: 10vw;\r\n  text-align: center;\r\n  justify-content: center;\r\n  white-space: nowrap;\r\n  margin-top: 10vh;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n`;\r\n\r\nconst TabUl = styled.ul``;\r\n\r\nconst TabLi = styled.div`\r\n  font-size: 2vw;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n  padding: 1vw;\r\n  margin: 10%;\r\n  width: 10vw;\r\n  border-top: 5px;\r\n  border-top-style: solid;\r\n  border-top-color: rgba(243, 156, 18, 0.22);\r\n\r\n  &.active {\r\n    height: 100%;\r\n    border-top: 5px;\r\n    border-top-style: solid;\r\n    border-top-color: rgb(243, 156, 18);\r\n  }\r\n`;\r\n\r\nfunction Tab(props) {\r\n  const [menu, setMenu] = useState(props.tabMenu);\r\n\r\n  useEffect(() => {\r\n    setMenu(props.tabMenu);\r\n  }, [props.tabMenu]);\r\n\r\n  const setTabMenu = (menu) => {\r\n    props.tabMenuChange(menu);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Tab-Wrap\">\r\n      <TabBar>\r\n        <TabUl>\r\n          <Link to=\"/\">\r\n            <TabLi\r\n              className={menu === 1 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 1);\r\n                setTabMenu(1);\r\n              }}\r\n            >\r\n              유기동물\r\n            </TabLi>\r\n          </Link>\r\n          <Link to=\"/board\">\r\n            <TabLi\r\n              className={menu === 2 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 2);\r\n                setTabMenu(2);\r\n              }}\r\n            >\r\n              게시판\r\n            </TabLi>\r\n          </Link>\r\n          <Link to=\"/centermap\">\r\n            <TabLi\r\n              className={menu === 3 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 3);\r\n                setTabMenu(3);\r\n              }}\r\n            >\r\n              유기센터\r\n            </TabLi>\r\n          </Link>\r\n          <Link to=\"/mypage\">\r\n            <TabLi\r\n              className={menu === 4 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 4);\r\n                setTabMenu(4);\r\n              }}\r\n            >\r\n              마이페이지\r\n            </TabLi>\r\n          </Link>\r\n        </TabUl>\r\n      </TabBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tab;\r\n","import axios from \"axios\";\r\n\r\nconst API =  axios.create({\r\n   \r\n    baseURL: 'http://3.39.156.161:8080',\r\n    timeout: 30000,\r\n    \r\n})\r\n\r\nexport default API;","import React, {  useState } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport API from './../utils/api';\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: fit-content;\r\n  margin-top: 100px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: left;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  color: orange;\r\n  font-size: 40px;\r\n  padding: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  width: 600px;\r\n  border-left: orange;\r\n  text-align: left;\r\n  margin-left: 100px;\r\n`;\r\n\r\nconst Box = styled.input`\r\n  width: 600px;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  :focus {\r\n    outline: 2px solid gray;\r\n  }\r\n  cursor: auto;\r\n`;\r\n\r\nconst LoginBtn = styled.button`\r\n  width: 610px;\r\n  height: 60px;\r\n  margin-top: 15px;\r\n  font-size: 20px;\r\n  background-color: orange;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  border: none;\r\n  margin-left: 100px;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  width: 610px;\r\n  display: flex;\r\n  margin-left: 100px;\r\n  font-size: 20px;\r\n  margin-bottom: 300px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Signup = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n`;\r\n\r\nconst IdSearch = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n`;\r\n\r\nconst PwSearch = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n`;\r\n\r\nconst BottomRight = styled.div`\r\n  float: right;\r\n  display: flex;\r\n`;\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = inputs;\r\n\r\n  const onInputChange = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n\r\n    setInputs({\r\n      ...inputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value, // name 키를 가진 값을 value 로 설정\r\n    });\r\n  };\r\n\r\n  /** 로그인 api 호출 */\r\n  const onSubmit = async () => {\r\n    try {\r\n      let data = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      await API\r\n        .post(\"/users/log-in\", JSON.stringify(data), {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"로그인 되었습니다.\");\r\n            sessionStorage.setItem(\"userJWT\", response.data.result.userJWT);\r\n            sessionStorage.setItem(\"userID\", response.data.result.userId);\r\n            sessionStorage.setItem(\r\n              \"profileImgUrl\",\r\n              response.data.result.profileImgUrl\r\n            );\r\n            navigate(\"/\");\r\n            window.location.reload();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>로그인</Header>\r\n      <BoxContainer>\r\n        <div>\r\n          <Box\r\n            placeholder=\"아이디(이메일)\"\r\n            name={\"email\"}\r\n            onChange={onInputChange}\r\n            value={email}\r\n          ></Box>\r\n        </div>\r\n        <div>\r\n          <Box\r\n            placeholder=\"비밀번호\"\r\n            name={\"password\"}\r\n            onChange={onInputChange}\r\n            value={password}\r\n          ></Box>\r\n        </div>\r\n      </BoxContainer>\r\n      <LoginBtn onClick={onSubmit}>로그인</LoginBtn>\r\n      <Bottom>\r\n        <Link to=\"/signup\">\r\n          <Signup>회원가입</Signup>\r\n        </Link>\r\n        <BottomRight>\r\n          <IdSearch>아이디 찾기</IdSearch>\r\n          <div>&nbsp;&nbsp;|&nbsp;&nbsp;</div>\r\n          <PwSearch>비밀번호 찾기</PwSearch>\r\n        </BottomRight>\r\n      </Bottom>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFoundPage\r\n        </div>\r\n    )\r\n}","\r\nimport API from './api';\r\n\r\nexport function AuthLogin(jwt) {\r\n  console.log(jwt);\r\n  try {\r\n    API\r\n      .get(\"/users/auto-logIn\", {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": jwt,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"자동로그인\",response);\r\n        if (response.data.isSuccess) {\r\n          sessionStorage.setItem(\"userJWT\", response.data.result.userJWT);\r\n          sessionStorage.setItem(\"userID\", response.data.result.userId);\r\n          sessionStorage.setItem(\r\n            \"profileImgUrl\",\r\n            response.data.result.profileImgUrl\r\n          );\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n  } catch (e) {\r\n    console.log(e.response);\r\n    return false;\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport API from \"./../utils/api\";\r\nimport { type } from \"@testing-library/user-event/dist/type\";\r\nimport { AuthLogin } from \"../utils/utils\";\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: fit-content;\r\n  margin-top: 100px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  color: orange;\r\n  font-size: 40px;\r\n  padding: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  white-space: nowrap;\r\n  border-left: orange;\r\n`;\r\n\r\nconst BoxWrapper = styled.div`\r\n  height: 70px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 700px;\r\n  text-align: left;\r\n  margin-left: 50px;\r\n  cursor: auto;\r\n`;\r\n\r\nconst BoxText = styled.div`\r\n  width: 150px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  width: 600px;\r\n  text-align: left;\r\n  margin-left: 50px;\r\n  margin-top: 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: auto;\r\n`;\r\n\r\nconst ProfileText = styled.div`\r\n  width: 150px;\r\n  text-align: left;\r\n  vertical-align: top;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst SelectProfileBox = styled.div`\r\n  width: 100px;\r\n  text-align: left;\r\n  vertical-align: top;\r\n  margin-top: 5px;\r\n  margin-right: 15px;\r\n  padding: 5px;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ProfileImageWrap = styled.div`\r\n  width: 200px;\r\n  display: inline-block;\r\n  text-align: left;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  display: inline-block;\r\n  justify-content: center;\r\n  padding: 3px;\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nconst CheckIcon = styled(FontAwesomeIcon)`\r\n  float: right;\r\n`;\r\n\r\nconst BtnWrap = styled.div`\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  width: 380px;\r\n  height: 60px;\r\n  margin-top: 80px;\r\n  font-size: 20px;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin-bottom: 300px;\r\n  margin-right: 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst BoxSearch = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: inline-block;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst InputSearch = styled.input`\r\n  width: 400px;\r\n  height: 40px;\r\n  border: none;\r\n  padding-inline: 10px;\r\n  margin-right: 3px;\r\n  :focus {\r\n    outline: 2px solid gray;\r\n  }\r\n`;\r\n\r\nconst ErrorNotification = styled.div`\r\n  width: 400px;\r\n  height: 40px;\r\n  border: none;\r\n  display: inline-block;\r\n  text-align: left;\r\n  margin-top: 2px;\r\n  margin-left: 20px;\r\n  font-size: smaller;\r\n  color: red;\r\n`;\r\n\r\nconst BtnSearch = styled.button`\r\n  width: 100px;\r\n  height: 40px;\r\n  border: none;\r\n  background-color: rgb(255, 224, 166);\r\n`;\r\n\r\nfunction SignUp() {\r\n  const navigate = useNavigate();\r\n  const [inputs, setInputs] = useState({\r\n    id: \"\",\r\n    nickname: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n    phoneNumber: \"\",\r\n  });\r\n\r\n  const { id, nickname, password, passwordCheck, phoneNumber } = inputs; // 비구조화 할당을 통해 값 추출\r\n\r\n  /** 사진 관리 변수 */\r\n  const default_profile_img = \"https://ifh.cc/g/jLgWsT.png\";\r\n\r\n  const [image, setImage] = useState({\r\n    image_file: \"\",\r\n    preview_URL: default_profile_img,\r\n  });\r\n  const [defaultImg, setDefaultImg] = useState(true);\r\n  const fileInput = useRef(null);\r\n\r\n  /** ID 관리 변수 */\r\n  const [isIdChecked, setIsIdChecked] = useState(false); // 중복확인 완료\r\n  const [isIdValidate, setIsIdValidate] = useState(false); // 유효한 형식\r\n  const [idNotification, setIdNotification] = useState(false);\r\n  const [idOpacity, setIdOpacity] = useState(0.7);\r\n  const idNotiArray = [\r\n    \"이메일 형식이 올바르지 않습니다.\",\r\n    \"이미 존재하는 이메일입니다.\",\r\n  ];\r\n  const [idNotiText, setIdNotiText] = useState(idNotiArray[0]);\r\n\r\n  /** 닉네임 관리 변수 */\r\n  const [isNicknameChecked, setIsNicknameChecked] = useState(false); // 중복확인 완료\r\n  const [nicknameNotification, setNicknameNotification] = useState(false); // 유효한 형식\r\n  const [isNicknameValidate, setIsNicknameValidate] = useState(false);\r\n  const [nicknameOpacity, setNicknameOpacity] = useState(0.7);\r\n  const nicknameNotiText = \"이미 존재하는 닉네임입니다.\";\r\n\r\n  /** 비밀번호 관리 변수 */\r\n  const [isPwChecked, setIsPwChecked] = useState(false); // 비밀번호 확인이랑 일치\r\n  const [pwNotification, setPwNotification] = useState(true); // 비밀번호 형식 에러 표시\r\n  const [pwCheckNotification, setPwCheckNotification] = useState(false); // 비밀번호 확인 불일치 에러 표시\r\n  const pwNotiArray = [\r\n    \"8~15자 이내로 입력해주세요.\",\r\n    \"영문,숫자, 특수문자를 혼합하여 입력해주세요.\",\r\n  ];\r\n  const [pwNotiText, setPwNotiText] = useState(pwNotiArray[0]);\r\n\r\n  /** 연락처 관리 변수 */\r\n  const [isPhonenumChecked, setIsPhonenumChecked] = useState(false);\r\n  const [phoneNumNotification, setPhoneNumNotification] = useState(false); // 유효한 형식\r\n  const phoneNumNotiText = \"핸드폰 번호 양식이 올바르지 않습니다.\";\r\n\r\n  const [isAllChecked, setIsAllChecked] = useState(false);\r\n\r\n  const onInputChange = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n\r\n    setInputs({\r\n      ...inputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value, // name 키를 가진 값을 value 로 설정\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"이미지바뀜\");\r\n  }, [defaultImg]);\r\n\r\n  /** 회원가입 버튼 활성화 */\r\n  useEffect(() => {\r\n    if (isIdChecked && isNicknameChecked && isPwChecked && isPhonenumChecked) {\r\n      setIsAllChecked(true);\r\n    } else {\r\n      setIsAllChecked(false);\r\n    }\r\n  }, [\r\n    isIdChecked,\r\n    isNicknameChecked,\r\n    isPwChecked,\r\n    isPhonenumChecked,\r\n    defaultImg,\r\n  ]);\r\n\r\n  /** 비밀번호 유효성 검사 */\r\n  const setPasswordValidation = () => {\r\n    if (password === \"\" || passwordCheck === \"\") {\r\n      setIsPwChecked(false);\r\n      setPwNotification(false);\r\n      setPwCheckNotification(false);\r\n    }\r\n    if (password !== \"\") {\r\n      if (password.length >= 8 && password.length <= 15) {\r\n        if (\r\n          !/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/.test(password)\r\n        ) {\r\n          setPwNotification(true);\r\n          setPwNotiText(pwNotiArray[1]);\r\n        }\r\n      } else {\r\n        setPwNotification(true);\r\n        setPwNotiText(pwNotiArray[0]);\r\n      }\r\n    }\r\n    if (passwordCheck !== \"\") {\r\n      if (password === passwordCheck) {\r\n        console.log(\"같음\");\r\n        setIsPwChecked(true);\r\n        setPwCheckNotification(false);\r\n      } else {\r\n        console.log(\"다름\");\r\n        setIsPwChecked(false);\r\n        setPwCheckNotification(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  /** 이메일 유효성 검사 */\r\n  useEffect(() => {\r\n    if (id === \"\") {\r\n      setIdNotification(false);\r\n      setIsIdValidate(false);\r\n      setIdOpacity(0.7);\r\n    } else {\r\n      var regExp =\r\n        /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n\r\n      if (regExp.test(id)) {\r\n        setIdNotification(false);\r\n        setIsIdValidate(true);\r\n        setIdOpacity(1);\r\n      } else {\r\n        setIdNotification(true);\r\n        setIdNotiText(idNotiArray[0]);\r\n        setIsIdValidate(false);\r\n        setIdOpacity(0.7);\r\n      }\r\n    }\r\n    setIsIdChecked(false);\r\n  }, [id]);\r\n\r\n  /** 닉네임 유효성 검사 (공백만 아니면 됨) */\r\n  useEffect(() => {\r\n    if (nickname === \"\") {\r\n      setIsNicknameValidate(false);\r\n      setNicknameOpacity(0.7);\r\n    } else {\r\n      setIsNicknameValidate(true);\r\n      setNicknameOpacity(1);\r\n    }\r\n    setIsNicknameChecked(false);\r\n  }, [nickname]);\r\n\r\n  useEffect(() => {\r\n    setPasswordValidation();\r\n  }, [password]);\r\n\r\n  useEffect(() => {\r\n    setPasswordValidation();\r\n  }, [passwordCheck]);\r\n\r\n  /** 연락처 자동 하이픈 & 유효성 검사 */\r\n  useEffect(() => {\r\n    if (phoneNumber === \"\") {\r\n      setPhoneNumNotification(false);\r\n    } else {\r\n      phoneNumber\r\n        .replace(/[^0-9]/g, \"\")\r\n        .replace(\r\n          /(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/,\r\n          \"$1-$2-$3\"\r\n        )\r\n        .replace(\"--\", \"-\");\r\n\r\n      if (phoneNumber.length === 13 && /^[0-9\\b -]{0,13}$/.test(phoneNumber)) {\r\n        var regPhone = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\r\n        if (regPhone.test(phoneNumber) === true) {\r\n          setPhoneNumNotification(false);\r\n          setIsPhonenumChecked(true);\r\n        } else {\r\n          setPhoneNumNotification(true);\r\n          setIsPhonenumChecked(false);\r\n        }\r\n      } else {\r\n        setPhoneNumNotification(true);\r\n        setIsPhonenumChecked(false);\r\n      }\r\n    }\r\n  }, [phoneNumber]);\r\n\r\n  /** 프로필 사진 업로드 */\r\n  const OnProfileChange = (e) => {\r\n    //화면에 프로필 사진 표시\r\n    const reader = new FileReader();\r\n\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      setDefaultImg(false);\r\n    } else {\r\n      //업로드 취소할 시\r\n      // setImage(image);\r\n    }\r\n\r\n    reader.onload = () => {\r\n      setImage({\r\n        image_file: e.target.files[0],\r\n        preview_URL: reader.result,\r\n      });\r\n    };\r\n  };\r\n\r\n  /** 이메일 중복확인 */\r\n  const checkDuplicateId = async () => {\r\n    try {\r\n      const params = { email: id };\r\n      const res = await API.get(\"/users/chk-email\", { params }); // API 가 get 해올 때까지 기다리고, 결과 값을 res 에 담음\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        setIsIdChecked(true);\r\n        setIdNotification(false);\r\n      } else {\r\n        setIdNotification(true);\r\n        setIdNotiText(idNotiArray[1]);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  /** 닉네임 중복확인 */\r\n  const checkDuplicateNickname = async () => {\r\n    try {\r\n      const params = { nickname: nickname };\r\n      console.log(\"파라미터\", params);\r\n      const res = await API.get(\"/users/chk-nickname\", { params }); // API 가 get 해올 때까지 기다리고, 결과 값을 res 에 담음\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        setIsNicknameChecked(true);\r\n        setNicknameNotification(false);\r\n      } else {\r\n        setNicknameNotification(true);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  /** 회원가입 api 호출 */\r\n  const onSubmit = async () => {\r\n    try {\r\n      console.log(\"클릭\");\r\n      const formData = new FormData();\r\n\r\n      // formData.append(JSON.stringify(data));\r\n      formData.append(\"email\", id);\r\n      formData.append(\"nickname\", nickname);\r\n      formData.append(\"password\", password);\r\n      formData.append(\"phoneNum\", phoneNumber);\r\n\r\n      if (!defaultImg) {\r\n        console.log(\"사진 있음\");\r\n        console.log(image.image_file);\r\n        formData.append(\"profileImg\", image.image_file);\r\n        console.log(type(image.image_file));\r\n      }\r\n\r\n      await API.post(\"/users/sign-up\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"회원가입에 성공했습니다.\");\r\n            AuthLogin(response.data.result.userJWT);\r\n            navigate(\"/\");\r\n            window.location.reload();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>회원가입</Header>\r\n      <BoxContainer>\r\n        <Profile>\r\n          <ProfileText>프로필사진</ProfileText>\r\n          <ProfileImageWrap>\r\n            <ProfileImage src={image.preview_URL}></ProfileImage>\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              accept=\"image/*\"\r\n              name=\"profile_img\"\r\n              onChange={OnProfileChange}\r\n              ref={fileInput}\r\n            />\r\n            <div style={{ display: \"flex\", marginBottom: \"30px\" }}>\r\n              <SelectProfileBox\r\n                onClick={() => {\r\n                  fileInput.current.click();\r\n                }}\r\n              >\r\n                사진 업로드\r\n              </SelectProfileBox>\r\n              <SelectProfileBox> | </SelectProfileBox>\r\n              <SelectProfileBox\r\n                onClick={() => {\r\n                  setImage({\r\n                    image_file: \"\",\r\n                    preview_URL: default_profile_img,\r\n                  });\r\n                  setDefaultImg(true);\r\n                }}\r\n              >\r\n                기본 이미지 설정\r\n              </SelectProfileBox>\r\n            </div>\r\n          </ProfileImageWrap>\r\n        </Profile>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>아이디(이메일)</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch name=\"id\" onChange={onInputChange} value={id} />\r\n\r\n              <BtnSearch\r\n                disabled={!isIdValidate}\r\n                style={{ opacity: idOpacity }}\r\n                onClick={checkDuplicateId}\r\n              >\r\n                중복확인\r\n              </BtnSearch>\r\n            </BoxSearch>\r\n            {isIdChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {idNotification && (\r\n            <ErrorNotification>{idNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>닉네임</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                name={\"nickname\"}\r\n                onChange={onInputChange}\r\n                value={nickname}\r\n              />\r\n              <BtnSearch\r\n                disabled={!isNicknameValidate}\r\n                style={{ opacity: nicknameOpacity }}\r\n                onClick={checkDuplicateNickname}\r\n              >\r\n                중복확인\r\n              </BtnSearch>\r\n            </BoxSearch>\r\n            {isNicknameChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {nicknameNotification && (\r\n            <ErrorNotification>{nicknameNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>비밀번호</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                style={{ width: \"500px\" }}\r\n                name={\"password\"}\r\n                onChange={onInputChange}\r\n                value={password}\r\n                placeholder=\"※ 영문 대소문자, 숫자, 특수문자를 혼합한 8~15자 이내\"\r\n                maxLength=\"15\"\r\n              />\r\n            </BoxSearch>\r\n          </Box>\r\n          {pwNotification && (\r\n            <ErrorNotification>{pwNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>비밀번호 확인</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                style={{ width: \"500px\" }}\r\n                name={\"passwordCheck\"}\r\n                onChange={onInputChange}\r\n                value={passwordCheck}\r\n                maxLength=\"15\"\r\n              />\r\n            </BoxSearch>\r\n            {isPwChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {pwCheckNotification && (\r\n            <ErrorNotification>비밀번호가 일치하지 않습니다.</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>연락처</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                style={{ width: \"500px\" }}\r\n                name={\"phoneNumber\"}\r\n                onChange={onInputChange}\r\n                value={phoneNumber}\r\n                maxLength=\"13\"\r\n              />\r\n            </BoxSearch>\r\n            {isPhonenumChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {phoneNumNotification && (\r\n            <ErrorNotification>{phoneNumNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n      </BoxContainer>\r\n\r\n      <BtnWrap>\r\n        <Link to=\"/login\">\r\n          <Btn background=\"lightgrey\">취소</Btn>\r\n        </Link>\r\n\r\n        <Btn background=\"orange\" disabled={!isAllChecked} onClick={onSubmit}>\r\n          회원가입\r\n        </Btn>\r\n      </BtnWrap>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styles from \"../styles/BoardEditor.module.css\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst InputPicker = styled.select`\r\n  width: 955px;\r\n  height: 50px;\r\n  text-align: left;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const BoardEditor = (props) => {\r\n  let [showImages, setShowImages] = useState([]);\r\n  const [sendingImg, setSendingImg] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    category: 1,\r\n    region: 1,\r\n    content: \"\",\r\n    title: \"\",\r\n    userId: sessionStorage.getItem(\"userID\"),\r\n  });\r\n\r\n  const [postId, setPostId] = useState(999);\r\n  const [patchState, setPatchState] = useState(props.patchState);\r\n\r\n  /** input 입력 시 title, content 내용 변경 */\r\n  const onChangeData = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      category: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeRegion = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      region: e.target.value,\r\n    });\r\n  };\r\n\r\n  /** 사진 추가 */\r\n  const handleAddImages = (event) => {\r\n    const imageLists = event.target.files;\r\n    let imageUrlLists = [...showImages];\r\n\r\n    for (let i = 0; i < imageLists.length; i++) {\r\n      const currentImageUrl = URL.createObjectURL(imageLists[i]);\r\n      imageUrlLists.push(currentImageUrl);\r\n\r\n      sendingImg.push(imageLists[i]);\r\n    }\r\n\r\n    if (imageUrlLists.length > 10) {\r\n      imageUrlLists = imageUrlLists.slice(0, 10);\r\n      sendingImg = sendingImg.slice(0, 10);\r\n    }\r\n\r\n    setShowImages(imageUrlLists);\r\n  };\r\n\r\n  /** 사진 삭제 */\r\n  const handleDeleteImage = (id) => {\r\n    setShowImages(showImages.filter((_, index) => index !== id));\r\n    setSendingImg(sendingImg.filter((_, index) => index !== id));\r\n  };\r\n\r\n  /** 확인버튼 누르면 데이터 서버로 전송 */\r\n  const onClickUpload = async () => {\r\n    if (patchState === false) {\r\n      if (inputs.content === \"\" || inputs.title === \"\") {\r\n        alert(\"제목과 내용을 모두 입력해주세요.\");\r\n        return;\r\n      } else {\r\n        try {\r\n          console.log(\"클릭\");\r\n          const formData = new FormData();\r\n\r\n          formData.append(\"userId\", Number(inputs.userId));\r\n          formData.append(\"title\", inputs.title);\r\n          formData.append(\"category\", Number(inputs.category));\r\n          formData.append(\"content\", inputs.content);\r\n          formData.append(\"region\", inputs.region);\r\n\r\n          Object.values(sendingImg).forEach((image) =>\r\n            formData.append(\"imgFiles\", image)\r\n          );\r\n\r\n          console.log(\"전송시작\");\r\n          await axios\r\n            .post(\"http://3.39.156.161:8080/boards/post\", formData, {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            })\r\n            .then((response) => {\r\n              console.log(response.data.isSuccess);\r\n\r\n              if (response.data.isSuccess) {\r\n                console.log(\"게시물이 저장되었습니다.\");\r\n                alert(\"게시물이 등록되었습니다!\");\r\n                setPostId(response.data.result.postId);\r\n              } else {\r\n                console.log(response.data.isSuccess);\r\n                console.log(response.data.message);\r\n              }\r\n            });\r\n        } catch (e) {\r\n          console.log(e.response);\r\n        }\r\n        console.log(\"전송끝\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postId !== 999 && patchState === false) {\r\n      navigate(`/board/detail/${postId}`, { state: { myBoard: false } });\r\n      console.log(\"==포스트 이동==\");\r\n    }\r\n  }, [postId, patchState]);\r\n\r\n  return (\r\n    <div className={styles.frag}>\r\n      <div className={styles.container}>\r\n        {/* title */}\r\n        <div>\r\n          <input\r\n            className={styles.title}\r\n            type=\"text\"\r\n            placeholder=\" 제목\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            onChange={onChangeData}\r\n          />\r\n        </div>\r\n        <div>\r\n          <InputPicker\r\n            style={{ marginBottom: \"20px\" }}\r\n            onChange={onChangeCategory}\r\n          >\r\n            <option key={1} value={1}>\r\n              찾아주세요\r\n            </option>\r\n            <option key={2} value={2}>\r\n              봤어요\r\n            </option>\r\n            <option key={3} value={3}>\r\n              도와주세요\r\n            </option>\r\n            <option key={4} value={4}>\r\n              기타\r\n            </option>\r\n          </InputPicker>\r\n          <InputPicker onChange={onChangeRegion}>\r\n          <option>지역</option>\r\n                <option  key={1} value={1}>서울</option>\r\n                <option  key={2} value={2}>인천</option>\r\n                <option  key={3} value={3}>경기</option>\r\n                <option  key={4} value={4}>대전</option>\r\n                <option  key={5} value={5}>대구</option>\r\n                <option  key={6} value={6}>부산</option>\r\n                <option  key={7} value={7}>강원</option>\r\n                <option  key={8} value={8}>광주</option>\r\n                <option  key={9} value={9}>울산</option>\r\n                <option  key={10} value={10}>경남</option>\r\n                <option  key={11} value={11}>전남</option>\r\n                <option  key={12} value={12}>전북</option>\r\n                <option  key={13} value={13}>제주</option>\r\n          </InputPicker>\r\n        </div>\r\n        {/* content */}\r\n        <div>\r\n          <textarea\r\n            type=\"textarea\"\r\n            className={styles.content}\r\n            id=\"content\"\r\n            name=\"content\"\r\n            onChange={onChangeData}\r\n          />\r\n        </div>\r\n        {/* 파일 업로드 부분 */}\r\n        <div>\r\n          <div>\r\n            {/* <strong>업로드 이미지</strong> */}\r\n            <div className={styles.file__container}>\r\n              {showImages.map((image, id) => (\r\n                <div className={styles.ImageBox} key={id}>\r\n                  <img\r\n                    className={styles.imageContainer}\r\n                    src={image}\r\n                    alt={`${image}-${id}`}\r\n                  />\r\n                  <div>\r\n                    <button onClick={() => handleDeleteImage(id)}>삭제</button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <form className={styles.ImageSelect}>\r\n            <input\r\n              type=\"file\"\r\n              id=\"image\"\r\n              accept=\"img/*\"\r\n              multiple=\"multiple\"\r\n              onChange={handleAddImages}\r\n            />\r\n            <label htmlFor=\"image\"></label>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn__container}>\r\n        <Link to=\"/board\">\r\n          <button className={styles.btn__cancel}>취소</button>\r\n        </Link>\r\n        <button\r\n          className={styles.btn__confirm}\r\n          onClick={() => {\r\n            onClickUpload();\r\n            // goToPost();\r\n          }}\r\n        >\r\n          확인\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardEditor.defaultProps = {\r\n  patchPostId: 999,\r\n  patchState: false,\r\n  title: \"\",\r\n  content: \"\",\r\n  region: \"\",\r\n  imgList: \"\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ko } from \"date-fns/esm/locale\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  margin-top: 30px;\r\n  margin-bottom: 10px;\r\n  margin-left: 10vw;\r\n  margin-right: 10vw;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst ContainerSearch = styled.div`\r\n  justify-content: center;\r\n  position: relative;\r\n  height: fit-content;\r\n`;\r\n\r\nconst BoxSearch = styled.div`\r\n  height: fit-content;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst BoxRegion = styled.div`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  font-size: 1.5vw;\r\n  min-width: fit-content;\r\n`;\r\n\r\nconst BoxCate = styled.div`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  font-size: 1.5vw;\r\n  min-width: fit-content;\r\n`;\r\n\r\nconst BoxFilter = styled.div`\r\n  display: ${(props) => (props.FilterVisibility ? \"inline-block\" : \"none\")};\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst BoxDate = styled.div`\r\n  margin-top: 3vw;\r\n  display: flex;\r\n  font-size: 1.5vw;\r\n  height: 4vw;\r\n`;\r\n\r\nconst BtnWrite = styled.button`\r\n  font-size: 1.8vw;\r\n  width: 12vw;\r\n  height: 4vw;\r\n  border: none;\r\n  background-color: orange;\r\n  color: white;\r\n  margin-left: 20px;\r\n  border-radius: 5%;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst InputSearch = styled.input`\r\n  width: 25vw;\r\n  height: 4vw;\r\n  border: none;\r\n  padding-inline: 10px;\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst BtnSearch = styled.button`\r\n  width: 7vw;\r\n  height: 4vw;\r\n  border: none;\r\n  background-color: rgb(255, 224, 166);\r\n  font-size: 1.5vw;\r\n  min-width: fit-content;\r\n`;\r\n\r\nconst InputPicker = styled.select`\r\n  width: 12vw;\r\n  height: 4vw;\r\n  margin-left: 20px;\r\n  text-align: left;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst TextDate = styled.div`\r\n  font-size: 1vw;\r\n  height: 3vw;\r\n  line-height: 3vw;\r\n  margin-right: 2vw;\r\n  min-width: fit-content;\r\n`;\r\n\r\nconst SDatePicker = styled(DatePicker)`\r\n  border-radius: 4px;\r\n  font-size: 1vw;\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nfunction BoardOptionTab({ setOptions }) {\r\n  const [inputs, setInputs] = useState({\r\n    start: \"\",\r\n    end: \"\",\r\n    category: \"\",\r\n    region: \"\",\r\n    keyword: \"\",\r\n    sort: 1,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(false);\r\n  const [endDate, setEndDate] = useState(false);\r\n\r\n  const popUp = (event) => {\r\n    if (sessionStorage.getItem(\"userID\") === null) {\r\n      alert(\"로그인을 하신 후에 게시물을 등록할 수 있습니다.\");\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setOptions(inputs);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerSearch>\r\n        <div style={{ marginLeft: \"5vw\", marginRight: \"5vw\" }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            {/* 검색 */}\r\n            <BoxSearch>\r\n              <InputSearch\r\n                placeholder=\"내용을 입력해주세요\"\r\n                value={inputs.keyword}\r\n                name=\"keyword\"\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    keyword: e.target.value,\r\n                  })\r\n                }\r\n              ></InputSearch>\r\n              <BtnSearch onClick={onSubmit}>검색</BtnSearch>\r\n            </BoxSearch>\r\n            {/* 지역 카테고리 */}\r\n            <BoxRegion>\r\n              <InputPicker\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    region: (e.target.value),\r\n                  })\r\n                }\r\n              >\r\n                <option key={0} value={\"\"}>\r\n                  지역\r\n                </option>\r\n                <option key={1} value={Number(1)}>\r\n                  서울\r\n                </option>\r\n                <option key={2} value={Number(2)}>\r\n                  인천\r\n                </option>\r\n                <option key={3} value={Number(3)}>\r\n                  경기\r\n                </option>\r\n                <option key={4} value={Number(4)}>\r\n                  대전\r\n                </option>\r\n                <option key={5} value={Number(5)}>\r\n                  대구\r\n                </option>\r\n                <option key={6} value={Number(6)}>\r\n                  부산\r\n                </option>\r\n                <option key={7} value={Number(7)}>\r\n                  강원\r\n                </option>\r\n                <option key={8} value={Number(8)}>\r\n                  광주\r\n                </option>\r\n                <option key={9} value={Number(9)}>\r\n                  울산\r\n                </option>\r\n                <option key={10} value={Number(10)}>\r\n                  경남\r\n                </option>\r\n                <option key={11} value={Number(11)}>\r\n                  전남\r\n                </option>\r\n                <option key={12} value={Number(12)}>\r\n                  전북\r\n                </option>\r\n                <option key={13} value={Number(13)}>\r\n                  제주\r\n                </option>\r\n              </InputPicker>\r\n            </BoxRegion>\r\n            {/* 게시판 카테고리 */}\r\n            <BoxCate>\r\n              <InputPicker\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    category: (e.target.value),\r\n                  })\r\n                }\r\n              >\r\n                <option key={0} value={\"\"}>\r\n                  카테고리\r\n                </option>\r\n                <option key={1} value={Number(1)}>\r\n                  찾아주세요\r\n                </option>\r\n                <option key={2} value={Number(2)}>\r\n                  봤어요\r\n                </option>\r\n                <option key={3} value={Number(3)}>\r\n                  도와주세요\r\n                </option>\r\n                <option key={4} value={Number(4)}>\r\n                  기타\r\n                </option>\r\n              </InputPicker>\r\n            </BoxCate>\r\n            {/* 필터 */}\r\n            <BoxFilter>\r\n              <InputPicker\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    sort: Number(e.target.value),\r\n                  })\r\n                }\r\n              >\r\n                <option key={1} value={1}>\r\n                  최신순\r\n                </option>\r\n                <option key={2} value={2}>\r\n                  조회순\r\n                </option>\r\n                <option key={3} value={3}>\r\n                  좋아요순\r\n                </option>\r\n              </InputPicker>\r\n            </BoxFilter>\r\n            {/* 글쓰기, 관심목록 */}\r\n            <Link to=\"/board/edit\">\r\n              <BtnWrite onClick={popUp}>글쓰기</BtnWrite>\r\n            </Link>\r\n          </div>\r\n          <BoxDate>\r\n            <TextDate>기간 :</TextDate>\r\n            <div>\r\n              <SDatePicker\r\n                placeholderText=\"조회 시작 날짜\"\r\n                dateFormat=\"yyyy/MM/dd\"\r\n                selected={startDate}\r\n                onChange={(date) => {\r\n                  setStartDate(date);\r\n                  var start =\r\n                    date.getFullYear() +\r\n                    (\"0\" + (date.getMonth() + 1)).slice(-2) +\r\n                    (\"0\" + date.getDate()).slice(-2);\r\n                  setInputs({ ...inputs, start: start });\r\n                }}\r\n                maxDate={new Date()}\r\n                locale={ko}\r\n              />\r\n            </div>\r\n            <div style={{ marginLeft: \"2vw\", marginRight: \"2vw\" }}>~</div>\r\n            <div>\r\n              <SDatePicker\r\n                placeholderText=\"조회 종료 날짜\"\r\n                dateFormat=\"yyyy/MM/dd\"\r\n                selected={endDate}\r\n                onChange={(date) => {\r\n                  setEndDate(date);\r\n                  var end =\r\n                    date.getFullYear() +\r\n                    (\"0\" + (date.getMonth() + 1)).slice(-2) +\r\n                    (\"0\" + date.getDate()).slice(-2);\r\n                  setInputs({ ...inputs, end: end });\r\n                }}\r\n                maxDate={new Date()}\r\n                locale={ko}\r\n              />\r\n            </div>\r\n          </BoxDate>\r\n          <div style={{ fontSize: \"1vw\", color: \"grey\", textAlign: \"left\" }}>\r\n            * 년/월/일 형식으로 날짜를 입력한 후 엔터를 입력하거나, 달력에서\r\n            날짜를 선택해주세요.\r\n          </div>\r\n        </div>\r\n      </ContainerSearch>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default BoardOptionTab;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as regularHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  width: 37vw;\r\n  min-height: 30vh;\r\n  margin-bottom: 1vh;\r\n  background-color: ${(props) =>\r\n    props.processState === \"보호중\"\r\n      ? \"rgb(251, 223, 169)\"\r\n      : \"rgba(128, 128, 128, 0.2)\"};\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  display: flex;\r\n  padding: 12px;\r\n  justify-content: space-between;\r\n  white-space: normal;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst RecruitState = styled.div`\r\n  width: 10vw;\r\n  font-size: 1.5vw;\r\n  height: fit-content;\r\n  line-height: 5vw;\r\n  border-radius: 10%;\r\n  background-color: ${(props) =>\r\n    props.processState === \"보호중\" ? \"orange\" : \"grey\"};\r\n  color: white;\r\n`;\r\n\r\nconst AnimalGender = styled.div`\r\n  margin-left: 10px;\r\n  line-height: 5vw;\r\n  width: fit-content;\r\n  font-size: 1.5vw;\r\n  font-weight: 1000;\r\n`;\r\n\r\nconst LikeIcon = styled(FontAwesomeIcon)`\r\n  float: right;\r\n  object-fit: fill;\r\n  width: 3vw;\r\n  height: 5vw;\r\n`;\r\n\r\nconst DogImage = styled.img`\r\n  width: 40%;\r\n  height: 25vh;\r\n  margin-bottom: 2%;\r\n`;\r\n\r\nconst DogInfo = styled.div`\r\n  width: 50%;\r\n  margin-left: 10%;\r\n  text-align: left;\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst DogInfoDetail = styled.div`\r\n  overflow: hidden;\r\n  font-weight: 500;\r\n`;\r\n\r\nfunction AnimalItem({ item, onClick, onView }) {\r\n  const {\r\n    animalId,\r\n    processState,\r\n    sexCd,\r\n    neuterYn,\r\n    kindCd,\r\n    happenDt,\r\n    orgNm,\r\n    happenPlace,\r\n    popfile,\r\n    likeFlag,\r\n  } = item;\r\n\r\n  const gender = sexCd === \"M\" ? \"수컷\" : \"암컷\";\r\n  const neuter = neuterYn === \"N\" ? \"(중성화 X)\" : \"(중성화 O)\";\r\n\r\n  return (\r\n    <Container\r\n      processState={processState}\r\n      onClick={() => {\r\n        onClick();\r\n        onView(item.animalId);\r\n      }}\r\n    >\r\n      <Box>\r\n        <HeaderLeft>\r\n          <RecruitState processState={processState}>\r\n            {processState}\r\n          </RecruitState>\r\n          <div style={{ display: \"flex\" }}>\r\n            <AnimalGender>{gender}</AnimalGender>\r\n            <AnimalGender>{neuter}</AnimalGender>\r\n          </div>\r\n        </HeaderLeft>\r\n        <LikeIcon\r\n          icon={likeFlag === 1 ? solidHeart : regularHeart}\r\n        ></LikeIcon>\r\n      </Box>\r\n      <Box>\r\n        <DogImage src={popfile}></DogImage>\r\n        <DogInfo>\r\n          <DogInfoDetail>• 품종 : {kindCd}</DogInfoDetail>\r\n          <DogInfoDetail>• 등록일 : {happenDt}</DogInfoDetail>\r\n          <DogInfoDetail>• 구조장소 : {happenPlace.slice(0, 10)}</DogInfoDetail>\r\n          <DogInfoDetail>• 담당기관명 : {orgNm}</DogInfoDetail>\r\n        </DogInfo>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AnimalItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRectangleXmark as closeBtn } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as regularHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport API from \"./../utils/api\";\r\n\r\nfunction AnimalPopup({ item, onClose, likeFlag }) {\r\n  useEffect(() => {\r\n    getAnimalInfo(item.animalId);\r\n  }, []);\r\n\r\n  const [like, setLike] = useState(likeFlag);\r\n\r\n  // 유기동물 상세정보 조회하기\r\n  const getAnimalInfo = (animalId) => {\r\n    API.get(\"/animals/\" + animalId).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(response.data);\r\n        setAnimal(response.data.result);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    });\r\n  };\r\n\r\n  const [animal, setAnimal] = useState({\r\n    animalId: 0,\r\n    desertionNo: \"\",\r\n    filename: \"\",\r\n    happenDt: \"\",\r\n    happenPlace: \"\",\r\n    kindCd: \"\",\r\n    colorCd: \"\",\r\n    age: \"\",\r\n    weight: \"\",\r\n    noticeNo: \"\",\r\n    noticeSdt: \"\",\r\n    noticeEdt: \"\",\r\n    popfile: \"\",\r\n    processState: \"\",\r\n    sexCd: \"\",\r\n    neuterYn: \"\",\r\n    specialMark: \"\",\r\n    careNm: \"\",\r\n    careTe: \"\",\r\n    careAddr: \"\",\r\n    orgNm: \"\",\r\n  });\r\n\r\n  const Like = (event) => {\r\n    if (sessionStorage.getItem(\"userJWT\") === null) {\r\n      alert(\"로그인을 하신 후 이용하실 수 있습니다.\");\r\n      event.preventDefault();\r\n    }\r\n    if (like === 1) {\r\n      // 좋아요 취소\r\n      API.delete(\"/animals/unlike\", {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n        data: {\r\n          animalIdList: JSON.parse(\"[\" + animal.animalId + \"]\"),\r\n        },\r\n      }).then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.isSuccess) {\r\n          setLike(0);\r\n        }\r\n      });\r\n    } else {\r\n      // 좋아요 누르기\r\n      const params = new URLSearchParams({\r\n        animalId: animal.animalId,\r\n      }).toString();\r\n      const url = \"/animals/like?\" + params;\r\n\r\n      API.post(url, null, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n      }).then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.isSuccess) {\r\n          setLike(1);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DarkBackground>\r\n      <DialogBlock>\r\n        <Header>\r\n          <CloseBtn icon={closeBtn} onClick={onClose}></CloseBtn>\r\n        </Header>\r\n        <Body>\r\n          <ImageBox>\r\n            <DogImage src={animal.popfile}></DogImage>\r\n            <RecruiteState processState={animal.processState}>\r\n              {animal.processState}\r\n            </RecruiteState>\r\n          </ImageBox>\r\n          <TextBox>\r\n            <ImageBottomBox>\r\n              <DogKind>{animal.kindCd}</DogKind>\r\n              <LikeIcon\r\n                size=\"2x\"\r\n                icon={like === 1 ? solidHeart : regularHeart}\r\n                onClick={Like}\r\n              ></LikeIcon>\r\n            </ImageBottomBox>\r\n            <DogInfoText>{animal.specialMark}</DogInfoText>\r\n            <Divider></Divider>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>공고번호 :</DogInfoTitle>\r\n              <DogInfoText\r\n                style={{\r\n                  color: \"orange\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                {animal.noticeNo}\r\n              </DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>공고기간 : </DogInfoTitle>\r\n              <DogInfoText>\r\n                {animal.noticeSdt} ~ {animal.noticeEdt}\r\n              </DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>발견장소 :</DogInfoTitle>\r\n              <DogInfoText>{animal.happenPlace}</DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>특이사항 :</DogInfoTitle>\r\n              <DogInfoText>{animal.specialMark}</DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>보호센터 :</DogInfoTitle>\r\n              <DogInfoText>\r\n                {animal.careNm} (Tel : {animal.careTel})\r\n                <br />\r\n                주소 : {animal.careAddr}\r\n              </DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>담당센터 : </DogInfoTitle>\r\n              <DogInfoText>{animal.orgNm}</DogInfoText>\r\n            </DogInfoTextBox>\r\n          </TextBox>\r\n        </Body>\r\n      </DialogBlock>\r\n    </DarkBackground>\r\n  );\r\n}\r\n\r\nexport default AnimalPopup;\r\n\r\nconst DarkBackground = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst DialogBlock = styled.div`\r\n  width: 70vw;\r\n  height: fit-content;\r\n  max-height: 70vh;\r\n  padding: 5px;\r\n  background: white;\r\n  border-radius: 2px;\r\n  border: solid;\r\n  border-color: orange;\r\n  border-width: 10px;\r\n  font-size: 15px;\r\n  overflow: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 6px;\r\n    background: rgba(255, 255, 255, 0.4);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(0, 0, 0, 0.3);\r\n    border-radius: 6px;\r\n  }\r\n\r\n`;\r\n\r\nconst Body = styled.div`\r\n  width: 95%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst CloseBtn = styled(FontAwesomeIcon)`\r\n  width: 50px;\r\n  height: 50px;\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  width: fit-content;\r\n  position: relative;\r\n`;\r\n\r\nconst DogImage = styled.img`\r\n  width: 50vw;\r\n  height: 400px;\r\n`;\r\n\r\nconst RecruiteState = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  width: 75px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  border-radius: 10%;\r\n  background-color: ${(props) =>\r\n    props.processState === \"보호중\" ? \"orange\" : \"grey\"};\r\n  color: white;\r\n`;\r\n\r\nconst ImageBottomBox = styled.div`\r\n  height: fit-content;\r\n  display: flex;\r\n  width: 100%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst DogKind = styled.div`\r\n  padding: 3px;\r\n  font-weight: bolder;\r\n  margin-bottom: 5px;\r\n  font-size: xx-large;\r\n  background-color: rgba(255, 166, 0, 0.3);\r\n`;\r\n\r\nconst DogInfoTitle = styled.div`\r\n  width: 100px;\r\n  text-align: left;\r\n  font-size: large;\r\n`;\r\n\r\nconst DogInfoText = styled.div`\r\n  width: 500px;\r\n  text-align: left;\r\n  font-size: large;\r\n`;\r\n\r\nconst DogInfoTextBox = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: rgb(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst LikeIcon = styled(FontAwesomeIcon)`\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Pagination({ total, page, setPage }) {\r\n  const PAGES_PER_LIST = 5;\r\n  const [showingNum, setShowingNum] = useState({\r\n    start: 1,\r\n    end: PAGES_PER_LIST,\r\n  });\r\n\r\n  const arrowHandler = (prev, sign, totalPage) => {\r\n    const nextIndex = prev.end + PAGES_PER_LIST;\r\n    let res;\r\n    if (sign === 1) {\r\n      res = nextIndex > totalPage ? totalPage : nextIndex;\r\n    } else if (sign === -1) {\r\n      res =\r\n        prev.end - prev.start < 4\r\n          ? prev.start + 4 - PAGES_PER_LIST\r\n          : prev.end - PAGES_PER_LIST;\r\n    }\r\n    return { ...prev, start: prev.start + PAGES_PER_LIST * sign, end: res };\r\n  };\r\n\r\n  const changePageNumbersBackward = () => {\r\n    page > PAGES_PER_LIST &&\r\n      setShowingNum((prev) => arrowHandler(prev, -1, total));\r\n  };\r\n\r\n  const changePageNumberForward = () => {\r\n    showingNum.end <= total &&\r\n      setShowingNum((prev) => arrowHandler(prev, 1, total));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const lessThanFive = total <= PAGES_PER_LIST;\r\n    lessThanFive\r\n      ? setShowingNum((prev) => ({ ...prev, start: 1, end: total }))\r\n      : setShowingNum((prev) => ({ ...prev, start: 1, end: PAGES_PER_LIST }));\r\n  }, [total]);\r\n\r\n  useEffect(() => {\r\n    setPage(showingNum.start);\r\n  }, [showingNum, setPage]);\r\n\r\n  const isFirstPage = showingNum.start === 1;\r\n  const isLastPage = showingNum.end === total;\r\n  const pages = getEmptyArray(showingNum.start, showingNum.end);\r\n\r\n  function getEmptyArray(start, end) {\r\n    const array = [];\r\n    for (let i = start; i <= end; i++) {\r\n      array.push(i);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  function PageButton({ page, setCurrentPage, isActive }) {\r\n    const handleClickButton = () => {\r\n      setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n      <Nav isActive={isActive}>\r\n        <Button onClick={handleClickButton} isActive={isActive}>\r\n          {page}\r\n        </Button>\r\n      </Nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Button onClick={changePageNumbersBackward} disabled={isFirstPage}>\r\n          &lt;\r\n        </Button>\r\n        {pages.map((p, idx) => {\r\n          return (\r\n            <PageButton\r\n              key={`pageNumber-${idx + 1}`}\r\n              page={p}\r\n              setCurrentPage={setPage}\r\n              isActive={p === page}\r\n            />\r\n          );\r\n        })}\r\n        <Button onClick={changePageNumberForward} disabled={isLastPage}>\r\n          &gt;\r\n        </Button>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 4px;\r\n  margin: 16px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 1vw;\r\n  margin: 0;\r\n  background: ${(props) =>\r\n    props.isActive ? \"orange\" : \"rgba(211,211,211,0.5)\"};\r\n  color: white;\r\n  font-size: 2vw;\r\n  color: ${(props) => (props.isActive ? \"white\" : \"black\")};\r\n\r\n  &:hover {\r\n    background: orange;\r\n    cursor: pointer;\r\n    transform: translateY(-5px);\r\n  }\r\n\r\n  &[disabled] {\r\n    background: rgba(211, 211, 211, 0.5);\r\n    cursor: revert;\r\n    transform: revert;\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ko } from \"date-fns/esm/locale\";\r\n\r\nconst Container = styled.div`\r\n  width: 80vw;\r\n  margin-top: 30px;\r\n  margin-bottom: 100px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst ContainerSearch = styled.div`\r\n  justify-content: center;\r\n  position: relative;\r\n  width: fit-content;\r\n  height: fit-content;\r\n`;\r\n\r\nconst BoxSearch = styled.div`\r\n  height: fit-content;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: flex;\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst BoxFilter = styled.div`\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst BtnImgSearch = styled.button`\r\n  font-size: 2vw;\r\n  width: 12vw;\r\n  height: 4vw;\r\n  text-align: center;\r\n  border: none;\r\n  background-color: orange;\r\n  color: white;\r\n  border-radius: 5%;\r\n  font-weight: bold;\r\n  display: flex;\r\n  margin-top: 3vw;\r\n`;\r\n\r\nconst InputSearch = styled.input`\r\n  width: 15vw;\r\n  height: 4vw;\r\n  border: none;\r\n  padding-inline: 10px;\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst InputOption = styled.input`\r\n  width: 8vw;\r\n  height: 4vw;\r\n  border: none;\r\n  padding-inline: 10px;\r\n  font-size: 1.5vw;\r\n`;\r\n\r\nconst BtnSearch = styled.button`\r\n  width: 7vw;\r\n  height: 4vw;\r\n  border: none;\r\n  background-color: rgb(255, 224, 166);\r\n  font-size: 1.5vw;\r\n  min-width: fit-content;\r\n  margin-left: 2vw;\r\n`;\r\n\r\nconst InputPicker = styled.select`\r\n  width: 10vw;\r\n  height: 4vw;\r\n  margin-left: 2vw;\r\n  text-align: left;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nfunction AnimalOptionTab({ setOptions }) {\r\n  const [inputs, setInputs] = useState({\r\n    word: \"\",\r\n    region: \"\",\r\n    category: \"\",\r\n    breed: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const onSubmit = (b) => {\r\n    if (b) {\r\n      setOptions(inputs);\r\n    } else {\r\n      const reset = {\r\n        word: \"\",\r\n        region: \"\",\r\n        category: \"\",\r\n        breed: \"\",\r\n        status: \"\",\r\n      };\r\n      setInputs(reset);\r\n      setOptions(reset);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerSearch>\r\n        <div>\r\n          <div style={{ display: \"flex\" }}>\r\n            {/* 검색 */}\r\n            <BoxSearch>\r\n              <InputSearch\r\n                placeholder=\"색상, 특이사항, 품종 등\"\r\n                value={inputs.word}\r\n                name=\"word\"\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    word: e.target.value,\r\n                  })\r\n                }\r\n              ></InputSearch>\r\n            </BoxSearch>\r\n            <BoxSearch style={{ marginLeft: \"2vw\" }}>\r\n              <InputOption\r\n                placeholder=\"시/군/구\"\r\n                value={inputs.region}\r\n                name=\"region\"\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    region: e.target.value,\r\n                  })\r\n                }\r\n              ></InputOption>\r\n            </BoxSearch>\r\n            <BoxFilter>\r\n              <InputPicker\r\n              value={inputs.category}\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    category: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option key={1} value={\"\"}>\r\n                  모든 동물\r\n                </option>\r\n                <option key={2} value={\"개\"}>\r\n                  개\r\n                </option>\r\n                <option key={3} value={\"고양이\"}>\r\n                  고양이\r\n                </option>\r\n                <option key={4} value={\"기타\"}>\r\n                  기타\r\n                </option>\r\n              </InputPicker>\r\n            </BoxFilter>\r\n            {inputs.category !== \"\" && (\r\n              <BoxSearch style={{ marginLeft: \"2vw\" }}>\r\n                <InputOption\r\n                  style={{ width: \"15vw\" }}\r\n                  placeholder=\"품종 ex) 믹스견, 시츄\"\r\n                  value={inputs.breed}\r\n                  name=\"breed\"\r\n                  onChange={(e) =>\r\n                    setInputs({\r\n                      ...inputs,\r\n                      breed: e.target.value,\r\n                    })\r\n                  }\r\n                ></InputOption>\r\n              </BoxSearch>\r\n            )}\r\n            <BoxFilter>\r\n              <InputPicker\r\n                value={inputs.status}\r\n                onChange={(e) =>\r\n                  setInputs({\r\n                    ...inputs,\r\n                    status: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option key={1} value={\"\"}>\r\n                  전체\r\n                </option>\r\n                <option key={2} value={\"보호중\"}>\r\n                  보호중\r\n                </option>\r\n                <option key={3} value={\"종료\"}>\r\n                  종료\r\n                </option>\r\n              </InputPicker>\r\n            </BoxFilter>\r\n            <BtnSearch\r\n              onClick={() => {\r\n                onSubmit(true);\r\n              }}\r\n            >\r\n              검색\r\n            </BtnSearch>\r\n            <BtnSearch\r\n              onClick={() => {\r\n                onSubmit(false);\r\n              }}\r\n            >\r\n              필터 초기화\r\n            </BtnSearch>\r\n          </div>\r\n          <BtnImgSearch>사진 검색</BtnImgSearch>\r\n        </div>\r\n      </ContainerSearch>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AnimalOptionTab;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AnimalItem from \"../components/AnimalItem\";\r\nimport styled from \"styled-components\";\r\nimport AnimalPopup from \"../components/AnimalPopup\";\r\nimport API from \"./../utils/api\";\r\nimport Pagination from \"./../components/Pagination\";\r\nimport AnimalOptionTab from \"./../components/AnimalOptionTab\";\r\n\r\nexport const AbandonedAnimal = ({ myInterest }) => {\r\n  var size = 6;\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [animals, setAnimals] = useState([]);\r\n  const [currentAnimal, setCurrentAnimal] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [inputs, setInputs] = useState({\r\n    word: \"\",\r\n    region: \"\",\r\n    category: \"\",\r\n    breed: \"\",\r\n    status: \"\",\r\n  });\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var url = \"\";\r\n    if (isFiltered) {\r\n      url = \"/animals/search\";\r\n    } else if (myInterest === true) {\r\n      url = \"/animals/mypage\";\r\n      size = 4;\r\n    } else {\r\n      url = \"/animals\";\r\n    }\r\n\r\n    getAnimalList(page, size, url);\r\n  }, [page, reload]);\r\n\r\n  const setOptions = (inputs) => {\r\n    setInputs(inputs);\r\n    setPage(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // filter 안된 것\r\n    var url = \"\";\r\n    if (!Object.values(inputs).some((element) => element !== \"\")) {\r\n      url = \"/animals\";\r\n      console.log(\"필터안됨\");\r\n    }\r\n    // filter 된것\r\n    else {\r\n      url = \"/animals/search\";\r\n      console.log(\"필터됨\");\r\n    }\r\n    setIsFiltered(Object.values(inputs).some((element) => element !== \"\"));\r\n    console.log(\"useeeffect\", inputs);\r\n    getAnimalList(page, size, url);\r\n  }, [inputs]);\r\n\r\n  // 유기동물 리스트 조회하기\r\n  const getAnimalList = (page, size, url) => {\r\n    const params = Object.assign({}, inputs);\r\n    params.page = page;\r\n    params.size = size;\r\n\r\n    if (sessionStorage.getItem(\"userJWT\") === null) {\r\n      console.log(\"null\");\r\n      API.get(url, {\r\n        params,\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": \"\",\r\n        },\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          const pageCriteria = response.data.result.pageCriteria;\r\n          const animalSimpleInfo = response.data.result.animalSimpleInfo;\r\n\r\n          console.log(response.data);\r\n          setPageCount(pageCriteria.totalPage);\r\n          setAnimals(animalSimpleInfo);\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      });\r\n    } else {\r\n      API.get(url, {\r\n        params,\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          const pageCriteria = response.data.result.pageCriteria;\r\n          const animalSimpleInfo = response.data.result.animalSimpleInfo;\r\n\r\n          console.log(response.data);\r\n          setPageCount(pageCriteria.totalPage);\r\n          setAnimals(animalSimpleInfo);\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onClose = () => {\r\n    setDialog(false);\r\n    setReload(true);\r\n  };\r\n\r\n  const onView = (key) => {\r\n    setCurrentAnimal(animals.find((item) => item.animalId === key));\r\n  };\r\n\r\n  const onClick = () => {\r\n    setDialog(true);\r\n    setReload(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!myInterest && (\r\n        <AnimalOptionTab setOptions={setOptions}></AnimalOptionTab>\r\n      )}\r\n      <Body>\r\n        <Container myInterest={myInterest}>\r\n          {animals.map((item) => {\r\n            return (\r\n              <AnimalItem\r\n                item={item}\r\n                key={item.animalId}\r\n                onClick={onClick}\r\n                onView={onView}\r\n              ></AnimalItem>\r\n            );\r\n          })}\r\n        </Container>\r\n      </Body>\r\n      {dialog ? (\r\n        <AnimalPopup\r\n          item={currentAnimal}\r\n          key={currentAnimal.animalId}\r\n          onClose={onClose}\r\n          likeFlag={currentAnimal.likeFlag}\r\n        ></AnimalPopup>\r\n      ) : null}\r\n      {animals.length !== 0 && (\r\n        <footer>\r\n          <Pagination total={pageCount} page={page} setPage={setPage} />\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AbandonedAnimal;\r\n\r\nAbandonedAnimal.defaultProps = {\r\n  myInterest: false,\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  height: min-content;\r\n  margin-left: 10vw;\r\n  margin-right: 5vw;\r\n  display: grid;\r\n  grid-row-gap: 4vh;\r\n  grid-column-gap: 2vw;\r\n  grid-template-columns: ${(props) =>\r\n    props.myInterest === true ? \"1fr\" : \"1fr 1fr\"};\r\n`;\r\n\r\nconst Body = styled.div`\r\n  height: fit-content;\r\n  margin-bottom: 30vh;\r\n`;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport profileImage from \"../images/profileImage.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AbandonedAnimal } from './../pages/AbandonedAnimal';\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  min-height: 30vh;\r\n  background-color: rgb(251, 223, 169);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  padding-left: 1vw;\r\n  padding-top: 1vw;\r\n  padding-right: 1vw;\r\n  margin-bottom: 5vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Box1 = styled.div`\r\n  padding-inline-start: 1vw;\r\n  width: 65%;\r\n`;\r\n\r\nconst Box2 = styled.div`\r\n  width: 30%;\r\n  margin-right: 5vw;\r\n  height: 95%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  height: 7vh;\r\n  font-weight: bolder;\r\n  font-size: 1.6vw;\r\n  text-align: start;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 1;\r\n  display: -webkit-box;\r\n  padding-top: 1vh;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  height: 14vh;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  text-align: start;\r\n  font-size: 1.5vw;\r\n  margin-top: 1vh;\r\n  margin-bottom: 1vh;\r\n`;\r\n\r\nconst BoxProfile = styled.div`\r\n width: max-content;\r\n  display: flex;\r\n  height: 6vh;\r\n  line-height: 6vh;\r\n  font-size: 1vw;\r\n`;\r\n\r\nconst TextInfo = styled.div`\r\n  margin-right: 15px;\r\n  font-size: 1.2vw;\r\n`;\r\n\r\nconst BoxProfilePhoto = styled.div`\r\n  margin-right: 1vw;\r\n`;\r\n\r\nconst Photo = styled.img`\r\n  object-fit: fill;\r\n  width: 100%;\r\n  height: 24vh;\r\n  margin-left: 5vw;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  height: 5vh;\r\n  vertical-align: baseline;\r\n  border-radius: 40%;\r\n`;\r\n\r\nconst popUp = (event) => {\r\n  if (sessionStorage.getItem(\"userID\") === null) {\r\n    alert(\"로그인을 하신 후에 게시물을 열람할 수 있습니다.\");\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nexport const BoardBox = ({ item, myBoard }) => {\r\n  const postLike = item.likeCount === null ? 0 : item.likeCount;\r\n  const commentLike = item.commentCount === null ? 0 : item.commentCount;\r\n  const profile = item.userImgUrl === null ? profileImage : item.userImgUrl;\r\n  const path = \"/board/detail/\" + item.postId;\r\n  return (\r\n    <Link\r\n      to={\"/board/detail/\" + item.postId}\r\n      state={{ myBoard: myBoard }}\r\n      style={{ textDecoration: \"none\", color: \"black\" }}\r\n      onClick={popUp}\r\n    >\r\n      <Fragment>\r\n        <Container>\r\n          <Box1>\r\n            <Title>{item.title}</Title>\r\n            <Content>{item.content}</Content>\r\n            <BoxProfile>\r\n              <BoxProfilePhoto>\r\n                <ProfileImage src={profile} />\r\n              </BoxProfilePhoto>\r\n              <TextInfo style={{ marginRight: \"20px\", fontWeight: \"bold\" }}>\r\n                {item.nickname}\r\n              </TextInfo>{(props) => (props.myBoard ? \"\" : \"5vw\")}\r\n              <TextInfo>좋아요 {postLike}</TextInfo>\r\n              <TextInfo>댓글 {commentLike}</TextInfo>\r\n              <TextInfo>조회수 {item.hits}</TextInfo>\r\n            </BoxProfile>\r\n          </Box1>\r\n          {item.thumbnail && (\r\n            <Box2>\r\n              <Photo src={item.thumbnail} />\r\n            </Box2>\r\n          )}\r\n        </Container>\r\n      </Fragment>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport OptionTab from \"../components/BoardOptionTab\";\r\nimport { BoardBox } from \"../components/BoardBox\";\r\nimport styled from \"styled-components\";\r\nimport API from \"../utils/api\";\r\nimport Pagination from \"./../components/Pagination\";\r\n\r\nconst BoardContainer = styled.div``;\r\n\r\nconst BoardBody = styled.div`\r\n  width: ${(props) => (props.myBoard ? \"\" : \"90vw;\")};\r\n  margin-left: ${(props) => (props.myBoard  ? \"\" : \"5vw;\")};\r\n  margin-right: ${(props) => (props.myBoard? \"\" : \"5vw;\")};\r\n  margin-top: ${(props) => (props.myBoard ? \"\" : \"50;\")};\r\n`;\r\n\r\nexport const Board = ({ myBoard, myInterestedBoard }) => {\r\n  const size = 5;\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const setOptions = (inputs) => {\r\n    setInputs(inputs);\r\n    setPage(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"inputs 바뀜\", inputs);\r\n\r\n    var url = \"\";\r\n    if (myBoard === true) {\r\n      url = \"/mypage/board/count\";\r\n    } else if (myInterestedBoard === true) {\r\n      url = \"/mypage/like/count\";\r\n    } else {\r\n      url = \"/boards/count\";\r\n    }\r\n    API.get(url, {\r\n      params: inputs,\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(response.data.result);\r\n        const lastPage = Math.ceil(response.data.result / size);\r\n        setPageCount(lastPage ? lastPage : 0);\r\n      } else {\r\n        console.log(\"페이지 개수 받아오기 실패\");\r\n        console.log(response.data);\r\n      }\r\n    });\r\n\r\n    if (page === 1) {\r\n      console.log(\"검색필터링 첫번째 페이지\");\r\n      var url = \"/boards/search\";\r\n      getBoardsByPage(url);\r\n    }\r\n  }, [inputs]);\r\n\r\n  useEffect(() => {\r\n    if (inputs.constructor === Object && Object.keys(inputs).length === 0) {\r\n      // 필터링 안할 때\r\n      var url = \"\";\r\n      if (myBoard === true) {\r\n        url = \"/mypage/board\";\r\n      } else if (myInterestedBoard === true) {\r\n        url = \"/mypage/like\";\r\n      } else {\r\n        url = \"/boards\";\r\n      }\r\n      getBoardsByPage(url);\r\n    } else {\r\n      // 필터링 할 때\r\n      // page 1 일때는 pagecount useeffect 에서 호출됨\r\n      console.log(\"새로운 검색\");\r\n      var url = \"/boards/search\";\r\n      getBoardsByPage(url);\r\n    }\r\n  }, [page]);\r\n\r\n  const getBoardsByPage = (url) => {\r\n    const params = Object.assign({},inputs);\r\n    params.page = page;\r\n    params.size = size;\r\n    \r\n\r\n    console.log(\"새로운 페이지 요청 params\", params);\r\n\r\n    API.get(url, {\r\n      params,\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(\"새로운 페이지 요청 결과\", response.data.result);\r\n        setData(response.data.result);\r\n      } else {\r\n        alert(\"인터넷 연결에 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BoardContainer>\r\n        {myBoard === false && myInterestedBoard === false && (\r\n          <Fragment>\r\n            <OptionTab\r\n              FilterVisibility\r\n              WriteVisibility\r\n              setOptions={setOptions}\r\n            ></OptionTab>\r\n          </Fragment>\r\n        )}\r\n        <BoardBody myBoard={myBoard} >\r\n          {data.map((item) => {\r\n            return (\r\n              <div>\r\n                <BoardBox\r\n                  item={item}\r\n                  key={item.postId}\r\n                  myBoard={myBoard}\r\n                ></BoardBox>\r\n              </div>\r\n            );\r\n          })}\r\n        </BoardBody>\r\n      </BoardContainer>\r\n      {data.length !== 0 && (\r\n        <footer>\r\n          <Pagination total={pageCount} page={page} setPage={setPage} />\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n\r\nBoard.defaultProps = {\r\n  myBoard: false,\r\n  myInterestedBoard: false,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabBar = styled.div`\r\n  background: transparent;\r\n  width: fit-content;\r\n  min-width: fit-content;\r\n  margin-bottom: 1rem;\r\n  white-space: nowrap;\r\n  margin-top: 80px;\r\n  margin-left: 10px;\r\n\r\n`;\r\n\r\nconst TabUl = styled.ul``;\r\n\r\nconst TabLi = styled.div`\r\n  font-size: 1vw;\r\n  font-weight: 300;\r\n  white-space: nowrap;\r\n  color: black;\r\n  padding-top: 1rem;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  padding-bottom: 1rem;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  border-color: rgb(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  text-align: center;\r\n\r\n  &.active {\r\n    background-color: rgb(243, 156, 18, 0.2);\r\n  }\r\n`;\r\n\r\nconst TabLink = styled(Link)`\r\n  text-decoration: none;\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nfunction MyPageTab() {\r\n  const currentTab = () => {\r\n    let path = window.location.pathname;\r\n\r\n    if (path === \"/mypage/my_comment\") return 2;\r\n    else if (path === \"/mypage/my_interested_animal\") return 3;\r\n    else if (path === \"/mypage/my_interested_board\") return 4;\r\n    else if (path === \"/mypage/edit_info\") return 5;\r\n    else if (path.includes(\"/mypage\")) return 1;\r\n  };\r\n\r\n  const [menu, setMenu] = useState(currentTab);\r\n\r\n  return (\r\n    <TabBar>\r\n      <TabUl>\r\n        <TabLink to=\"\">\r\n          <TabLi\r\n            className={menu === 1 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 1);\r\n            }}\r\n          >\r\n            내가 작성한 글\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"my_comment\">\r\n          <TabLi\r\n            className={menu === 2 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 2);\r\n            }}\r\n          >\r\n            내가 작성한 댓글\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"my_interested_animal\">\r\n          <TabLi\r\n            className={menu === 3 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 3);\r\n            }}\r\n          >\r\n            관심있는 동물\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"my_interested_board\">\r\n          <TabLi\r\n            className={menu === 4 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 4);\r\n            }}\r\n          >\r\n            관심있는 글\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"edit_info\">\r\n          <TabLi\r\n            className={menu === 5 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 5);\r\n            }}\r\n          >\r\n            내 정보 수정\r\n          </TabLi>\r\n        </TabLink>\r\n      </TabUl>\r\n    </TabBar>\r\n  );\r\n}\r\n\r\nexport default MyPageTab;\r\n","import React from \"react\";\r\nimport { Board } from './../pages/Board';\r\n\r\n\r\nfunction MyBoard() {\r\n  return (\r\n    <div style={{marginTop:\"100px\"}}>\r\n      <Board myBoard={true}></Board>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport API from \"./../utils/api\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nfunction MyComment() {\r\n  var size = 10;\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [checkedComments, setCheckedComments] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getMyComments(page, size);\r\n  }, [page]);\r\n\r\n  // 유기동물 리스트 조회하기\r\n  const getMyComments = (page, size) => {\r\n    var url = \"/comments/mypage\";\r\n\r\n    console.log(\"null\");\r\n    API.get(url, {\r\n      params: { page: page, size: size },\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        const pageCriteria = response.data.result.pageCriteriaDto;\r\n        const comments = response.data.result.commentList;\r\n\r\n        console.log(response.data);\r\n        setPageCount(pageCriteria.totalPage);\r\n        setComments(comments);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    });\r\n  };\r\n\r\n  // 전체 체크 클릭 시 발생하는 함수\r\n  const onCheckedAll = (checked) => {\r\n    if (checked) {\r\n      const checkedListArray = [];\r\n      comments.forEach((item) => checkedListArray.push(item));\r\n      setCheckedComments(checkedListArray);\r\n    } else {\r\n      setCheckedComments([]);\r\n    }\r\n  };\r\n\r\n  // 개별 체크 클릭 시 발생하는 함수\r\n  const onCheckedElement = (checked, item) => {\r\n    if (checked) {\r\n      setCheckedComments([...checkedComments, item]);\r\n    } else if (!checked) {\r\n      setCheckedComments(checkedComments.filter((el) => el !== item));\r\n    }\r\n  };\r\n\r\n  // 댓글 삭제\r\n  const onDelete = async () => {\r\n    var length = checkedComments.length;\r\n    var index = 0;\r\n    try {\r\n      for (const comment of checkedComments) {\r\n        index++;\r\n        console.log(comment);\r\n        await API.delete(\"/comments\" + \"/\" + comment.postId, {\r\n          data: {\r\n            // 서버에서 req.body.{} 로 확인할 수 있다.\r\n            commentId: comment.commentId,\r\n            userId: Number(sessionStorage.getItem(\"userID\")),\r\n          },\r\n          headers: {\r\n            \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              if (index === length) {\r\n                alert(\"댓글이 삭제되었습니다.\");\r\n                window.location.reload();\r\n              }\r\n              console.log(index);\r\n            } else {\r\n              alert(\"댓글 삭제에 실패하였습니다.\");\r\n              return;\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      }\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  // 게시물로 이동\r\n  const onGoToBoard = (postId) => {\r\n    navigate(\"/board/detail/\" + postId, { state: { myBoard: true } });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"100px\", marginLeft:\"20px\"}}>\r\n      {comments.map((item) => {\r\n        return (\r\n          <Container>\r\n            <Checkbox\r\n              type={\"checkbox\"}\r\n              key={item.commentId}\r\n              onChange={(e) => onCheckedElement(e.target.checked, item)}\r\n              checked={checkedComments.includes(item) ? true : false}\r\n            ></Checkbox>\r\n            <Box onClick={() => onGoToBoard(item.postId)}>\r\n              <Comment>{item.commentContent}</Comment>\r\n              <Option>{item.date}</Option>\r\n              <div style={{ display: \"flex\" }}>\r\n                <Option>{item.postTitle}</Option>\r\n                <Option style={{ color: \"orange\" }}>[8]</Option>\r\n              </div>\r\n            </Box>\r\n          </Container>\r\n        );\r\n      })}\r\n\r\n      <Divider></Divider>\r\n      <BottomBox>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Checkbox\r\n            type={\"checkbox\"}\r\n            style={{ marginRight: \"7px\" }}\r\n            onChange={(e) => onCheckedAll(e.target.checked)}\r\n            checked={\r\n              checkedComments.length === 0\r\n                ? false\r\n                : checkedComments.length === comments.length\r\n                ? true\r\n                : false\r\n            }\r\n          ></Checkbox>\r\n          <div style={{ fontSize: \"0.8rem\", marginTop: \"5px\" }}>전체선택</div>\r\n        </div>\r\n        <Button onClick={() => onDelete()}>삭제</Button>\r\n      </BottomBox>\r\n\r\n      {comments.length !== 0 && (\r\n        <footer>\r\n          <Pagination total={pageCount} page={page} setPage={setPage} />\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComment;\r\n\r\nconst Container = styled.div`\r\n  width: 50vw;\r\n  position: relative;\r\n  text-align: start;\r\n  display: flex;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  cursor: pointer;\r\n  width: 50%;\r\n  text-align: start;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n  font-size: 1em;\r\n  padding: 2px;\r\n`;\r\n\r\nconst Option = styled.div`\r\n  font-size: 0.8em;\r\n  padding: 2px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-top: 7px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: rgb(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst BottomBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 0.7em;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  margin-left: 10px;\r\n  background-color: white;\r\n  border: 1px solid rgba(64, 64, 64, 0.5);\r\n`;\r\n","import React from \"react\";\r\n\r\nimport AbandonedAnimal from \"../pages/AbandonedAnimal\";\r\n\r\nexport const MyInterestedAnimal = () => {\r\n  return (\r\n    <div style={{marginTop:\"100px\"}}>\r\n      <AbandonedAnimal myInterest={true}></AbandonedAnimal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyInterestedAnimal;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Board } from './../pages/Board';\r\n\r\nfunction MyInterestedBoard() {\r\n  return (\r\n    <div style={{marginTop:\"100px\"}}>\r\n    <Board myInterestedBoard={true} myBoard={true}></Board>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default MyInterestedBoard;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport API from \"./../utils/api\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const EditMyInfo = () => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    nickname: \"\",\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    phoneNum: \"\",\r\n  });\r\n  const { email, nickname, password, newPassword, phoneNum } = inputs; // 비구조화 할당을 통해 값 추출\r\n\r\n  /** 사진 관리 변수 */\r\n  const [prevProfileImg, setPrevProfileImg] = useState(\"\");\r\n  const default_profile_img = \"https://ifh.cc/g/jLgWsT.png\";\r\n  const [image, setImage] = useState({\r\n    image_file: \"\",\r\n    preview_URL: default_profile_img,\r\n  });\r\n\r\n  const [isProfileChanged, setIsProfileChanged] = useState(false);\r\n  const fileInput = useRef(null);\r\n\r\n  /** 닉네임 관리 변수 */\r\n  const [isNicknameChecked, setIsNicknameChecked] = useState(false); // 중복확인 완료\r\n\r\n  /** 비밀번호 관리 변수 */\r\n  const [isPasswordChecked, setIsPasswordChecked] = useState(false); // 비밀번호확인 완료\r\n\r\n  /** 연락처 관리 변수 */\r\n  const [prevPhoneNum, setPrevPhoneNum] = useState(\"\");\r\n\r\n  /** 프로필 사진 업로드 */\r\n  const OnProfileChange = (e) => {\r\n    //화면에 프로필 사진 표시\r\n    const reader = new FileReader();\r\n\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      setIsProfileChanged(true);\r\n    }\r\n    reader.onload = () => {\r\n      setImage({\r\n        image_file: e.target.files[0],\r\n        preview_URL: reader.result,\r\n      });\r\n    };\r\n  };\r\n\r\n  /** 닉네임 중복확인 */\r\n  const checkDuplicateNickname = async () => {\r\n    if (nickname.length === 0) {\r\n      alert(\"닉네임을 입력해주세요.\");\r\n    } else {\r\n      try {\r\n        const params = { nickname: nickname };\r\n        const res = await API.get(\"/users/chk-nickname\", { params }); // API 가 get 해올 때까지 기다리고, 결과 값을 res 에 담음\r\n        console.log(res.data);\r\n        if (res.data.isSuccess) {\r\n          setIsNicknameChecked(true);\r\n        } else {\r\n          alert(\"이미 사용중인 닉네임입니다.\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.get(\"/users/\" + Number(sessionStorage.getItem(\"userID\")), {\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        const data = response.data.result;\r\n        setPrevProfileImg(data.profileUrl);\r\n        setPrevPhoneNum(data.phoneNum);\r\n        console.log(data);\r\n\r\n        setInputs({\r\n          ...inputs,\r\n          email: data.email,\r\n          nickname: data.nickname,\r\n          phoneNum: data.phoneNum,\r\n        });\r\n        setImage({\r\n          image_file: \"\",\r\n          preview_URL:\r\n            data.profileUrl === null ? default_profile_img : data.profileUrl,\r\n        });\r\n      } else {\r\n        console.log(response.data.result);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onInputChange = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n\r\n    setInputs({\r\n      ...inputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value, // name 키를 가진 값을 value 로 설정\r\n    });\r\n\r\n    if (name === \"nickname\") {\r\n      setIsNicknameChecked(false);\r\n    } else if (name === \"password\") {\r\n      setIsPasswordChecked(false);\r\n    } else if (name === \"phoneNum\") {\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n          .replace(/[^0-9]/g, \"\")\r\n          .replace(\r\n            /(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/,\r\n            \"$1-$2-$3\"\r\n          )\r\n          .replace(\"--\", \"-\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmitProfile = async () => {\r\n    var deleteFlag = 0;\r\n    if (isProfileChanged && image.image_file !== \"\") {\r\n      // 수정된 것\r\n      console.log(\"수정됨(사진변경) 1\");\r\n    } else if (isProfileChanged && image.image_file === \"\") {\r\n      if (prevProfileImg === null) {\r\n        // 수정안된것\r\n        alert(\"사진이 수정되지 않았습니다.\");\r\n        return;\r\n      } else {\r\n        console.log(\"수정됨(사진 삭제) 3\");\r\n        deleteFlag = 1;\r\n      }\r\n    } else if (!isProfileChanged) {\r\n      alert(\"사진이 수정되지 않았습니다.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      if (deleteFlag === 1) {\r\n        // 프로필 사진 삭제\r\n        formData.append(\"deleteFlag\", 1);\r\n      } else {\r\n        formData.append(\"newProfileImg\", image.image_file);\r\n      }\r\n      if (prevProfileImg !== \"\") {\r\n        formData.append(\"originProfileImgUrl\", prevProfileImg);\r\n      }\r\n\r\n      // JSON.stringify(data)\r\n      await API.patch(\"/mypage/myInfo/profileImg\", formData, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"프로필 사진이 수정되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"프로필 사진 수정에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  const onSubmitNickName = async () => {\r\n    if (!isNicknameChecked) {\r\n      alert(\"닉네임 중복확인을 먼저 진행해주세요.\");\r\n      return;\r\n    } else {\r\n      try {\r\n        // JSON.stringify(data)\r\n        await API.patch(\r\n          \"/mypage/myInfo/nickname\",\r\n          JSON.stringify({ nickname: nickname }),\r\n          {\r\n            headers: {\r\n              \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              alert(\"닉네임이 수정되었습니다.\");\r\n              window.location.reload();\r\n            } else {\r\n              console.log(\"닉네임\", nickname);\r\n              console.log(response);\r\n              alert(\"닉네임 수정에 실패했습니다.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCheckPassword = async () => {\r\n    let data = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      // JSON.stringify(data)\r\n      await API.post(\"/mypage/myInfo/checkUser\", JSON.stringify(data), {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"비밀번호가 확인되었습니다.\");\r\n            setIsPasswordChecked(true);\r\n          } else {\r\n            console.log(response);\r\n            alert(\"비밀번호가 일치하지 않습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  const onSubmitPassword = async () => {\r\n    if (!isPasswordChecked) {\r\n      alert(\"현재 비밀번호 확인을 먼저 진행해주세요.\");\r\n      return;\r\n    } else {\r\n      try {\r\n        // JSON.stringify(data)\r\n        await API.patch(\r\n          \"/mypage/myInfo/password\",\r\n          JSON.stringify({ newPassword: newPassword }),\r\n          {\r\n            headers: {\r\n              \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              alert(\"비밀번호가 수정되었습니다.\");\r\n              window.location.reload();\r\n            } else {\r\n              console.log(response);\r\n              alert(\"비밀번호 수정에 실패했습니다.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmitPhonenum = async () => {\r\n    if (prevPhoneNum === phoneNum) {\r\n      alert(\"연락처가 수정되지 않았습니다.\");\r\n    } else {\r\n      try {\r\n        // JSON.stringify(data)\r\n        await API.patch(\r\n          \"/mypage/myInfo/phoneNum\",\r\n          JSON.stringify({ phoneNum: phoneNum }),\r\n          {\r\n            headers: {\r\n              \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              alert(\"연락처가 수정되었습니다.\");\r\n              window.location.reload();\r\n            } else {\r\n              console.log(response);\r\n              alert(\"연락처 수정에 실패했습니다.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{marginLeft:\"5vw\"}}>\r\n      <Title> 내 정보 수정</Title>\r\n      <Divider></Divider>\r\n      <Container>\r\n        <BoxContainer>\r\n          <Profile>\r\n            <ProfileText>프로필사진</ProfileText>\r\n            <ProfileImageWrap>\r\n              <ProfileImage src={image.preview_URL}></ProfileImage>\r\n              <input\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n                accept=\"image/*\"\r\n                name=\"profile_img\"\r\n                onChange={OnProfileChange}\r\n                ref={fileInput}\r\n              />\r\n              <div style={{ display: \"flex\" }}>\r\n                <SelectProfileBox\r\n                  onClick={() => {\r\n                    fileInput.current.click();\r\n                  }}\r\n                >\r\n                  사진 업로드\r\n                </SelectProfileBox>\r\n                <SelectProfileBox> | </SelectProfileBox>\r\n                <SelectProfileBox\r\n                  onClick={() => {\r\n                    setImage({\r\n                      image_file: \"\",\r\n                      preview_URL: default_profile_img,\r\n                    });\r\n                    setIsProfileChanged(true);\r\n                  }}\r\n                >\r\n                  삭제\r\n                </SelectProfileBox>\r\n              </div>\r\n            </ProfileImageWrap>\r\n          </Profile>\r\n          <EditBtn onClick={onSubmitProfile}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n        <Divider></Divider>\r\n        <BoxContainer>\r\n          <Box>\r\n            <BoxText>닉네임</BoxText>\r\n            <div style={{ display: \"flex\" }}>\r\n              <BoxSearch>\r\n                <InputSearch\r\n                  name=\"nickname\"\r\n                  onChange={onInputChange}\r\n                  value={nickname}\r\n                />\r\n                <BtnSearch onClick={checkDuplicateNickname}>중복확인</BtnSearch>\r\n              </BoxSearch>\r\n              {isNicknameChecked && (\r\n                <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n              )}\r\n            </div>\r\n          </Box>\r\n          <EditBtn onClick={onSubmitNickName}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n        <Divider></Divider>\r\n        <BoxContainer>\r\n          <div>\r\n            <Box style={{ marginBottom: \"20px\" }}>\r\n              <BoxText>현재 비밀번호</BoxText>\r\n              <div style={{ display: \"flex\" }}>\r\n                <BoxSearch>\r\n                  <InputSearch\r\n                    name=\"password\"\r\n                    onChange={onInputChange}\r\n                    value={password}\r\n                  />\r\n                  <BtnSearch onClick={onCheckPassword}>확인</BtnSearch>\r\n                </BoxSearch>\r\n                {isPasswordChecked && (\r\n                  <CheckIcon\r\n                    size=\"2x\"\r\n                    icon={faCheck}\r\n                    color=\"orange\"\r\n                  ></CheckIcon>\r\n                )}\r\n              </div>\r\n            </Box>\r\n            <Box>\r\n              <BoxText>새 비밀번호</BoxText>\r\n              <div style={{ display: \"flex\" }}>\r\n                <BoxSearch>\r\n                  <InputSearch\r\n                    name=\"newPassword\"\r\n                    onChange={onInputChange}\r\n                    value={newPassword}\r\n                  />\r\n                </BoxSearch>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n          <EditBtn onClick={onSubmitPassword}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n        <Divider></Divider>\r\n        <BoxContainer>\r\n          <Box>\r\n            <BoxText>연락처</BoxText>\r\n            <div style={{ display: \"flex\" }}>\r\n              <BoxSearch>\r\n                <InputSearch\r\n                  name=\"phoneNum\"\r\n                  onChange={onInputChange}\r\n                  value={phoneNum}\r\n                  maxLength=\"13\"\r\n                />\r\n              </BoxSearch>\r\n            </div>\r\n          </Box>\r\n          <EditBtn onClick={onSubmitPhonenum}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditMyInfo;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 100px;\r\n  font-weight: 700;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: rgb(0, 0, 0, 0.1);\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  margin-bottom: 200px;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  white-space: nowrap;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 80%;\r\n  text-align: left;\r\n  display: flex;\r\n  cursor: auto;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  border: none;\r\n`;\r\n\r\nconst BoxText = styled.div`\r\n  min-width: 13vw;\r\n  width: 13vw;\r\n  text-align: left;\r\n  display: inline-block;\r\n  margin-right: 2vw;\r\n  font-weight: bold;\r\n  font-size: 1vw;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  width: fit-content;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: auto;\r\n`;\r\n\r\nconst ProfileText = styled.div`\r\n  min-width: 13vw;\r\n  width: 13vw;\r\n  text-align: left;\r\n  display: inline-block;\r\n  margin-right: 2vw;\r\n  font-weight: bold;\r\n  font-size: 1vw;\r\n\r\n`;\r\n\r\nconst SelectProfileBox = styled.div`\r\n  width: fit-content;\r\n  text-align: left;\r\n  vertical-align: top;\r\n  margin-top: 5px;\r\n  padding: 1vw;\r\n  font-size: 1vw;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ProfileImageWrap = styled.div`\r\n  width: 15vw;\r\n  display: inline-block;\r\n  text-align: left;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 15vw;\r\n  height: 15vw;\r\n  display: inline-block;\r\n  justify-content: center;\r\n  padding: 3px;\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nconst EditBtn = styled.button`\r\n  width: 10vw;\r\n  max-width: fit-content;\r\n  border: none;\r\n  background-color: orange;\r\n  height: 5vh;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  color: white;\r\n  font-weight: bolder;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  font-size: 1vw;\r\n`;\r\n\r\nconst BoxSearch = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n\r\n`;\r\n\r\nconst InputSearch = styled.input`\r\n  width: 13vw;\r\n  height: 5vh;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  display: inline-block;\r\n  border-radius: 3px;\r\n  padding-inline: 1vw;\r\n  font-size: 1vw;\r\n  :focus {\r\n    outline: 2px solid gray;\r\n  }\r\n`;\r\n\r\nconst BtnSearch = styled.button`\r\n  min-width: fit-content;\r\n  height: 5vh;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  display: inline-block;\r\n  border-radius: 3px;\r\n  background-color: rgb(255, 224, 166);\r\n  font-size: 1vw;\r\n`;\r\n\r\nconst CheckIcon = styled(FontAwesomeIcon)`\r\n  margin-left: 10px;\r\n  line-height: 40px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\r\nimport MyPageTab from \"../components/MyPageTab\";\r\nimport styled from \"styled-components\";\r\nimport MyBoard from \"./../components/MyBoard\";\r\nimport MyComment from \"./../components/MyComment\";\r\nimport MyInterestedAnimal from \"./../components/MyInterestedAnimal\";\r\nimport MyInterestedBoard from \"./../components/MyInterestedBoard\";\r\nimport EditMyInfo from \"./../components/EditMyInfo\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  white-space: nowrap;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Box = styled.div`\r\nwidth: 65vw;\r\nmargin-left: 3vw;\r\nmargin-right: 3vw;\r\n`;\r\n\r\nfunction MyPage() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"userID\") === null) {\r\n      alert(\"로그인을 하신 후에 이용하실 수 있습니다.\");\r\n      navigate(\"/login\");\r\n    }\r\n  });\r\n  return (\r\n    <Container>\r\n      <MyPageTab></MyPageTab>\r\n      <Box>\r\n        <Routes>\r\n          <Route path=\"\" element={<MyBoard />}></Route>\r\n\r\n          <Route path=\"my_comment\" element={<MyComment />}></Route>\r\n\r\n          <Route\r\n            path=\"my_interested_animal\"\r\n            element={<MyInterestedAnimal />}\r\n          ></Route>\r\n\r\n          <Route\r\n            path=\"my_interested_board\"\r\n            element={<MyInterestedBoard />}\r\n          ></Route>\r\n          <Route path=\"edit_info\" element={<EditMyInfo />}></Route>\r\n\r\n          <Route path=\"*\" element={<Navigate to=\"/mypage\" replace />} />\r\n        </Routes>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MyPage;\r\n","import React, { useState } from \"react\";\r\nimport API from \"./../utils/api\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 950px;\r\n  height: fit-content;\r\n  margin-top: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px solid lightgray;\r\n  border-radius: 3px;\r\n  text-align: left;\r\n`;\r\n\r\nconst CommentInput = styled.textarea`\r\n  width: 900px;\r\n  line-height: 30px;\r\n  border: none;\r\n  size: 10;\r\n  word-break: break-all;\r\n  resize: none;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  font-size: 20px;\r\n  color: grey;\r\n  font-weight: bolder;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Count = styled.div`\r\n  text-align: end;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  justify-content: flex-end;\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const CommentWrite = ({ parentCommentId, postId, reply }) => {\r\n  const [commentInput, setCommentInput] = useState(\"\");\r\n  const [textAreaCount, setTextAreaCount] = useState(0);\r\n\r\n  const onInputChange = (e) => {\r\n    setCommentInput(e.currentTarget.value);\r\n    setTextAreaCount(e.target.value.length);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      let data = {\r\n        parentCommentId: parentCommentId,\r\n        postId: Number(postId),\r\n        content: commentInput,\r\n      };\r\n      await API.post(\"/comments\", JSON.stringify(data), {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"댓글이 등록되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"댓글 등록에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Count>\r\n        <span>{textAreaCount}</span>/200\r\n      </Count>\r\n      <CommentInput\r\n        placeholder=\"댓글을 입력해주세요.\"\r\n        onChange={onInputChange}\r\n        value={commentInput}\r\n        maxLength={199}\r\n      ></CommentInput>\r\n      <Box>\r\n        <Btn onClick={onSubmit}>등록</Btn>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import React, {\r\n  useState,\r\n\r\n} from \"react\";\r\nimport API from \"./../utils/api\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 950px;\r\n  height: fit-content;\r\n  margin-top: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px solid lightgray;\r\n  border-radius: 3px;\r\n  text-align: left;\r\n`;\r\n\r\nconst CommentInput = styled.textarea`\r\n  width: 900px;\r\n  line-height: 30px;\r\n  border: none;\r\n  size: 10;\r\n  word-break: break-all;\r\n  resize: none;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  font-size: 20px;\r\n  color: grey;\r\n  font-weight: bolder;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Count = styled.div`\r\n  text-align: end;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  justify-content: flex-end;\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const CommentUpdate = ({\r\n  commentId,\r\n  postId,\r\n  commentValue,\r\n  onCancle,\r\n}) => {\r\n  const [commentInput, setCommentInput] = useState(commentValue);\r\n  const [textAreaCount, setTextAreaCount] = useState(commentValue.length);\r\n\r\n  const onInputChange = (e) => {\r\n    setCommentInput(e.currentTarget.value);\r\n    setTextAreaCount(e.target.value.length);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      let data = {\r\n        commentId: commentId,\r\n        userId: Number(sessionStorage.getItem(\"userID\")),\r\n        postId: Number(postId),\r\n        content: commentInput,\r\n      };\r\n      await API.patch(\"/comments\", JSON.stringify(data), {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"댓글이 수정되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"댓글 수정에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Count>\r\n        <span>{textAreaCount}</span>/200\r\n      </Count>\r\n      <CommentInput\r\n        placeholder=\"댓글을 입력해주세요.\"\r\n        onChange={onInputChange}\r\n        value={commentInput}\r\n        maxLength={199}\r\n      ></CommentInput>\r\n      <Box>\r\n        <Btn onClick={onCancle}>취소</Btn>\r\n        <Btn onClick={onSubmit}>수정</Btn>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import React, {\r\n\r\n  useState,\r\n} from \"react\";\r\nimport API from \"../utils/api\";\r\nimport styled from \"styled-components\";\r\nimport { CommentWrite } from \"./CommentWrite\";\r\nimport { CommentUpdate } from \"./CommentUpdate\";\r\n\r\nconst Container = styled.div`\r\n  width: 1000px;\r\n  height: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: left;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  padding-left: ${(props) => (props.reply ? \"50px\" : \"0px\")};\r\n`;\r\n\r\nconst ProfileImage = styled.div`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProfileImageShow = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 30%;\r\n  object-fit: fill;\r\n`;\r\n\r\nconst ProfileName = styled.div`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  font-size: 20px;\r\n  width: ${(props) => (props.reply ? \"850px\" : \"900px\")};\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst ExtraInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst BoxContent = styled.div`\r\n  margin-right: 20px;\r\n  color: grey;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: rgb(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport const SingleComment = ({ comment, postId, reply }) => {\r\n  const [isEditChecked, setIsEditChecked] = useState(false);\r\n  const [isReplying, setIsReplying] = useState(false);\r\n\r\n  const onClickEdit = () => {\r\n    setIsEditChecked(!isEditChecked);\r\n  };\r\n\r\n  const onClickReply = () => {\r\n    setIsReplying(!isReplying);\r\n  };\r\n\r\n  const onEditCancle = () => {\r\n    setIsEditChecked(!isEditChecked);\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      await API.delete(\"/comments\" + \"/\" + postId, {\r\n        data: {\r\n          // 서버에서 req.body.{} 로 확인할 수 있다.\r\n          commentId: comment.commentId,\r\n          userId: Number(sessionStorage.getItem(\"userID\")),\r\n        },\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"댓글이 삭제되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"댓글 삭제에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isEditChecked && (\r\n        <Container reply={reply}>\r\n          <ProfileImage>\r\n            <ProfileImageShow\r\n              src={comment.profileImgUrl}\r\n              referrerpolicy=\"no-referrer\"\r\n            />\r\n          </ProfileImage>\r\n          <div>\r\n            <ProfileName>{comment.nickname}</ProfileName>\r\n            <ContentBox reply={reply}>{comment.content}</ContentBox>\r\n            <ExtraInfo>\r\n              <Box>\r\n                <BoxContent>{comment.commentUpdateAt}</BoxContent>\r\n                {!reply && (\r\n                  <BoxContent\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={onClickReply}\r\n                  >\r\n                    답글쓰기\r\n                  </BoxContent>\r\n                )}\r\n              </Box>\r\n              {Number(sessionStorage.getItem(\"userID\")) === comment.userId && (\r\n                <Box>\r\n                  <BoxContent\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={onClickEdit}\r\n                  >\r\n                    수정\r\n                  </BoxContent>\r\n                  <BoxContent style={{ cursor: \"pointer\" }} onClick={onDelete}>\r\n                    삭제\r\n                  </BoxContent>\r\n                </Box>\r\n              )}\r\n            </ExtraInfo>\r\n          </div>\r\n        </Container>\r\n      )}\r\n      {isEditChecked && (\r\n        <CommentUpdate\r\n          commentId={comment.commentId}\r\n          postId={postId}\r\n          commentValue={comment.content}\r\n          onCancle={onEditCancle}\r\n        ></CommentUpdate>\r\n      )}\r\n      {isReplying && (\r\n        <CommentWrite\r\n          parentCommentId={comment.commentId}\r\n          postId={postId}\r\n          reply={true}\r\n        ></CommentWrite>\r\n      )}\r\n      <Divider></Divider>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SingleComment } from \"./SingleComment\";\r\n\r\nexport const ReplyComments = ({ commentList, parentCommentId, postId }) => {\r\n  \r\n  const renderReplyComment = (parentCommentId) =>\r\n    commentList.map((comment) => (\r\n      <div>\r\n        {comment.parentCommentId === parentCommentId && (\r\n          <div>\r\n            <SingleComment reply={true} comment={comment} postId={postId} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n\r\n  return <div>{renderReplyComment(parentCommentId)}</div>;\r\n};\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport API from \"./../utils/api\";\r\nimport styled from \"styled-components\";\r\nimport { CommentWrite } from \"./CommentWrite\";\r\nimport { SingleComment } from \"./SingleComment\";\r\nimport { ReplyComments } from \"./ReplyComments\";\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 1000px;\r\n  height: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 80px;\r\n  margin-bottom: 100px;\r\n`;\r\n\r\nexport const BoardComment = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // 서버에서 댓글 조회하기\r\n  const getComments = () => {\r\n    API.get(\"/comments\", { params: { postId: postId } }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(response.data);\r\n        setComments(response.data.result);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    });\r\n  };\r\n  useEffect(getComments, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        {comments.map((item) => {\r\n          if (item.parentCommentId === 0) {\r\n            return (\r\n              <div >\r\n                <SingleComment comment={item} postId={postId}></SingleComment>\r\n                <ReplyComments commentList={comments} parentCommentId={item.commentId} postId={postId}></ReplyComments>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        <CommentWrite parentCommentId={0} postId={postId} reply={false} ></CommentWrite>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport API from \"./../utils/api\";\r\nimport { Link, useNavigate  } from \"react-router-dom\";\r\nimport profileImage from \"../images/profileImage.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as regularHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  width: 1000px;\r\n  height: auto;\r\n  padding: 30px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 100px;\r\n  /* border-color: orange; */\r\n  border: 5px orange solid;\r\n`;\r\nconst ProfileBox = styled.div`\r\n  width: max-content;\r\n  /* background-color: black; */\r\n  display: flex;\r\n`;\r\nconst ProfileImage = styled.div`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProfileImageShow = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 30%;\r\n  object-fit: fill;\r\n`;\r\nconst ProfileInfo = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n`;\r\nconst ProfileName = styled.div`\r\n  text-align: left;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\nconst ProfileDate = styled.div`\r\n  font-size: 15px;\r\n`;\r\nconst TitleBox = styled.div`\r\n  display: flex;\r\n  margin-top: 15px;\r\n`;\r\nconst Category = styled.div`\r\n  height: 50px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  font-size: 35px;\r\n  color: gray;\r\n  background-color: rgba(243, 156, 18, 0.22);\r\n`;\r\nconst Title = styled.div`\r\n  height: 50px;\r\n  margin-left: 15px;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  line-height: 50px;\r\n`;\r\nconst ContentBox = styled.div`\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  min-height: 300px;\r\n  text-align: start;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Photo = styled.img`\r\n  object-fit: fill;\r\n  width: 230px;\r\n  height: 120px;\r\n`;\r\n\r\nconst ExtraBox = styled.div`\r\n  width: 1000px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ExtraInfo = styled.div`\r\n  border: 2px solid rgba(64, 64, 64, 0.2);\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  line-height: 30px;\r\n`;\r\n\r\nconst LikeIcon = styled(FontAwesomeIcon)`\r\n  margin-left: 10px;\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ExtraButton = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  font-size: large;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  margin-left: 10px;\r\n  background-color: white;\r\n  border: 2px solid rgba(64, 64, 64, 0.5);\r\n`;\r\n\r\nexport const BoardContent = ({ postId, myBoard}) => {\r\n  // 1: \"기타\",\r\n  // 2: \"찾아주세요\",\r\n  // 3: \"봤어요\",\r\n  // 4: \"도와주세요\",\r\n\r\n  const navigate = useNavigate();\r\n  const [categoryText, setCategoryText] = useState(\"기타\");\r\n  const WEEKDAY = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\r\n  const [inputs, setInputs] = useState({\r\n    userId: 0,\r\n    nickname: \"\",\r\n    userImgUrl: \"\",\r\n    title: \"\",\r\n    category: 1,\r\n    content: \"\",\r\n    postCreateAt: \"\",\r\n    likeCount: 0,\r\n    commentCount: 0,\r\n    hits: 0,\r\n    userLiked: false,\r\n    imgList: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    API.get(\"/boards/\" + postId, {\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setInputs({\r\n          userId: response.data.result.board.userId,\r\n          nickname: response.data.result.board.nickname,\r\n          userImgUrl:\r\n            response.data.result.board.userImgUrl === null\r\n              ? profileImage\r\n              : response.data.result.board.userImgUrl,\r\n          title: response.data.result.board.title,\r\n          category: response.data.result.board.category,\r\n          content: response.data.result.board.content,\r\n          postCreateAt: response.data.result.board.postCreateAt,\r\n          likeCount: response.data.result.board.likeCount,\r\n          commentCount: response.data.result.board.commentCount,\r\n          hits: response.data.result.board.hits,\r\n          userLiked: response.data.result.userLiked,\r\n          imgList: response.data.result.imgList,\r\n        });\r\n        console.log(response.data);\r\n        // console.log(inputs);\r\n      })\r\n      .catch((err) => console.log(\"error:\", err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // 카테고리\r\n    switch (inputs.category) {\r\n      case 1:\r\n        setCategoryText(\"기타\");\r\n        break;\r\n      case 2:\r\n        setCategoryText(\"찾아주세요\");\r\n        break;\r\n      case 3:\r\n        setCategoryText(\"봤어요\");\r\n        break;\r\n      case 4:\r\n        setCategoryText(\"도와주세요\");\r\n        break;\r\n      default:\r\n        setCategoryText(\"default\");\r\n        break;\r\n    }\r\n  }, [inputs.category]);\r\n\r\n  // Date객체 내용 빼서 형식에 맞춰서 return\r\n  const dateTrans = () => {\r\n    let date = new Date(inputs.postCreateAt);\r\n    let week = WEEKDAY[date.getDay()];\r\n\r\n    date =\r\n      date.getFullYear() +\r\n      \"년\" +\r\n      (date.getMonth() + 1) +\r\n      \"월\" +\r\n      date.getDate() +\r\n      \"일 (\" +\r\n      week +\r\n      \") \" +\r\n      date.getHours() +\r\n      \":\" +\r\n      date.getMinutes();\r\n\r\n    console.log(date);\r\n    return date;\r\n  };\r\n\r\n  const onClickUpdate = () => {\r\n    const data = {\r\n      locPostId: postId,\r\n      locTitle: inputs.title,\r\n      locCategory: inputs.category,\r\n      // locRegion: inputs.region,\r\n      locContent: inputs.content,\r\n      locImgList: inputs.imgList,\r\n    }\r\n    navigate(\"/board/update\", { state: data });\r\n  };\r\n\r\n  const onClickDelete = () => {\r\n    API.delete(\"/boards/\" + postId, {\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n      body: {\r\n        userId: sessionStorage.getItem(\"userID\"),\r\n      },\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      alert(\"게시물이 삭제되었습니다.\");\r\n      if (myBoard === true){\r\n        navigate(\"/mypage\");\r\n      } else{\r\n        window.location.reload();\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  const Like = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"postId\", Number(postId));\r\n    if (inputs.userLiked === true) {\r\n      // 좋아요 취소\r\n      API.delete(\"/boards/like\", {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n        data: formData,\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          setInputs({\r\n            ...inputs, // 기존의 input 객체를 복사\r\n            userLiked: false,\r\n          });\r\n        }\r\n      });\r\n\r\n    } else {\r\n      // 좋아요 누르기\r\n      API.post(\"/boards/like\", formData, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          setInputs({\r\n            ...inputs, // 기존의 input 객체를 복사\r\n            userLiked: true,\r\n          });\r\n          console.log(response.data);\r\n        }\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <ProfileBox>\r\n          <ProfileImage>\r\n            <ProfileImageShow src={inputs.userImgUrl} />\r\n          </ProfileImage>\r\n          <ProfileInfo>\r\n            <ProfileName>{inputs.nickname}</ProfileName>\r\n            <ProfileDate>{dateTrans()}</ProfileDate>\r\n          </ProfileInfo>\r\n        </ProfileBox>\r\n        <TitleBox>\r\n          <Category>{categoryText}</Category>\r\n          <Title>{inputs.title}</Title>\r\n        </TitleBox>\r\n        <hr />\r\n        <ContentBox>{inputs.content}</ContentBox>\r\n        <div style={{ display: \"flex\" }}>\r\n          {inputs.imgList &&\r\n            inputs.imgList.map((item) => {\r\n              return <Photo src={item}></Photo>;\r\n            })}\r\n        </div>\r\n      </Container>\r\n      <ExtraBox>\r\n        <div style={{ display: \"flex\" }}>\r\n          <ExtraInfo>\r\n            좋아요 {inputs.likeCount}&nbsp;&nbsp;&nbsp;&nbsp; 댓글{\" \"}\r\n            {inputs.commentCount}&nbsp;&nbsp;&nbsp;&nbsp; 조회수 {inputs.hits}\r\n          </ExtraInfo>\r\n          <LikeIcon\r\n            size=\"2x\"\r\n            icon={inputs.userLiked ? solidHeart : regularHeart}\r\n            onClick={Like}\r\n          ></LikeIcon>\r\n        </div>\r\n        {inputs.userId === Number(sessionStorage.getItem(\"userID\")) && (\r\n          <ExtraButton>\r\n            <Button onClick={()=>onClickUpdate()}>수정</Button>\r\n            <Link to=\"/board\">\r\n              <Button onClick={()=>onClickDelete()}>삭제</Button>\r\n            </Link>\r\n          </ExtraButton>\r\n        )}\r\n      </ExtraBox>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nBoardContent.defaultProps = {\r\n  postId: 1,\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { BoardComment } from \"../components/BoardComment\";\r\nimport { BoardContent } from \"../components/BoardContent\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const BoardDetail = () => {\r\n  const location = useLocation();\r\n  const myBoard = location.state.myBoard;\r\n  let { postId } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <BoardContent postId={postId} myBoard={myBoard} />\r\n      </div>\r\n      <div>\r\n        <BoardComment postId={postId} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","/*global kakao */\r\nimport React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport doghouse from \"../images/doghouse.png\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 100px;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100vw;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n`;\r\nconst HomeImg = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Intro = styled.div`\r\n  font-size: x-large;\r\n  font-weight: bolder;\r\n  text-align: left;\r\n  padding-top: 1vh;\r\n  color: orange;\r\n`;\r\n\r\nconst MapWrapper = styled.div`\r\n  /* position: sticky; */\r\n  margin-bottom: 100px;\r\n  position: relative;\r\n  width: 90vw;\r\n  height: 600px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 35vw;\r\n  margin: 10px 0 30px 10px;\r\n  padding: 5px;\r\n  overflow-y: auto;\r\n  background: rgba(255, 255, 255, 0.7);\r\n  z-index: 1;\r\n  font-size: 12px;\r\n  border-radius: 10px;\r\n  text-align: start;\r\n`;\r\n\r\nconst Map = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 10px;\r\n  border: solid;\r\n  border-color: orange;\r\n  border-width: 5px;\r\n`;\r\n\r\nconst Pagination = styled.div`\r\n  text-align: center;\r\n  a {\r\n    color: black;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    margin: 0 10px;\r\n    cursor: pointer;\r\n\r\n    &.on {\r\n      color: orange;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PlacesList = styled.ul`\r\n  margin-top: 20px;\r\n  \r\n\r\n  li {\r\n    list-style: none;\r\n\r\n    &.item {\r\n      position: relative;\r\n      border-bottom: 1px solid #888;\r\n \r\n      cursor: pointer;\r\n      min-height: 65px;\r\n \r\n      span {\r\n        display: block;\r\n        margin-top: 4px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CenterMap() {\r\n  var keyword = \"유기동물 보호소\";\r\n\r\n  var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n  var markers = [];\r\n  const options = {\r\n    center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n    level: 13,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"myMap\");\r\n    const map = new kakao.maps.Map(container, options);\r\n\r\n    const ps = new kakao.maps.services.Places();\r\n\r\n    searchPlaces();\r\n\r\n    // 키워드 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n      // // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n      ps.keywordSearch(keyword, placesSearchCB);\r\n    }\r\n\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n        map.setBounds(bounds);\r\n        displayPlaces(data);\r\n        displayPagination(pagination);\r\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n        alert(\"검색 결과가 존재하지 않습니다.\");\r\n        return;\r\n      } else if (status === kakao.maps.services.Status.ERROR) {\r\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 검색결과 목록 하단에 페이지 번호 표시\r\n    function displayPagination(pagination) {\r\n      var paginationEl = document.getElementById(\"pagination\"),\r\n        fragment = document.createDocumentFragment(),\r\n        i;\r\n\r\n      // 기존에 추가된 페이지 번호 삭제\r\n      while (paginationEl.hasChildNodes()) {\r\n        paginationEl.removeChild(paginationEl.lastChild);\r\n      }\r\n\r\n      for (i = 1; i <= pagination.last; i++) {\r\n        var el = document.createElement(\"a\");\r\n        el.innerHTML = i;\r\n\r\n        if (i === pagination.current) {\r\n          el.className = \"on\";\r\n        } else {\r\n          el.onclick = (function (i) {\r\n            return function () {\r\n              pagination.gotoPage(i);\r\n            };\r\n          })(i);\r\n        }\r\n\r\n        fragment.appendChild(el);\r\n      }\r\n      paginationEl.appendChild(fragment);\r\n    }\r\n\r\n    // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n    function displayPlaces(places) {\r\n      var listEl = document.getElementById(\"placesList\"),\r\n        menuEl = document.getElementById(\"menu_wrap\"),\r\n        fragment = document.createDocumentFragment(),\r\n        bounds = new kakao.maps.LatLngBounds();\r\n\r\n      // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n      removeAllChildNods(listEl);\r\n\r\n      // 지도에 표시되고 있는 마커를 제거합니다\r\n      removeMarker();\r\n\r\n      for (var i = 0; i < places.length; i++) {\r\n        // 마커를 생성하고 지도에 표시합니다\r\n        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n          marker = addMarker(placePosition, i),\r\n          itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        bounds.extend(placePosition);\r\n\r\n        // 마커와 검색결과 항목에 mouseover 했을때\r\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n        (function (marker, title) {\r\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\r\n            displayInfowindow(marker, title);\r\n          });\r\n\r\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\r\n            infowindow.close();\r\n          });\r\n\r\n          itemEl.onmouseover = function () {\r\n            displayInfowindow(marker, title);\r\n          };\r\n\r\n          itemEl.onmouseout = function () {\r\n            infowindow.close();\r\n          };\r\n        })(marker, places[i].place_name);\r\n\r\n        fragment.appendChild(itemEl);\r\n      }\r\n\r\n      // 검색결과 항목들을 검색결과 목록 Element에 추가합니다\r\n      listEl.appendChild(fragment);\r\n      menuEl.scrollTop = 0;\r\n\r\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n      map.setBounds(bounds);\r\n    }\r\n\r\n    // 검색결과 항목을 Element로 반환하는 함수입니다\r\n    function getListItem(index, place) {\r\n      const imgHeight = 10 + index * 46;\r\n      var el = document.createElement(\"li\"),\r\n        itemStr =\r\n          '<span class=\"markerbg marker_' +\r\n          (index + 1) +\r\n          '\" style=\"float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 0px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;  background-position: 0 -' +\r\n          imgHeight +\r\n          'px;\"></span>' +\r\n          '<div class=\"info\" style=\"padding:10px 0px 10px 55px; font-size:1vw\">' +\r\n          \"   <h6>\" +\r\n          place.place_name +\r\n          \"</h6>\";\r\n\r\n      if (place.road_address_name) {\r\n        itemStr +=\r\n          \"    <span>\" +\r\n          place.road_address_name +\r\n          \"</span>\" +\r\n          '   <span class=\"jibun gray\" style=\"color:#8a8a8a;padding-left:26px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;\">' +\r\n          place.address_name +\r\n          \"</span>\";\r\n      } else {\r\n        itemStr += \"    <span>\" + place.address_name + \"</span>\";\r\n      }\r\n\r\n      itemStr +=\r\n        '  <span class=\"tel\" style=\"color:#009900;\">' +\r\n        place.phone +\r\n        \"</span>\" +\r\n        \"</div>\";\r\n\r\n      el.innerHTML = itemStr;\r\n      el.className = \"item\";\r\n\r\n      return el;\r\n    }\r\n\r\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n    function removeMarker() {\r\n      for (var i = 0; i < markers.length; i++) {\r\n        markers[i].setMap(null);\r\n      }\r\n      markers = [];\r\n    }\r\n\r\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n    function addMarker(position, idx, title) {\r\n      var imageSrc =\r\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n        imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n        imgOptions = {\r\n          spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n          offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n        },\r\n        markerImage = new kakao.maps.MarkerImage(\r\n          imageSrc,\r\n          imageSize,\r\n          imgOptions\r\n        ),\r\n        marker = new kakao.maps.Marker({\r\n          position: position, // 마커의 위치\r\n          image: markerImage,\r\n        });\r\n\r\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n      markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n\r\n      return marker;\r\n    }\r\n\r\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n    // 인포윈도우에 장소명을 표시합니다\r\n    function displayInfowindow(marker, title) {\r\n      var content =\r\n        '<div style=\"padding:10px; width:max-content;\">' + title + \"</div>\";\r\n\r\n      infowindow.setContent(content);\r\n      infowindow.open(map, marker);\r\n    }\r\n\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el) {\r\n      while (el.hasChildNodes()) {\r\n        el.removeChild(el.lastChild);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <HomeImg src={doghouse}></HomeImg>\r\n        <Intro>전국 유기동물 보호소</Intro>\r\n      </Container>\r\n\r\n      <MapWrapper>\r\n        <Map id=\"myMap\"></Map>\r\n        <ListWrapper id=\"menu_wrap\">\r\n          <PlacesList id=\"placesList\"></PlacesList>\r\n          <Pagination id=\"pagination\"></Pagination>\r\n        </ListWrapper>\r\n      </MapWrapper>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport styles from \"../styles/BoardEditor.module.css\";\r\nimport styled from \"styled-components\";\r\nimport API from \"../utils/api\";\r\n\r\nconst InputPicker = styled.select`\r\n  width: 955px;\r\n  height: 50px;\r\n  text-align: left;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const BoardUpdate = () => {\r\n  // inputPostId,\r\n  // inputTitle,\r\n  // inputCategory,\r\n  // inputRegion,\r\n  // inputContent,\r\n  // inputImgList,\r\n  const location = useLocation();\r\n\r\n  console.log(\"===location===\");\r\n  console.log(location.state);\r\n\r\n  let [showImages, setShowImages] = useState(location.state.locImgList);\r\n  const [sendingImg, setSendingImg] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    category: location.state.locCategory,\r\n    region: 1,\r\n    content: location.state.locContent,\r\n    title: location.state.locTitle,\r\n    userId: sessionStorage.getItem(\"userID\"),\r\n  });\r\n\r\n  const [postId, setPostId] = useState(location.state.locPostId);\r\n\r\n  useEffect(() => {\r\n    if (location.state.locImgList != null) {\r\n      location.state.locImgList.map((item) => {\r\n        const convertURLtoFile = async (item) => {\r\n          const response = await fetch(item);\r\n          const data = await response.blob();\r\n          const ext = item.split(\".\").pop();\r\n          const filename = item.split(\"/\").pop(); // 맨 뒤에를  file명으로..\r\n          const metadata = { type: `image/${ext}` };\r\n          return new File([data], filename, metadata);\r\n        };\r\n\r\n        convertURLtoFile(item).then((response) => {\r\n          sendingImg.push(response);\r\n        }); // 첫번째 then\r\n      });\r\n    }\r\n    // fetch(item,\r\n    //   {\r\n    //     mode:\"no-cors\"\r\n    //   }).then(async (response) => {\r\n    //   const contentType = response.headers.get(\"content-type\");\r\n    //   const blob = await response.blob();\r\n    //   const file = new File([blob], \"image.\"+ item.slice(-3), { contentType });\r\n    //   console.log(\"파일변환\",file);\r\n    //   sendingImg.push(file);\r\n    //   // access file here\r\n    // });\r\n\r\n    // setShowImages(imageUrlLists);\r\n  }, []);\r\n\r\n  /** input 입력 시 title, content 내용 변경 */\r\n  const onChangeData = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      category: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeRegion = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      region: e.target.value,\r\n    });\r\n  };\r\n\r\n  // category select\r\n  const handleSelect = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      categoy: e.target.value,\r\n    });\r\n    console.log(\"handle select\");\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  /** 사진 추가 */\r\n  const handleAddImages = (event) => {\r\n    const imageLists = event.target.files;\r\n    let imageUrlLists = [...showImages];\r\n\r\n    for (let i = 0; i < imageLists.length; i++) {\r\n      const currentImageUrl = URL.createObjectURL(imageLists[i]);\r\n      imageUrlLists.push(currentImageUrl);\r\n      sendingImg.push(imageLists[i]);\r\n    }\r\n\r\n    console.log(\"사진\", sendingImg);\r\n\r\n    if (imageUrlLists.length > 10) {\r\n      imageUrlLists = imageUrlLists.slice(0, 10);\r\n      sendingImg = sendingImg.slice(0, 10);\r\n    }\r\n\r\n    setShowImages(imageUrlLists);\r\n  };\r\n\r\n  /** 사진 삭제 */\r\n  const handleDeleteImage = (id) => {\r\n    setShowImages(showImages.filter((_, index) => index !== id));\r\n    setSendingImg(sendingImg.filter((_, index) => index !== id));\r\n  };\r\n\r\n  /** 확인버튼 누르면 데이터 서버로 전송 */\r\n  const onClickUpload = async () => {\r\n    // console.log(postId);\r\n    // console.log(inputs);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", inputs.title);\r\n      formData.append(\"category\", Number(inputs.category));\r\n      formData.append(\"region\", Number(inputs.region));\r\n      formData.append(\"content\", inputs.content);\r\n\r\n      Object.values(sendingImg).forEach((image) =>\r\n        formData.append(\"imgFiles\", image)\r\n      );\r\n\r\n      for (var value of formData.values()) {\r\n        console.log(\"파일값\", value);\r\n      }\r\n\r\n      // JSON.stringify(data)\r\n      await API.patch(`/boards/update/${postId}`, formData, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"게시물이 수정되었습니다.\");\r\n            navigate(\"/board/detail/\" + postId, { state: { myBoard: false } });\r\n          } else {\r\n            console.log(response);\r\n            alert(\"게시물 수정에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.frag}>\r\n      <div className={styles.container}>\r\n        {/* title */}\r\n        <div>\r\n          <input\r\n            className={styles.title}\r\n            type=\"text\"\r\n            placeholder=\" 제목\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            onChange={onChangeData}\r\n            defaultValue={inputs.title}\r\n          />\r\n        </div>\r\n        <div>\r\n          <InputPicker\r\n            style={{ marginBottom: \"20px\" }}\r\n            onChange={onChangeCategory}\r\n            defaultValue={inputs.category}\r\n          >\r\n            <option key={1} value={1}>\r\n              기타\r\n            </option>\r\n            <option key={2} value={2}>\r\n              찾아주세요\r\n            </option>\r\n            <option key={3} value={3}>\r\n              봤어요\r\n            </option>\r\n            <option key={4} value={4}>\r\n              도와주세요\r\n            </option>\r\n          </InputPicker>\r\n          <InputPicker onChange={onChangeRegion} defaultValue={inputs.region}>\r\n            <option key={1} value={1}>\r\n              서울\r\n            </option>\r\n            <option key={2} value={2}>\r\n              경기도\r\n            </option>\r\n            <option key={3} value={3}>\r\n              인천\r\n            </option>\r\n            <option key={4} value={4}>\r\n              강원도\r\n            </option>\r\n            <option key={5} value={5}>\r\n              충청도\r\n            </option>\r\n            <option key={6} value={6}>\r\n              경상도\r\n            </option>\r\n            <option key={7} value={7}>\r\n              전라도\r\n            </option>\r\n            <option key={8} value={8}>\r\n              제주도\r\n            </option>\r\n          </InputPicker>\r\n        </div>\r\n        {/* content */}\r\n        <div>\r\n          <textarea\r\n            type=\"textarea\"\r\n            className={styles.content}\r\n            id=\"content\"\r\n            name=\"content\"\r\n            onChange={onChangeData}\r\n            defaultValue={inputs.content}\r\n          />\r\n        </div>\r\n        {/* 파일 업로드 부분 */}\r\n        <div>\r\n          <div>\r\n            {/* <strong>업로드 이미지</strong> */}\r\n            <div className={styles.file__container}>\r\n              {showImages.map((image, id) => (\r\n                <div className={styles.ImageBox} key={id}>\r\n                  <img\r\n                    className={styles.imageContainer}\r\n                    src={image}\r\n                    alt={`${image}`}\r\n                  />\r\n                  <div>\r\n                    <button onClick={() => handleDeleteImage(id)}>삭제</button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <form className={styles.ImageSelect}>\r\n            <input\r\n              type=\"file\"\r\n              id=\"image\"\r\n              accept=\"img/*\"\r\n              multiple=\"multiple\"\r\n              onChange={handleAddImages}\r\n            />\r\n            <label htmlFor=\"image\"></label>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn__container}>\r\n        <Link to=\"/board\">\r\n          <button className={styles.btn__cancel}>취소</button>\r\n        </Link>\r\n        <button className={styles.btn__confirm} onClick={onClickUpload}>\r\n          수정\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {  useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Tab from \"./components/Tab\";\r\nimport Login from \"./pages/Login\";\r\nimport { NotFound } from \"./pages/NotFound\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport { BoardEditor } from \"./components/BoardEditor\";\r\nimport { Board } from \"./pages/Board\";\r\nimport AbandonedAnimal from \"./pages/AbandonedAnimal\";\r\nimport MyPage from \"./pages/MyPage\";\r\nimport { BoardDetail } from \"./pages/BoardDetail\";\r\nimport CenterMap from \"./pages/CenterMap\";\r\nimport { BoardUpdate } from \"./components/BoardUpdate\";\r\n\r\nfunction App() {\r\n\r\n  // 로그인 상태 관리\r\n  const [isLogin, setIsLogin] = useState(\r\n    sessionStorage.getItem(\"userJWT\") != null ? true : false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isLogin === false) {\r\n      console.log(\"false\");\r\n    } else {\r\n      console.log(\"true\");\r\n    }\r\n  });\r\n\r\n  const currentTab = () => {\r\n    let path = window.location.pathname;\r\n    if (path === \"/\") return 1;\r\n    else if (path === \"/board\") return 2;\r\n    else if (path === \"/*\") return 3;\r\n    else if (path.includes(\"/mypage/\")) return 4;\r\n  };\r\n\r\n  const [tabMenu, setTabMenu] = useState(currentTab);\r\n\r\n  const tabMenuChange = (tabMenu) => {\r\n    setTabMenu(tabMenu);\r\n  };\r\n\r\n  const isLoginChange = (isLogin) => {\r\n    setIsLogin(isLogin);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{width:\"100vw\",overflow : \"hidden\"}}>\r\n      <BrowserRouter>\r\n        <Header\r\n          tabMenu={tabMenu}\r\n          tabMenuChange={tabMenuChange}\r\n          isLogin={isLogin}\r\n          isLoginChange={isLoginChange}\r\n        />\r\n        <Tab tabMenu={tabMenu} tabMenuChange={tabMenuChange} />\r\n        <Routes>\r\n          <Route path=\"/\" element={<AbandonedAnimal />}></Route>\r\n          <Route path=\"/board\" element={<Board />}></Route>\r\n          <Route path=\"/centermap\" element={<CenterMap />}></Route>\r\n          <Route path=\"*\" element={<NotFound />}></Route>\r\n          <Route path=\"/mypage/*\" element={<MyPage />}></Route>\r\n          <Route path=\"/signup\" element={<SignUp />}></Route>\r\n          <Route path=\"/board/edit\" element={<BoardEditor />}></Route>\r\n          <Route path=\"/board/update\" element={<BoardUpdate />}></Route>\r\n          <Route path=\"/login\" element={<Login />}></Route>\r\n          <Route path=\"/board/detail/:postId\" element={<BoardDetail />}></Route>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <BoardDetail /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/profileImage.5405d77c.png\";"],"sourceRoot":""}