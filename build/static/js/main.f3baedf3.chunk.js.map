{"version":3,"sources":["styles/BoardEditor.module.css","components/Header.js","components/Tab.js","utils/api.js","pages/Login.js","pages/NotFound.js","utils/utils.js","pages/SignUp.js","components/BoardEditor.js","components/OptionTab.js","components/BoardBox.js","components/Pagination.js","pages/Board.js","components/AnimalItem.js","components/AnimalPopup.js","pages/AbandonedAnimal.js","components/MyPageTab.js","components/MyBoard.js","components/MyComment.js","components/MyInterestedAnimal.js","components/MyInterestedBoard.js","components/EditMyInfo.js","pages/MyPage.js","components/CommentWrite.js","components/CommentUpdate.js","components/SingleComment.js","components/ReplyComments.js","components/BoardComment.js","components/BoardContent.js","pages/BoardDetail.js","pages/CenterMap.js","components/BoardUpdate.js","App.js","reportWebVitals.js","index.js","images/profileImage.png","images/header_dog.jpg","images/doghouse.png"],"names":["module","exports","frag","container","title","content","btn__container","btn__cancel","btn__confirm","ImageSelect","file__container","imageContainer","ImageBox","Top","styled","div","_templateObject","Object","taggedTemplateLiteral","headerImage","HeaderText","_templateObject2","Container","_templateObject3","ContainerText","_templateObject4","Header","props","setTabMenu","menu","tabMenuChange","react_default","a","createElement","isLogin","react_router_dom","to","onClick","sessionStorage","removeItem","isLoginChange","alert","TabBar","Tab_templateObject","TabUl","ul","Tab_templateObject2","TabLi","Tab_templateObject3","Tab","_useState","useState","tabMenu","_useState2","slicedToArray","setMenu","useEffect","className","API","axios","create","baseURL","timeout","Login_templateObject","Login_templateObject2","BoxContainer","Login_templateObject3","Box","input","Login_templateObject4","LoginBtn","button","_templateObject5","Bottom","_templateObject6","Signup","span","_templateObject7","IdSearch","_templateObject8","PwSearch","_templateObject9","BottomRight","_templateObject10","Login","navigate","useNavigate","email","password","inputs","setInputs","onInputChange","e","_e$target","target","value","name","objectSpread","defineProperty","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","post","JSON","stringify","headers","Content-Type","then","response","isSuccess","setItem","result","userJWT","userId","profileImgUrl","window","location","reload","message","catch","error","console","log","t0","stop","apply","this","arguments","Login_Container","Login_Header","placeholder","onChange","NotFound","AuthLogin","jwt","get","X-ACCESS-TOKEN","SignUp_templateObject","SignUp_templateObject2","SignUp_templateObject3","BoxWrapper","SignUp_templateObject4","SignUp_templateObject5","BoxText","SignUp_templateObject6","Profile","SignUp_templateObject7","ProfileText","SignUp_templateObject8","SelectProfileBox","SignUp_templateObject9","ProfileImageWrap","SignUp_templateObject10","ProfileImage","img","_templateObject11","CheckIcon","FontAwesomeIcon","_templateObject12","BtnWrap","_templateObject13","Btn","_templateObject14","background","BoxSearch","_templateObject15","InputSearch","_templateObject16","ErrorNotification","_templateObject17","BtnSearch","_templateObject18","SignUp","id","nickname","passwordCheck","phoneNumber","_useState3","image_file","preview_URL","_useState4","image","setImage","_useState5","_useState6","defaultImg","setDefaultImg","fileInput","useRef","_useState7","_useState8","isIdChecked","setIsIdChecked","_useState9","_useState10","isIdValidate","setIsIdValidate","_useState11","_useState12","idNotification","setIdNotification","_useState13","_useState14","idOpacity","setIdOpacity","idNotiArray","_useState15","_useState16","idNotiText","setIdNotiText","_useState17","_useState18","isNicknameChecked","setIsNicknameChecked","_useState19","_useState20","nicknameNotification","setNicknameNotification","_useState21","_useState22","isNicknameValidate","setIsNicknameValidate","_useState23","_useState24","nicknameOpacity","setNicknameOpacity","_useState25","_useState26","isPwChecked","setIsPwChecked","_useState27","_useState28","pwNotification","setPwNotification","_useState29","_useState30","pwCheckNotification","setPwCheckNotification","pwNotiArray","_useState31","_useState32","pwNotiText","setPwNotiText","_useState33","_useState34","isPhonenumChecked","setIsPhonenumChecked","_useState35","_useState36","phoneNumNotification","setPhoneNumNotification","_useState37","_useState38","isAllChecked","setIsAllChecked","setPasswordValidation","length","test","replace","checkDuplicateId","params","res","sent","checkDuplicateNickname","_ref2","_callee2","_context2","_ref3","_callee3","formData","_context3","FormData","append","type","SignUp_Container","SignUp_Header","SignUp_BoxContainer","src","style","display","accept","reader","FileReader","files","readAsDataURL","onload","ref","marginBottom","current","click","SignUp_Box","disabled","opacity","size","icon","faCheck","color","width","maxLength","InputPicker","select","BoardEditor_templateObject","BoardEditor","showImages","setShowImages","sendingImg","setSendingImg","category","region","getItem","postId","setPostId","patchState","onChangeData","onClickUpload","abrupt","Number","values","forEach","method","concat","state","myBoard","styles","key","map","alt","filter","_","index","handleDeleteImage","multiple","event","imageLists","imageUrlLists","toConsumableArray","i","currentImageUrl","URL","createObjectURL","push","slice","readOnlyError","htmlFor","defaultProps","patchPostId","imgList","OptionTab_templateObject","ContainerSearch","OptionTab_templateObject2","OptionTab_templateObject3","BoxRegion","OptionTab_templateObject4","BoxCate","OptionTab_templateObject5","BoxFilter","OptionTab_templateObject6","FilterVisibility","BoxDate","OptionTab_templateObject7","BoxOption","OptionTab_templateObject8","BtnWrite","OptionTab_templateObject9","WriteVisibility","BtnImgSearch","OptionTab_templateObject10","ImgSearchVisibility","OptionTab_templateObject11","OptionTab_templateObject12","OptionTab_templateObject13","TextDate","OptionTab_templateObject14","InputDate","OptionTab_templateObject15","OptionTab","InterestText","OptionTab_Container","OptionTab_BoxSearch","OptionTab_InputSearch","OptionTab_BtnSearch","OptionTab_InputPicker","preventDefault","BoardBox_templateObject","Box1","BoardBox_templateObject2","Box2","BoardBox_templateObject3","Title","BoardBox_templateObject4","Content","BoardBox_templateObject5","BoxProfile","BoardBox_templateObject6","TextInfo","BoardBox_templateObject7","BoxProfilePhoto","BoardBox_templateObject8","Photo","BoardBox_templateObject9","BoardBox_templateObject10","popUp","BoardBox","item","postLike","likeCount","commentLike","commentCount","profile","userImgUrl","profileImage","textDecoration","react","BoardBox_Container","BoardBox_ProfileImage","marginRight","fontWeight","hits","thumbnail","Nav","nav","Pagination_templateObject","Button","Pagination_templateObject2","isActive","Pagination","total","page","setPage","start","end","showingNum","setShowingNum","arrowHandler","sign","totalPage","nextIndex","isFirstPage","isLastPage","pages","array","getEmptyArray","PageButton","setCurrentPage","Fragment","p","idx","BoardContainer","Board_templateObject","BoardBody","Board_templateObject2","Board","myInterestedBoard","pageCount","setPageCount","setData","url","lastPage","Math","ceil","components_OptionTab","BoardBox_BoardBox","components_Pagination","AnimalItem_templateObject","processState","AnimalItem_templateObject2","HeaderLeft","AnimalItem_templateObject3","RecruitState","AnimalItem_templateObject4","AnimalGender","AnimalItem_templateObject5","LikeIcon","AnimalItem_templateObject6","DogImage","AnimalItem_templateObject7","DogInfo","AnimalItem_templateObject8","DogInfoDetail","AnimalItem_templateObject9","AnimalItem","onView","animalId","sexCd","neuterYn","kindCd","happenDt","orgNm","happenPlace","popfile","likeFlag","gender","neuter","AnimalItem_Container","AnimalItem_Box","solidHeart","regularHeart","AnimalPopup","onClose","getAnimalInfo","like","setLike","setAnimal","desertionNo","filename","colorCd","age","weight","noticeNo","noticeSdt","noticeEdt","specialMark","careNm","careTe","careAddr","animal","DarkBackground","DialogBlock","AnimalPopup_Header","CloseBtn","closeBtn","Body","AnimalPopup_DogImage","RecruiteState","TextBox","ImageBottomBox","DogKind","AnimalPopup_LikeIcon","delete","animalIdList","parse","URLSearchParams","toString","DogInfoText","Divider","DogInfoTextBox","DogInfoTitle","careTel","AnimalPopup_templateObject","AnimalPopup_templateObject2","AnimalPopup_templateObject3","AnimalPopup_templateObject4","AnimalPopup_templateObject5","AnimalPopup_templateObject6","AnimalPopup_templateObject7","AnimalPopup_templateObject8","AnimalPopup_templateObject9","AnimalPopup_templateObject10","AnimalPopup_templateObject11","AnimalPopup_templateObject12","AnimalPopup_templateObject13","AnimalPopup_templateObject14","AnimalPopup_templateObject15","AnimalPopup_templateObject16","AbandonedAnimal","myInterest","dialog","setDialog","animals","setAnimals","currentAnimal","setCurrentAnimal","setReload","getAnimalList","pageCriteria","animalSimpleInfo","find","AbandonedAnimal_Body","AbandonedAnimal_Container","components_AnimalItem","components_AnimalPopup","AbandonedAnimal_templateObject","AbandonedAnimal_templateObject2","MyPageTab_templateObject","MyPageTab_templateObject2","MyPageTab_templateObject3","TabLink","Link","MyPageTab_templateObject4","MyPageTab","path","pathname","includes","MyPageTab_TabBar","MyPageTab_TabUl","MyPageTab_TabLi","MyBoard","marginTop","marginLeft","Board_Board","MyComment","checkedComments","setCheckedComments","comments","setComments","getMyComments","pageCriteriaDto","commentList","onDelete","_iterator","_step","comment","_createForOfIteratorHelper","s","n","done","commentId","f","finish","t1","MyComment_Container","Checkbox","checked","el","onCheckedElement","MyComment_Box","Comment","commentContent","Option","date","postTitle","MyComment_Divider","BottomBox","checkedListArray","onCheckedAll","fontSize","MyComment_Button","MyComment_templateObject","MyComment_templateObject2","MyComment_templateObject3","MyComment_templateObject4","MyComment_templateObject5","MyComment_templateObject6","MyComment_templateObject7","MyComment_templateObject8","MyInterestedAnimal","pages_AbandonedAnimal","MyInterestedBoard","EditMyInfo","newPassword","phoneNum","prevProfileImg","setPrevProfileImg","isProfileChanged","setIsProfileChanged","isPasswordChecked","setIsPasswordChecked","prevPhoneNum","setPrevPhoneNum","profileUrl","onSubmitProfile","deleteFlag","patch","onSubmitNickName","onCheckPassword","_ref4","_callee4","_context4","onSubmitPassword","_ref5","_callee5","_context5","onSubmitPhonenum","_ref6","_callee6","_context6","EditMyInfo_Title","EditMyInfo_Divider","EditMyInfo_Container","EditMyInfo_BoxContainer","EditMyInfo_Profile","EditMyInfo_ProfileText","EditMyInfo_ProfileImageWrap","EditMyInfo_ProfileImage","EditMyInfo_SelectProfileBox","EditBtn","EditMyInfo_Box","EditMyInfo_BoxText","EditMyInfo_BoxSearch","EditMyInfo_InputSearch","EditMyInfo_BtnSearch","EditMyInfo_CheckIcon","EditMyInfo_templateObject","EditMyInfo_templateObject2","EditMyInfo_templateObject3","EditMyInfo_templateObject4","EditMyInfo_templateObject5","EditMyInfo_templateObject6","EditMyInfo_templateObject7","EditMyInfo_templateObject8","EditMyInfo_templateObject9","EditMyInfo_templateObject10","EditMyInfo_templateObject11","EditMyInfo_templateObject12","EditMyInfo_templateObject13","EditMyInfo_templateObject14","EditMyInfo_templateObject15","EditMyInfo_templateObject16","EditMyInfo_templateObject17","EditMyInfo_templateObject18","MyPage_templateObject","MyPage","MyPage_Container","components_MyPageTab","react_router","element","components_MyBoard","components_MyComment","components_MyInterestedAnimal","components_MyInterestedBoard","components_EditMyInfo","CommentWrite_templateObject","CommentInput","textarea","CommentWrite_templateObject2","CommentWrite_templateObject3","Count","CommentWrite_templateObject4","CommentWrite_templateObject5","CommentWrite","parentCommentId","reply","commentInput","setCommentInput","textAreaCount","setTextAreaCount","CommentWrite_Container","currentTarget","CommentWrite_Box","CommentWrite_Btn","CommentUpdate_templateObject","CommentUpdate_templateObject2","CommentUpdate_templateObject3","CommentUpdate_templateObject4","CommentUpdate_templateObject5","CommentUpdate","commentValue","onCancle","CommentUpdate_Container","CommentUpdate_Count","CommentUpdate_CommentInput","CommentUpdate_Box","CommentUpdate_Btn","SingleComment_templateObject","SingleComment_templateObject2","ProfileImageShow","SingleComment_templateObject3","ProfileName","SingleComment_templateObject4","ContentBox","SingleComment_templateObject5","ExtraInfo","SingleComment_templateObject6","SingleComment_templateObject7","BoxContent","SingleComment_templateObject8","SingleComment_templateObject9","SingleComment","isEditChecked","setIsEditChecked","isReplying","setIsReplying","SingleComment_Container","SingleComment_ProfileImage","referrerpolicy","SingleComment_Box","commentUpdateAt","cursor","CommentUpdate_CommentUpdate","CommentWrite_CommentWrite","SingleComment_Divider","ReplyComments","SingleComment_SingleComment","renderReplyComment","BoardComment_templateObject","BoardComment","BoardComment_Container","ReplyComments_ReplyComments","BoardContent_templateObject","ProfileBox","BoardContent_templateObject2","BoardContent_templateObject3","BoardContent_templateObject4","ProfileInfo","BoardContent_templateObject5","BoardContent_templateObject6","ProfileDate","BoardContent_templateObject7","TitleBox","BoardContent_templateObject8","Category","BoardContent_templateObject9","BoardContent_templateObject10","BoardContent_templateObject11","BoardContent_templateObject12","ExtraBox","BoardContent_templateObject13","BoardContent_templateObject14","BoardContent_templateObject15","ExtraButton","BoardContent_templateObject16","BoardContent_templateObject17","BoardContent","categoryText","setCategoryText","WEEKDAY","postCreateAt","userLiked","board","err","BoardContent_Container","BoardContent_ProfileImage","BoardContent_ProfileImageShow","BoardContent_ProfileName","Date","week","getDay","getFullYear","getMonth","getDate","getHours","getMinutes","dateTrans","BoardContent_Title","BoardContent_ContentBox","BoardContent_Photo","BoardContent_ExtraInfo","BoardContent_LikeIcon","BoardContent_Button","locPostId","locTitle","locCategory","locContent","locImgList","onClickUpdate","body","BoardDetail","useLocation","useParams","BoardContent_BoardContent","BoardComment_BoardComment","CenterMap_templateObject","HomeImg","CenterMap_templateObject2","Intro","CenterMap_templateObject3","MapWrapper","CenterMap_templateObject4","ListWrapper","CenterMap_templateObject5","Map","CenterMap_templateObject6","CenterMap_templateObject7","PlacesList","CenterMap_templateObject8","CenterMap","keyword","infowindow","kakao","maps","InfoWindow","zIndex","markers","options","center","LatLng","level","document","getElementById","placesSearchCB","status","pagination","services","Status","OK","bounds","LatLngBounds","setBounds","places","listEl","menuEl","fragment","createDocumentFragment","hasChildNodes","removeChild","lastChild","removeAllChildNods","setMap","removeMarker","placePosition","y","x","marker","addMarker","itemEl","getListItem","extend","addListener","displayInfowindow","close","onmouseover","onmouseout","place_name","appendChild","scrollTop","displayPlaces","paginationEl","last","href","innerHTML","onclick","gotoPage","displayPagination","ZERO_RESULT","ERROR","place","imgHeight","itemStr","road_address_name","address_name","phone","position","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","setContent","open","Places","keywordSearch","CenterMap_Container","doghouse","CenterMap_Pagination","BoardUpdate_templateObject","BoardUpdate","ext","metadata","fetch","blob","split","pop","File","_x","convertURLtoFile","BoardUpdate_createForOfIteratorHelper","defaultValue","BoardUpdate_InputPicker","App","setIsLogin","components_Header","components_Tab","NotFound_NotFound","pages_MyPage","pages_SignUp","BoardEditor_BoardEditor","BoardUpdate_BoardUpdate","pages_Login","BoardDetail_BoardDetail","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f3baedf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"frag\":\"BoardEditor_frag__2jjV4\",\"container\":\"BoardEditor_container__2ixAj\",\"title\":\"BoardEditor_title__3WJ1t\",\"content\":\"BoardEditor_content__H2Yg1\",\"btn__container\":\"BoardEditor_btn__container__2i6UB\",\"btn__cancel\":\"BoardEditor_btn__cancel__2_y5h\",\"btn__confirm\":\"BoardEditor_btn__confirm__2kzSI\",\"ImageSelect\":\"BoardEditor_ImageSelect__1PcVs\",\"file__container\":\"BoardEditor_file__container__EcFCJ\",\"imageContainer\":\"BoardEditor_imageContainer__3hkuV\",\"ImageBox\":\"BoardEditor_ImageBox__3aX5j\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport headerImage from \"../images/header_dog.jpg\";\r\n\r\nconst Top = styled.div`\r\n  position: relative;\r\n  white-space: nowrap;\r\n  width: 1200px;\r\n  min-width: 100%;\r\n  max-width: 1000%;\r\n  height: 300px;\r\n  overflow: visible;\r\n  text-align: center;\r\n  object-fit: fill;\r\n\r\n  background: linear-gradient(\r\n      rgba(239, 239, 239, 0.6),\r\n      rgba(239, 239, 239, 0.6)\r\n    ),\r\n    url(${headerImage});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  background-attachment: scroll;\r\n`;\r\n\r\nconst HeaderText = styled.div`\r\n  position: absolute;\r\n  top: 15%;\r\n  left: 50%;\r\n  color: rgb(243, 156, 18);\r\n  font-weight: 800;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 10%;\r\n  left: 90%;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ContainerText = styled.div`\r\n  padding-left: 10px;\r\n  font-size: 23px;\r\n  font-weight: 800;\r\n  display: inline-block;\r\n  color: rgb(243, 156, 18);\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Header(props) {\r\n  function setTabMenu(menu) {\r\n    props.tabMenuChange(menu);\r\n  }\r\n\r\n  function logout(){\r\n    sessionStorage.removeItem(\"userJWT\");\r\n    sessionStorage.removeItem(\"userID\");\r\n    sessionStorage.removeItem(\r\n      \"profileImgUrl\"\r\n    );\r\n    props.isLoginChange(false);\r\n    alert(\"로그아웃 되었습니다.\");\r\n  }\r\n\r\n  return (\r\n    <Top>\r\n      <Container>\r\n        {!props.isLogin && (\r\n          <Link to=\"/login\">\r\n            <ContainerText\r\n              onClick={() => {\r\n                setTabMenu(0);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              로그인\r\n            </ContainerText>\r\n          </Link>\r\n        )}\r\n        {props.isLogin && (\r\n            <ContainerText\r\n              onClick={() => {\r\n                setTabMenu(0);\r\n                logout();\r\n                // 로그아웃 함수\r\n              }}\r\n            >\r\n              {\" \"}\r\n              로그아웃\r\n            </ContainerText>\r\n        )}\r\n      </Container>\r\n      <Link to=\"/\">\r\n        <HeaderText\r\n          onClick={() => {\r\n            setTabMenu(1);\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Findog\r\n        </HeaderText>\r\n      </Link>\r\n    </Top>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabBar = styled.div`\r\n  background: transparent;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst TabUl = styled.ul``;\r\n\r\nconst TabLi = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n  padding: 1rem;\r\n  margin-left: 50px;\r\n  margin-right: 50px;\r\n  border-top: 5px;\r\n  border-top-style: solid;\r\n  border-top-color: rgba(243, 156, 18, 0.22);\r\n\r\n  &.active {\r\n    width: fit-content;\r\n    height: 100%;\r\n    border-top: 5px;\r\n    border-top-style: solid;\r\n    border-top-color: rgb(243, 156, 18);\r\n  }\r\n`;\r\n\r\nfunction Tab(props) {\r\n  const [menu, setMenu] = useState(props.tabMenu);\r\n\r\n  useEffect(() => {\r\n    setMenu(props.tabMenu);\r\n  }, [props.tabMenu]);\r\n\r\n  const setTabMenu = (menu) => {\r\n    props.tabMenuChange(menu);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Tab-Wrap\">\r\n      <TabBar>\r\n        <TabUl>\r\n          <Link to=\"/\">\r\n            <TabLi\r\n              className={menu === 1 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 1);\r\n                setTabMenu(1);\r\n              }}\r\n            >\r\n              유기동물\r\n            </TabLi>\r\n          </Link>\r\n          <Link to=\"/board\">\r\n            <TabLi\r\n              className={menu === 2 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 2);\r\n                setTabMenu(2);\r\n              }}\r\n            >\r\n              게시판\r\n            </TabLi>\r\n          </Link>\r\n          <Link to=\"/centermap\">\r\n            <TabLi\r\n              className={menu === 3 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 3);\r\n                setTabMenu(3);\r\n              }}\r\n            >\r\n              유기센터\r\n            </TabLi>\r\n          </Link>\r\n          <Link to=\"/mypage\">\r\n            <TabLi\r\n              className={menu === 4 ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                setMenu(() => 4);\r\n                setTabMenu(4);\r\n              }}\r\n            >\r\n              마이페이지\r\n            </TabLi>\r\n          </Link>\r\n        </TabUl>\r\n      </TabBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tab;\r\n","import axios from \"axios\";\r\n\r\nconst API =  axios.create({\r\n   \r\n    baseURL: 'http://3.39.156.161:8080',\r\n    timeout: 30000,\r\n    \r\n})\r\n\r\nexport default API;","import React, {  useState } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport API from './../utils/api';\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: fit-content;\r\n  margin-top: 100px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: left;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  color: orange;\r\n  font-size: 40px;\r\n  padding: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  width: 600px;\r\n  border-left: orange;\r\n  text-align: left;\r\n  margin-left: 100px;\r\n`;\r\n\r\nconst Box = styled.input`\r\n  width: 600px;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  :focus {\r\n    outline: 2px solid gray;\r\n  }\r\n  cursor: auto;\r\n`;\r\n\r\nconst LoginBtn = styled.button`\r\n  width: 610px;\r\n  height: 60px;\r\n  margin-top: 15px;\r\n  font-size: 20px;\r\n  background-color: orange;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n  border: none;\r\n  margin-left: 100px;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  width: 610px;\r\n  display: flex;\r\n  margin-left: 100px;\r\n  font-size: 20px;\r\n  margin-bottom: 300px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Signup = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n`;\r\n\r\nconst IdSearch = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n`;\r\n\r\nconst PwSearch = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  display: inline-block;\r\n  color: black;\r\n`;\r\n\r\nconst BottomRight = styled.div`\r\n  float: right;\r\n  display: flex;\r\n`;\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = inputs;\r\n\r\n  const onInputChange = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n\r\n    setInputs({\r\n      ...inputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value, // name 키를 가진 값을 value 로 설정\r\n    });\r\n  };\r\n\r\n  /** 로그인 api 호출 */\r\n  const onSubmit = async () => {\r\n    try {\r\n      let data = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      await API\r\n        .post(\"/users/log-in\", JSON.stringify(data), {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"로그인 되었습니다.\");\r\n            sessionStorage.setItem(\"userJWT\", response.data.result.userJWT);\r\n            sessionStorage.setItem(\"userID\", response.data.result.userId);\r\n            sessionStorage.setItem(\r\n              \"profileImgUrl\",\r\n              response.data.result.profileImgUrl\r\n            );\r\n            navigate(\"/\");\r\n            window.location.reload();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>로그인</Header>\r\n      <BoxContainer>\r\n        <div>\r\n          <Box\r\n            placeholder=\"아이디(이메일)\"\r\n            name={\"email\"}\r\n            onChange={onInputChange}\r\n            value={email}\r\n          ></Box>\r\n        </div>\r\n        <div>\r\n          <Box\r\n            placeholder=\"비밀번호\"\r\n            name={\"password\"}\r\n            onChange={onInputChange}\r\n            value={password}\r\n          ></Box>\r\n        </div>\r\n      </BoxContainer>\r\n      <LoginBtn onClick={onSubmit}>로그인</LoginBtn>\r\n      <Bottom>\r\n        <Link to=\"/signup\">\r\n          <Signup>회원가입</Signup>\r\n        </Link>\r\n        <BottomRight>\r\n          <IdSearch>아이디 찾기</IdSearch>\r\n          <div>&nbsp;&nbsp;|&nbsp;&nbsp;</div>\r\n          <PwSearch>비밀번호 찾기</PwSearch>\r\n        </BottomRight>\r\n      </Bottom>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFoundPage\r\n        </div>\r\n    )\r\n}","\r\nimport API from './api';\r\n\r\nexport function AuthLogin(jwt) {\r\n  console.log(jwt);\r\n  try {\r\n    API\r\n      .get(\"/users/auto-logIn\", {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": jwt,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"자동로그인\",response);\r\n        if (response.data.isSuccess) {\r\n          sessionStorage.setItem(\"userJWT\", response.data.result.userJWT);\r\n          sessionStorage.setItem(\"userID\", response.data.result.userId);\r\n          sessionStorage.setItem(\r\n            \"profileImgUrl\",\r\n            response.data.result.profileImgUrl\r\n          );\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n  } catch (e) {\r\n    console.log(e.response);\r\n    return false;\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport API from \"./../utils/api\";\r\nimport { type } from \"@testing-library/user-event/dist/type\";\r\nimport { AuthLogin } from \"../utils/utils\";\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: fit-content;\r\n  margin-top: 100px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  color: orange;\r\n  font-size: 40px;\r\n  padding: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  white-space: nowrap;\r\n  border-left: orange;\r\n`;\r\n\r\nconst BoxWrapper = styled.div`\r\n  height: 70px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 700px;\r\n  text-align: left;\r\n  margin-left: 50px;\r\n  cursor: auto;\r\n`;\r\n\r\nconst BoxText = styled.div`\r\n  width: 150px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  width: 600px;\r\n  text-align: left;\r\n  margin-left: 50px;\r\n  margin-top: 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: auto;\r\n`;\r\n\r\nconst ProfileText = styled.div`\r\n  width: 150px;\r\n  text-align: left;\r\n  vertical-align: top;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst SelectProfileBox = styled.div`\r\n  width: 100px;\r\n  text-align: left;\r\n  vertical-align: top;\r\n  margin-top: 5px;\r\n  margin-right: 15px;\r\n  padding: 5px;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ProfileImageWrap = styled.div`\r\n  width: 200px;\r\n  display: inline-block;\r\n  text-align: left;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  display: inline-block;\r\n  justify-content: center;\r\n  padding: 3px;\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nconst CheckIcon = styled(FontAwesomeIcon)`\r\n  float: right;\r\n`;\r\n\r\nconst BtnWrap = styled.div`\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  width: 380px;\r\n  height: 60px;\r\n  margin-top: 80px;\r\n  font-size: 20px;\r\n  color: white;\r\n  font-weight: bold;\r\n  margin-bottom: 300px;\r\n  margin-right: 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst BoxSearch = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: inline-block;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst InputSearch = styled.input`\r\n  width: 400px;\r\n  height: 40px;\r\n  border: none;\r\n  padding-inline: 10px;\r\n  margin-right: 3px;\r\n  :focus {\r\n    outline: 2px solid gray;\r\n  }\r\n`;\r\n\r\nconst ErrorNotification = styled.div`\r\n  width: 400px;\r\n  height: 40px;\r\n  border: none;\r\n  display: inline-block;\r\n  text-align: left;\r\n  margin-top: 2px;\r\n  margin-left: 20px;\r\n  font-size: smaller;\r\n  color: red;\r\n`;\r\n\r\nconst BtnSearch = styled.button`\r\n  width: 100px;\r\n  height: 40px;\r\n  border: none;\r\n  background-color: rgb(255, 224, 166);\r\n`;\r\n\r\nfunction SignUp() {\r\n  const navigate = useNavigate();\r\n  const [inputs, setInputs] = useState({\r\n    id: \"\",\r\n    nickname: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n    phoneNumber: \"\",\r\n  });\r\n\r\n  const { id, nickname, password, passwordCheck, phoneNumber } = inputs; // 비구조화 할당을 통해 값 추출\r\n\r\n  /** 사진 관리 변수 */\r\n  const default_profile_img = \"https://ifh.cc/g/jLgWsT.png\";\r\n\r\n  const [image, setImage] = useState({\r\n    image_file: \"\",\r\n    preview_URL: default_profile_img,\r\n  });\r\n  const [defaultImg, setDefaultImg] = useState(true);\r\n  const fileInput = useRef(null);\r\n\r\n  /** ID 관리 변수 */\r\n  const [isIdChecked, setIsIdChecked] = useState(false); // 중복확인 완료\r\n  const [isIdValidate, setIsIdValidate] = useState(false); // 유효한 형식\r\n  const [idNotification, setIdNotification] = useState(false);\r\n  const [idOpacity, setIdOpacity] = useState(0.7);\r\n  const idNotiArray = [\r\n    \"이메일 형식이 올바르지 않습니다.\",\r\n    \"이미 존재하는 이메일입니다.\",\r\n  ];\r\n  const [idNotiText, setIdNotiText] = useState(idNotiArray[0]);\r\n\r\n  /** 닉네임 관리 변수 */\r\n  const [isNicknameChecked, setIsNicknameChecked] = useState(false); // 중복확인 완료\r\n  const [nicknameNotification, setNicknameNotification] = useState(false); // 유효한 형식\r\n  const [isNicknameValidate, setIsNicknameValidate] = useState(false);\r\n  const [nicknameOpacity, setNicknameOpacity] = useState(0.7);\r\n  const nicknameNotiText = \"이미 존재하는 닉네임입니다.\";\r\n\r\n  /** 비밀번호 관리 변수 */\r\n  const [isPwChecked, setIsPwChecked] = useState(false); // 비밀번호 확인이랑 일치\r\n  const [pwNotification, setPwNotification] = useState(true); // 비밀번호 형식 에러 표시\r\n  const [pwCheckNotification, setPwCheckNotification] = useState(false); // 비밀번호 확인 불일치 에러 표시\r\n  const pwNotiArray = [\r\n    \"8~15자 이내로 입력해주세요.\",\r\n    \"영문,숫자, 특수문자를 혼합하여 입력해주세요.\",\r\n  ];\r\n  const [pwNotiText, setPwNotiText] = useState(pwNotiArray[0]);\r\n\r\n  /** 연락처 관리 변수 */\r\n  const [isPhonenumChecked, setIsPhonenumChecked] = useState(false);\r\n  const [phoneNumNotification, setPhoneNumNotification] = useState(false); // 유효한 형식\r\n  const phoneNumNotiText = \"핸드폰 번호 양식이 올바르지 않습니다.\";\r\n\r\n  const [isAllChecked, setIsAllChecked] = useState(false);\r\n\r\n  const onInputChange = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n\r\n    setInputs({\r\n      ...inputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value, // name 키를 가진 값을 value 로 설정\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"이미지바뀜\");\r\n  }, [defaultImg]);\r\n\r\n  /** 회원가입 버튼 활성화 */\r\n  useEffect(() => {\r\n    if (isIdChecked && isNicknameChecked && isPwChecked && isPhonenumChecked) {\r\n      setIsAllChecked(true);\r\n    } else {\r\n      setIsAllChecked(false);\r\n    }\r\n  }, [\r\n    isIdChecked,\r\n    isNicknameChecked,\r\n    isPwChecked,\r\n    isPhonenumChecked,\r\n    defaultImg,\r\n  ]);\r\n\r\n  /** 비밀번호 유효성 검사 */\r\n  const setPasswordValidation = () => {\r\n    if (password === \"\" || passwordCheck === \"\") {\r\n      setIsPwChecked(false);\r\n      setPwNotification(false);\r\n      setPwCheckNotification(false);\r\n    }\r\n    if (password !== \"\") {\r\n      if (password.length >= 8 && password.length <= 15) {\r\n        if (\r\n          !/^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/.test(password)\r\n        ) {\r\n          setPwNotification(true);\r\n          setPwNotiText(pwNotiArray[1]);\r\n        }\r\n      } else {\r\n        setPwNotification(true);\r\n        setPwNotiText(pwNotiArray[0]);\r\n      }\r\n    }\r\n    if (passwordCheck !== \"\") {\r\n      if (password === passwordCheck) {\r\n        console.log(\"같음\");\r\n        setIsPwChecked(true);\r\n        setPwCheckNotification(false);\r\n      } else {\r\n        console.log(\"다름\");\r\n        setIsPwChecked(false);\r\n        setPwCheckNotification(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  /** 이메일 유효성 검사 */\r\n  useEffect(() => {\r\n    if (id === \"\") {\r\n      setIdNotification(false);\r\n      setIsIdValidate(false);\r\n      setIdOpacity(0.7);\r\n    } else {\r\n      var regExp =\r\n        /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n\r\n      if (regExp.test(id)) {\r\n        setIdNotification(false);\r\n        setIsIdValidate(true);\r\n        setIdOpacity(1);\r\n      } else {\r\n        setIdNotification(true);\r\n        setIdNotiText(idNotiArray[0]);\r\n        setIsIdValidate(false);\r\n        setIdOpacity(0.7);\r\n      }\r\n    }\r\n    setIsIdChecked(false);\r\n  }, [id]);\r\n\r\n  /** 닉네임 유효성 검사 (공백만 아니면 됨) */\r\n  useEffect(() => {\r\n    if (nickname === \"\") {\r\n      setIsNicknameValidate(false);\r\n      setNicknameOpacity(0.7);\r\n    } else {\r\n      setIsNicknameValidate(true);\r\n      setNicknameOpacity(1);\r\n    }\r\n    setIsNicknameChecked(false);\r\n  }, [nickname]);\r\n\r\n  useEffect(() => {\r\n    setPasswordValidation();\r\n  }, [password]);\r\n\r\n  useEffect(() => {\r\n    setPasswordValidation();\r\n  }, [passwordCheck]);\r\n\r\n  /** 연락처 자동 하이픈 & 유효성 검사 */\r\n  useEffect(() => {\r\n    if (phoneNumber === \"\") {\r\n      setPhoneNumNotification(false);\r\n    } else {\r\n      phoneNumber\r\n        .replace(/[^0-9]/g, \"\")\r\n        .replace(\r\n          /(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/,\r\n          \"$1-$2-$3\"\r\n        )\r\n        .replace(\"--\", \"-\");\r\n\r\n      if (phoneNumber.length === 13 && /^[0-9\\b -]{0,13}$/.test(phoneNumber)) {\r\n        var regPhone = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;\r\n        if (regPhone.test(phoneNumber) === true) {\r\n          setPhoneNumNotification(false);\r\n          setIsPhonenumChecked(true);\r\n        } else {\r\n          setPhoneNumNotification(true);\r\n          setIsPhonenumChecked(false);\r\n        }\r\n      } else {\r\n        setPhoneNumNotification(true);\r\n        setIsPhonenumChecked(false);\r\n      }\r\n    }\r\n  }, [phoneNumber]);\r\n\r\n  /** 프로필 사진 업로드 */\r\n  const OnProfileChange = (e) => {\r\n    //화면에 프로필 사진 표시\r\n    const reader = new FileReader();\r\n\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      setDefaultImg(false);\r\n    } else {\r\n      //업로드 취소할 시\r\n      // setImage(image);\r\n    }\r\n\r\n    reader.onload = () => {\r\n      setImage({\r\n        image_file: e.target.files[0],\r\n        preview_URL: reader.result,\r\n      });\r\n    };\r\n  };\r\n\r\n  /** 이메일 중복확인 */\r\n  const checkDuplicateId = async () => {\r\n    try {\r\n      const params = { email: id };\r\n      const res = await API.get(\"/users/chk-email\", { params }); // API 가 get 해올 때까지 기다리고, 결과 값을 res 에 담음\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        setIsIdChecked(true);\r\n        setIdNotification(false);\r\n      } else {\r\n        setIdNotification(true);\r\n        setIdNotiText(idNotiArray[1]);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  /** 닉네임 중복확인 */\r\n  const checkDuplicateNickname = async () => {\r\n    try {\r\n      const params = { nickname: nickname };\r\n      console.log(\"파라미터\", params);\r\n      const res = await API.get(\"/users/chk-nickname\", { params }); // API 가 get 해올 때까지 기다리고, 결과 값을 res 에 담음\r\n      console.log(res.data);\r\n      if (res.data.isSuccess) {\r\n        setIsNicknameChecked(true);\r\n        setNicknameNotification(false);\r\n      } else {\r\n        setNicknameNotification(true);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  /** 회원가입 api 호출 */\r\n  const onSubmit = async () => {\r\n    try {\r\n      console.log(\"클릭\");\r\n      const formData = new FormData();\r\n\r\n      // formData.append(JSON.stringify(data));\r\n      formData.append(\"email\", id);\r\n      formData.append(\"nickname\", nickname);\r\n      formData.append(\"password\", password);\r\n      formData.append(\"phoneNum\", phoneNumber);\r\n\r\n      if (!defaultImg) {\r\n        console.log(\"사진 있음\");\r\n        console.log(image.image_file);\r\n        formData.append(\"profileImg\", image.image_file);\r\n        console.log(type(image.image_file));\r\n      }\r\n\r\n      await API.post(\"/users/sign-up\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"회원가입에 성공했습니다.\");\r\n            AuthLogin(response.data.result.userJWT);\r\n            navigate(\"/\");\r\n            window.location.reload();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>회원가입</Header>\r\n      <BoxContainer>\r\n        <Profile>\r\n          <ProfileText>프로필사진</ProfileText>\r\n          <ProfileImageWrap>\r\n            <ProfileImage src={image.preview_URL}></ProfileImage>\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              accept=\"image/*\"\r\n              name=\"profile_img\"\r\n              onChange={OnProfileChange}\r\n              ref={fileInput}\r\n            />\r\n            <div style={{ display: \"flex\", marginBottom: \"30px\" }}>\r\n              <SelectProfileBox\r\n                onClick={() => {\r\n                  fileInput.current.click();\r\n                }}\r\n              >\r\n                사진 업로드\r\n              </SelectProfileBox>\r\n              <SelectProfileBox> | </SelectProfileBox>\r\n              <SelectProfileBox\r\n                onClick={() => {\r\n                  setImage({\r\n                    image_file: \"\",\r\n                    preview_URL: default_profile_img,\r\n                  });\r\n                  setDefaultImg(true);\r\n                }}\r\n              >\r\n                기본 이미지 설정\r\n              </SelectProfileBox>\r\n            </div>\r\n          </ProfileImageWrap>\r\n        </Profile>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>아이디(이메일)</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch name=\"id\" onChange={onInputChange} value={id} />\r\n\r\n              <BtnSearch\r\n                disabled={!isIdValidate}\r\n                style={{ opacity: idOpacity }}\r\n                onClick={checkDuplicateId}\r\n              >\r\n                중복확인\r\n              </BtnSearch>\r\n            </BoxSearch>\r\n            {isIdChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {idNotification && (\r\n            <ErrorNotification>{idNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>닉네임</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                name={\"nickname\"}\r\n                onChange={onInputChange}\r\n                value={nickname}\r\n              />\r\n              <BtnSearch\r\n                disabled={!isNicknameValidate}\r\n                style={{ opacity: nicknameOpacity }}\r\n                onClick={checkDuplicateNickname}\r\n              >\r\n                중복확인\r\n              </BtnSearch>\r\n            </BoxSearch>\r\n            {isNicknameChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {nicknameNotification && (\r\n            <ErrorNotification>{nicknameNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>비밀번호</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                style={{ width: \"500px\" }}\r\n                name={\"password\"}\r\n                onChange={onInputChange}\r\n                value={password}\r\n                placeholder=\"※ 영문 대소문자, 숫자, 특수문자를 혼합한 8~15자 이내\"\r\n                maxLength=\"15\"\r\n              />\r\n            </BoxSearch>\r\n          </Box>\r\n          {pwNotification && (\r\n            <ErrorNotification>{pwNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>비밀번호 확인</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                style={{ width: \"500px\" }}\r\n                name={\"passwordCheck\"}\r\n                onChange={onInputChange}\r\n                value={passwordCheck}\r\n                maxLength=\"15\"\r\n              />\r\n            </BoxSearch>\r\n            {isPwChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {pwCheckNotification && (\r\n            <ErrorNotification>비밀번호가 일치하지 않습니다.</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n        <BoxWrapper>\r\n          <Box>\r\n            <BoxText>연락처</BoxText>\r\n            <BoxSearch>\r\n              <InputSearch\r\n                style={{ width: \"500px\" }}\r\n                name={\"phoneNumber\"}\r\n                onChange={onInputChange}\r\n                value={phoneNumber}\r\n                maxLength=\"13\"\r\n              />\r\n            </BoxSearch>\r\n            {isPhonenumChecked && (\r\n              <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n            )}\r\n          </Box>\r\n          {phoneNumNotification && (\r\n            <ErrorNotification>{phoneNumNotiText}</ErrorNotification>\r\n          )}\r\n        </BoxWrapper>\r\n      </BoxContainer>\r\n\r\n      <BtnWrap>\r\n        <Link to=\"/login\">\r\n          <Btn background=\"lightgrey\">취소</Btn>\r\n        </Link>\r\n\r\n        <Btn background=\"orange\" disabled={!isAllChecked} onClick={onSubmit}>\r\n          회원가입\r\n        </Btn>\r\n      </BtnWrap>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, {  useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styles from \"../styles/BoardEditor.module.css\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst InputPicker = styled.select`\r\n  width: 955px;\r\n  height: 50px;\r\n  text-align: left;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const BoardEditor = (props) => {\r\n  let [showImages, setShowImages] = useState([]);\r\n  const [sendingImg, setSendingImg] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    category: 1,\r\n    region: 1,\r\n    content: \"\",\r\n    title: \"\",\r\n    userId: sessionStorage.getItem(\"userID\"),\r\n  });\r\n\r\n  const [postId, setPostId] = useState(999);\r\n  const [patchState, setPatchState] = useState(props.patchState);\r\n\r\n  /** input 입력 시 title, content 내용 변경 */\r\n  const onChangeData = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      category: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeRegion = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      region: e.target.value,\r\n    });\r\n  };\r\n\r\n  /** 사진 추가 */\r\n  const handleAddImages = (event) => {\r\n    const imageLists = event.target.files;\r\n    let imageUrlLists = [...showImages];\r\n\r\n    for (let i = 0; i < imageLists.length; i++) {\r\n      const currentImageUrl = URL.createObjectURL(imageLists[i]);\r\n      imageUrlLists.push(currentImageUrl);\r\n\r\n      sendingImg.push(imageLists[i]);\r\n    }\r\n\r\n    if (imageUrlLists.length > 10) {\r\n      imageUrlLists = imageUrlLists.slice(0, 10);\r\n      sendingImg = sendingImg.slice(0, 10);\r\n    }\r\n\r\n    setShowImages(imageUrlLists);\r\n  };\r\n\r\n  /** 사진 삭제 */\r\n  const handleDeleteImage = (id) => {\r\n    setShowImages(showImages.filter((_, index) => index !== id));\r\n    setSendingImg(sendingImg.filter((_, index) => index !== id));\r\n  };\r\n\r\n  /** 확인버튼 누르면 데이터 서버로 전송 */\r\n  const onClickUpload = async () => {\r\n    if (patchState === false) {\r\n      if (inputs.content === \"\" || inputs.title === \"\") {\r\n        alert(\"제목과 내용을 모두 입력해주세요.\");\r\n        return;\r\n      } else {\r\n        try {\r\n          console.log(\"클릭\");\r\n          const formData = new FormData();\r\n\r\n          formData.append(\"userId\", Number(inputs.userId));\r\n          formData.append(\"title\", inputs.title);\r\n          formData.append(\"category\", Number(inputs.category));\r\n          formData.append(\"content\", inputs.content);\r\n          formData.append(\"region\", inputs.region);\r\n\r\n          Object.values(sendingImg).forEach((image) =>\r\n            formData.append(\"imgFiles\", image)\r\n          );\r\n\r\n          console.log(\"전송시작\");\r\n          await axios\r\n            .post(\"http://3.39.156.161:8080/boards/post\", formData, {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            })\r\n            .then((response) => {\r\n              console.log(response.data.isSuccess);\r\n\r\n              if (response.data.isSuccess) {\r\n                console.log(\"게시물이 저장되었습니다.\");\r\n                alert(\"게시물이 등록되었습니다!\");\r\n                setPostId(response.data.result.postId);\r\n              } else {\r\n                console.log(response.data.isSuccess);\r\n                console.log(response.data.message);\r\n              }\r\n            });\r\n        } catch (e) {\r\n          console.log(e.response);\r\n        }\r\n        console.log(\"전송끝\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postId !== 999 && patchState === false) {\r\n      navigate(`/board/detail/${postId}`, { state : {myBoard: false }});\r\n      console.log(\"==포스트 이동==\");\r\n    }\r\n  }, [postId, patchState]);\r\n\r\n  return (\r\n    <div className={styles.frag}>\r\n      <div className={styles.container}>\r\n        {/* title */}\r\n        <div>\r\n          <input\r\n            className={styles.title}\r\n            type=\"text\"\r\n            placeholder=\" 제목\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            onChange={onChangeData}\r\n          />\r\n        </div>\r\n        <div>\r\n          <InputPicker\r\n            style={{ marginBottom: \"20px\" }}\r\n            onChange={onChangeCategory}\r\n          >\r\n            <option key={1} value={1}>\r\n              기타\r\n            </option>\r\n            <option key={2} value={2}>\r\n              찾아주세요\r\n            </option>\r\n            <option key={3} value={3}>\r\n              봤어요\r\n            </option>\r\n            <option key={4} value={4}>\r\n              도와주세요\r\n            </option>\r\n          </InputPicker>\r\n          <InputPicker onChange={onChangeRegion}>\r\n            <option key={1} value={1}>\r\n              서울\r\n            </option>\r\n            <option key={2} value={2}>\r\n              경기도\r\n            </option>\r\n            <option key={3} value={3}>\r\n              인천\r\n            </option>\r\n            <option key={4} value={4}>\r\n              강원도\r\n            </option>\r\n            <option key={5} value={5}>\r\n              충청도\r\n            </option>\r\n            <option key={6} value={6}>\r\n              경상도\r\n            </option>\r\n            <option key={7} value={7}>\r\n              전라도\r\n            </option>\r\n            <option key={8} value={8}>\r\n              제주도\r\n            </option>\r\n          </InputPicker>\r\n        </div>\r\n        {/* content */}\r\n        <div>\r\n          <textarea\r\n            type=\"textarea\"\r\n            className={styles.content}\r\n            id=\"content\"\r\n            name=\"content\"\r\n            onChange={onChangeData}\r\n          />\r\n        </div>\r\n        {/* 파일 업로드 부분 */}\r\n        <div>\r\n          <div>\r\n            {/* <strong>업로드 이미지</strong> */}\r\n            <div className={styles.file__container}>\r\n              {showImages.map((image, id) => (\r\n                <div className={styles.ImageBox} key={id}>\r\n                  <img\r\n                    className={styles.imageContainer}\r\n                    src={image}\r\n                    alt={`${image}-${id}`}\r\n                  />\r\n                  <div>\r\n                    <button onClick={() => handleDeleteImage(id)}>삭제</button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <form className={styles.ImageSelect}>\r\n            <input\r\n              type=\"file\"\r\n              id=\"image\"\r\n              accept=\"img/*\"\r\n              multiple=\"multiple\"\r\n              onChange={handleAddImages}\r\n            />\r\n            <label htmlFor=\"image\"></label>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn__container}>\r\n        <Link to=\"/board\">\r\n          <button className={styles.btn__cancel}>취소</button>\r\n        </Link>\r\n        <button\r\n          className={styles.btn__confirm}\r\n          onClick={() => {\r\n            onClickUpload();\r\n            // goToPost();\r\n          }}\r\n        >\r\n          확인\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardEditor.defaultProps = {\r\n  patchPostId: 999,\r\n  patchState: false,\r\n  title: \"\",\r\n  content: \"\",\r\n  region: \"\",\r\n  imgList: \"\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Container = styled.div`\r\n  width: 1100px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 30px;\r\n  margin-bottom: 10px;\r\n  padding-left: 100px;\r\n`;\r\n\r\nconst ContainerSearch = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst BoxSearch = styled.div`\r\n  height: fit-content;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst BoxRegion = styled.div`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst BoxCate = styled.div`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst BoxFilter = styled.div`\r\n  display: ${(props) => (props.FilterVisibility ? \"inline-block\" : \"none\")};\r\n`;\r\n\r\nconst BoxDate = styled.div`\r\n  margin-top: 10px;\r\n  line-height: 20px;\r\n  display: flex;\r\n`;\r\n\r\nconst BoxOption = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst BtnWrite = styled.button`\r\n  border: none;\r\n  background-color: orange;\r\n  color: white;\r\n  width: 150px;\r\n  height: 70px;\r\n  border-radius: 5%;\r\n  visibility: ${(props) => (props.WriteVisibility ? \"visible\" : \"hidden\")};\r\n`;\r\n\r\nconst BtnImgSearch = styled.button`\r\n  width: 130px;\r\n  height: 70px;\r\n  border: none;\r\n  background-color: orange;\r\n  color: white;\r\n  margin-left: 20px;\r\n  border-radius: 5%;\r\n  display: ${(props) => (props.ImgSearchVisibility ? \"inline-block\" : \"none\")};\r\n`;\r\n\r\nconst InputSearch = styled.input`\r\n  width: 450px;\r\n  height: 50px;\r\n  border: none;\r\n  padding-inline: 10px;\r\n`;\r\n\r\nconst BtnSearch = styled.button`\r\n  width: 60px;\r\n  height: 50px;\r\n  border: none;\r\n  background-color: rgb(255, 224, 166);\r\n`;\r\n\r\nconst InputPicker = styled.select`\r\n  width: 130px;\r\n  height: 50px;\r\n  margin-left: 20px;\r\n  text-align: left;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst TextDate = styled.div`\r\n  font-size: 15px;\r\n`;\r\n\r\nconst InputDate = styled.input`\r\n  width: 100px;\r\n  height: 20px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nfunction OptionTab({\r\n  FilterVisibility,\r\n  WriteVisibility,\r\n  InterestText,\r\n  ImgSearchVisibility,\r\n}) {\r\n  const popUp = (event) => {\r\n    if (sessionStorage.getItem(\"userID\") === null) {\r\n      alert(\"로그인을 하신 후에 게시물을 등록할 수 있습니다.\");\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerSearch>\r\n        {/* 검색 */}\r\n        <BoxSearch>\r\n          <InputSearch placeholder=\"내용을 입력해주세요\" />\r\n          <BtnSearch>검색</BtnSearch>\r\n        </BoxSearch>\r\n        {/* 지역 카테고리 */}\r\n        <BoxRegion>\r\n          <InputPicker>\r\n            <option>지역</option>\r\n            <option>서울</option>\r\n            <option>인천</option>\r\n            <option>경기</option>\r\n            <option>대전</option>\r\n            <option>대구</option>\r\n            <option>부산</option>\r\n            <option>강원</option>\r\n            <option>광주</option>\r\n            <option>울산</option>\r\n            <option>경남</option>\r\n            <option>전남</option>\r\n            <option>전북</option>\r\n            <option>제주</option>\r\n          </InputPicker>\r\n        </BoxRegion>\r\n        {/* 게시판 카테고리 */}\r\n        <BoxCate>\r\n          <InputPicker>\r\n            <option>카테고리</option>\r\n            <option>찾아주세요</option>\r\n            <option>봤어요</option>\r\n            <option>도와주세요</option>\r\n            <option>기타</option>\r\n          </InputPicker>\r\n        </BoxCate>\r\n        {/* 필터 */}\r\n        <BoxFilter FilterVisibility={FilterVisibility}>\r\n          <InputPicker>\r\n            <option>최신순</option>\r\n            <option>조회순</option>\r\n            <option>인기순</option>\r\n          </InputPicker>\r\n        </BoxFilter>\r\n        {/* 사진검색 */}\r\n        <BtnImgSearch ImgSearchVisibility={ImgSearchVisibility}>\r\n          사진 검색\r\n        </BtnImgSearch>\r\n      </ContainerSearch>\r\n      {/* 기간 */}\r\n      <BoxDate>\r\n        <TextDate>기간 :</TextDate>\r\n        <InputDate placeholder=\"2021.04.10\" />\r\n        <div>~</div>\r\n        <InputDate placeholder=\"2022.04.10\" />\r\n      </BoxDate>\r\n      {/* 글쓰기, 관심목록 */}\r\n      <BoxOption>\r\n        <Link to=\"/board/edit\">\r\n          <BtnWrite WriteVisibility={WriteVisibility} onClick={popUp}>\r\n            글쓰기\r\n          </BtnWrite>\r\n        </Link>\r\n      </BoxOption>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OptionTab;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport profileImage from \"../images/profileImage.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  width: 850px;\r\n  height: 160px;\r\n  background-color: rgb(251, 223, 169);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Box1 = styled.div`\r\n  width: 540px;\r\n`;\r\n\r\nconst Box2 = styled.div`\r\n  width: 200px;\r\n  height: 120px;\r\n  background-color: red;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  width: 550px;\r\n  font-weight: bold;\r\n  font-size: large;\r\n  text-align: start;\r\n  padding-inline-start: 4px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 1;\r\n  display: -webkit-box;\r\n  max-height: 25px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  width: 550px;\r\n  height: 40px;\r\n  line-height: 20px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  text-align: start;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst BoxProfile = styled.div`\r\n  display: flex;\r\n  font-size: small;\r\n  line-height: 40px;\r\n`;\r\n\r\nconst TextInfo = styled.div`\r\n  margin-right: 15px;\r\n  margin-top: 3px;\r\n`;\r\n\r\nconst BoxProfilePhoto = styled.div`\r\n  margin-bottom: 10px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst Photo = styled.img`\r\n  object-fit: fill;\r\n  width: 230px;\r\n  height: 120px;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  vertical-align: baseline;\r\n  border-radius: 40%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst popUp = (event) => {\r\n  if (sessionStorage.getItem(\"userID\") === null) {\r\n    alert(\"로그인을 하신 후에 게시물을 열람할 수 있습니다.\");\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nexport const BoardBox = ({ item, myBoard }) => {\r\n  const postLike = item.likeCount === null ? 0 : item.likeCount;\r\n  const commentLike = item.commentCount === null ? 0 : item.commentCount;\r\n  const profile = item.userImgUrl === null ? profileImage : item.userImgUrl;\r\n  const path = \"/board/detail/\" + item.postId;\r\n  return (\r\n    <Link\r\n      to={ \"/board/detail/\" + item.postId}\r\n      state={{myBoard : myBoard}}\r\n      style={{ textDecoration: \"none\", color: \"black\" }}\r\n      onClick={popUp}\r\n    >\r\n      <Fragment>\r\n        <Container>\r\n          <Box1>\r\n            <Title>{item.title}</Title>\r\n            <Content>{item.content}</Content>\r\n            <BoxProfile>\r\n              <BoxProfilePhoto>\r\n                <ProfileImage src={profile} />\r\n              </BoxProfilePhoto>\r\n              <TextInfo style={{ marginRight: \"20px\", fontWeight: \"bold\" }}>\r\n                {item.nickname}\r\n              </TextInfo>\r\n              <TextInfo>좋아요 {postLike}</TextInfo>\r\n              <TextInfo>댓글 {commentLike}</TextInfo>\r\n              <TextInfo>조회수 {item.hits}</TextInfo>\r\n            </BoxProfile>\r\n          </Box1>\r\n          {item.thumbnail && (\r\n            <Box2>\r\n              <Photo src={item.thumbnail} />\r\n            </Box2>\r\n          )}\r\n        </Container>\r\n      </Fragment>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Pagination({ total, page, setPage }) {\r\n  const PAGES_PER_LIST = 5;\r\n  const [showingNum, setShowingNum] = useState({\r\n    start: 1,\r\n    end: PAGES_PER_LIST,\r\n  });\r\n\r\n  const arrowHandler = (prev, sign, totalPage) => {\r\n    const nextIndex = prev.end + PAGES_PER_LIST;\r\n    let res;\r\n    if (sign === 1) {\r\n      res = nextIndex > totalPage ? totalPage : nextIndex;\r\n    } else if (sign === -1) {\r\n      res =\r\n        prev.end - prev.start < 4\r\n          ? prev.start + 4 - PAGES_PER_LIST\r\n          : prev.end - PAGES_PER_LIST;\r\n    }\r\n    return { ...prev, start: prev.start + PAGES_PER_LIST * sign, end: res };\r\n  };\r\n\r\n  const changePageNumbersBackward = () => {\r\n    page > PAGES_PER_LIST &&\r\n      setShowingNum((prev) => arrowHandler(prev, -1, total));\r\n  };\r\n\r\n  const changePageNumberForward = () => {\r\n    showingNum.end <= total &&\r\n      setShowingNum((prev) => arrowHandler(prev, 1, total));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const lessThanFive = total <= PAGES_PER_LIST;\r\n    lessThanFive\r\n      ? setShowingNum((prev) => ({ ...prev, start: 1, end: total }))\r\n      : setShowingNum((prev) => ({ ...prev, start: 1, end: PAGES_PER_LIST }));\r\n  }, [total]);\r\n\r\n  useEffect(() => {\r\n    setPage(showingNum.start);\r\n  }, [showingNum, setPage]);\r\n\r\n  const isFirstPage = showingNum.start === 1;\r\n  const isLastPage = showingNum.end === total;\r\n  const pages = getEmptyArray(showingNum.start, showingNum.end);\r\n\r\n  function getEmptyArray(start, end) {\r\n    const array = [];\r\n    for (let i = start; i <= end; i++) {\r\n      array.push(i);\r\n    }\r\n    return array;\r\n  }\r\n\r\n  function PageButton({ page, setCurrentPage, isActive }) {\r\n    const handleClickButton = () => {\r\n      setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n      <Nav isActive={isActive}>\r\n        <Button onClick={handleClickButton} isActive={isActive}>\r\n          {page}\r\n        </Button>\r\n      </Nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Button onClick={changePageNumbersBackward} disabled={isFirstPage}>\r\n          &lt;\r\n        </Button>\r\n        {pages.map((p, idx) => {\r\n          return (\r\n            <PageButton\r\n              key={`pageNumber-${idx + 1}`}\r\n              page={p}\r\n              setCurrentPage={setPage}\r\n              isActive={p === page}\r\n            />\r\n          );\r\n        })}\r\n        <Button onClick={changePageNumberForward} disabled={isLastPage}>\r\n          &gt;\r\n        </Button>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 4px;\r\n  margin: 16px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  margin: 0;\r\n  background: ${(props) =>\r\n    props.isActive ? \"orange\" : \"rgba(211,211,211,0.5)\"};\r\n  color: white;\r\n  font-size: 1rem;\r\n  color: ${(props) => (props.isActive ? \"white\" : \"black\")};\r\n\r\n  &:hover {\r\n    background: orange;\r\n    cursor: pointer;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &[disabled] {\r\n    background: rgba(211, 211, 211, 0.5);\r\n    cursor: revert;\r\n    transform: revert;\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport OptionTab from \"../components/OptionTab\";\r\nimport { BoardBox } from \"../components/BoardBox\";\r\nimport styled from \"styled-components\";\r\nimport API from \"../utils/api\";\r\nimport Pagination from \"./../components/Pagination\";\r\n\r\nconst BoardContainer = styled.div``;\r\n\r\nconst BoardBody = styled.div`\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport const Board = ({ myBoard, myInterestedBoard }) => {\r\n  const size = 5;\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var url = \"\";\r\n    if (myBoard === true) {\r\n      url = \"/mypage/board/count\";\r\n    } else if (myInterestedBoard === true) {\r\n      url = \"/mypage/like/count\";\r\n    } else {\r\n      url = \"/boards/count\";\r\n    }\r\n    API.get(url, {\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(response.data.result);\r\n        const lastPage = Math.ceil(response.data.result / size);\r\n        setPageCount(lastPage ? lastPage : 1);\r\n        console.log(\"페이지개수\", lastPage);\r\n      } else {\r\n        console.log(\"페이지 개수 받아오기 실패\");\r\n        console.log(response.data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useeffect 페이지바뀜\", page);\r\n    var url = \"\";\r\n    if (myBoard === true) {\r\n      url = \"/mypage/board\";\r\n    } else if (myInterestedBoard === true) {\r\n      url = \"/mypage/like\";\r\n    } else {\r\n      url = \"/boards\";\r\n    }\r\n    API.get(url, {\r\n      params: { page: page, size: size },\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(response.data.result);\r\n        setData(response.data.result);\r\n      } else {\r\n        alert(\"인터넷 연결에 실패했습니다.\");\r\n      }\r\n    });\r\n  }, [page]);\r\n\r\n  return (\r\n    <div>\r\n      <BoardContainer>\r\n        {myBoard === false && myInterestedBoard === false && (\r\n          <Fragment>\r\n            <OptionTab\r\n              FilterVisibility\r\n              WriteVisibility\r\n              InterestText=\"관심 목록 보기\"\r\n            ></OptionTab>\r\n          </Fragment>\r\n        )}\r\n        <BoardBody>\r\n          {data.map((item) => {\r\n            return (\r\n              <div>\r\n                <BoardBox\r\n                  item={item}\r\n                  key={item.postId}\r\n                  myBoard={myBoard}\r\n                ></BoardBox>\r\n              </div>\r\n            );\r\n          })}\r\n        </BoardBody>\r\n      </BoardContainer>\r\n      {data.length !== 0 && (\r\n        <footer>\r\n          <Pagination total={pageCount} page={page} setPage={setPage} />\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n\r\nBoard.defaultProps = {\r\n  myBoard: false,\r\n  myInterestedBoard: false,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as regularHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  width: 360px;\r\n  height: 250px;\r\n  background-color: ${(props) =>\r\n    props.processState === \"보호중\"\r\n      ? \"rgb(251, 223, 169)\"\r\n      : \"rgba(128, 128, 128, 0.2)\"};\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  display: flex;\r\n  padding: 12px;\r\n  justify-content: space-between;\r\n  white-space: normal;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst RecruitState = styled.div`\r\n  width: 75px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-radius: 10%;\r\n  background-color: ${(props) =>\r\n    props.processState === \"보호중\" ? \"orange\" : \"grey\"};\r\n  color: white;\r\n`;\r\n\r\nconst AnimalGender = styled.div`\r\n  margin-left: 10px;\r\n  line-height: 40px;\r\n  width: fit-content;\r\n  font-size: 20px;\r\n  font-weight: 1000;\r\n`;\r\n\r\nconst LikeIcon = styled(FontAwesomeIcon)`\r\n  float: right;\r\n  object-fit: fill;\r\n`;\r\n\r\nconst DogImage = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n`;\r\n\r\nconst DogInfo = styled.div`\r\n  width: 200px;\r\n  margin-left: 20px;\r\n  text-align: left;\r\n`;\r\n\r\nconst DogInfoDetail = styled.div`\r\n  overflow: hidden;\r\n  font-weight: 500;\r\n`;\r\n\r\nfunction AnimalItem({ item, onClick, onView, reload}) {\r\n  const {\r\n    animalId,\r\n    processState,\r\n    sexCd,\r\n    neuterYn,\r\n    kindCd,\r\n    happenDt,\r\n    orgNm,\r\n    happenPlace,\r\n    popfile,\r\n    likeFlag,\r\n  } = item;\r\n\r\n  const gender = sexCd === \"M\" ? \"수컷\" : \"암컷\";\r\n  const neuter = neuterYn === \"N\" ? \"(중성화 X)\" : \"(중성화 O)\";\r\n\r\n  return (\r\n    <Container\r\n      processState={processState}\r\n      onClick={() => {\r\n        onClick();\r\n        onView(item.animalId);\r\n      }}\r\n    >\r\n      <Box>\r\n        <HeaderLeft>\r\n          <RecruitState processState={processState}>\r\n            {processState}\r\n          </RecruitState>\r\n          <div style={{ display: \"flex\" }}>\r\n            <AnimalGender>{gender}</AnimalGender>\r\n            <AnimalGender>{neuter}</AnimalGender>\r\n          </div>\r\n        </HeaderLeft>\r\n        <LikeIcon\r\n          size=\"2x\"\r\n          icon={likeFlag === 1 ? solidHeart : regularHeart}\r\n       \r\n        ></LikeIcon>\r\n      </Box>\r\n      <Box>\r\n        <DogImage src={popfile}></DogImage>\r\n        <DogInfo>\r\n          <DogInfoDetail>• 품종 : {kindCd}</DogInfoDetail>\r\n          <DogInfoDetail>• 등록일 : {happenDt}</DogInfoDetail>\r\n          <DogInfoDetail>• 구조장소 : {happenPlace.slice(0, 10)}</DogInfoDetail>\r\n          <DogInfoDetail>• 담당기관명 : {orgNm}</DogInfoDetail>\r\n        </DogInfo>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AnimalItem;\r\n","import React, {  useState, useEffect } from \"react\";\r\nimport styled  from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRectangleXmark as closeBtn } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as regularHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport API from \"./../utils/api\";\r\n\r\nfunction AnimalPopup({ item, onClose, likeFlag }) {\r\n  useEffect(() => {\r\n    getAnimalInfo(item.animalId);\r\n  }, []);\r\n\r\n  const [like, setLike] = useState(likeFlag);\r\n\r\n\r\n  // 유기동물 상세정보 조회하기\r\n  const getAnimalInfo = (animalId) => {\r\n    API.get(\"/animals/\" + animalId).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(response.data);\r\n        setAnimal(response.data.result);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    });\r\n  };\r\n\r\n  const [animal, setAnimal] = useState({\r\n    animalId: 0,\r\n    desertionNo: \"\",\r\n    filename: \"\",\r\n    happenDt: \"\",\r\n    happenPlace: \"\",\r\n    kindCd: \"\",\r\n    colorCd: \"\",\r\n    age: \"\",\r\n    weight: \"\",\r\n    noticeNo: \"\",\r\n    noticeSdt: \"\",\r\n    noticeEdt: \"\",\r\n    popfile: \"\",\r\n    processState: \"\",\r\n    sexCd: \"\",\r\n    neuterYn: \"\",\r\n    specialMark: \"\",\r\n    careNm: \"\",\r\n    careTe: \"\",\r\n    careAddr: \"\",\r\n    orgNm: \"\",\r\n  });\r\n\r\n  const Like = (event) => {\r\n    if (sessionStorage.getItem(\"userJWT\") === null){\r\n      alert(\"로그인을 하신 후 이용하실 수 있습니다.\");\r\n      event.preventDefault();\r\n    }\r\n    if (like === 1) {\r\n      // 좋아요 취소\r\n      API.delete(\"/animals/unlike\", {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n        data: {\r\n          animalIdList: JSON.parse(\"[\" + animal.animalId + \"]\"),\r\n        },\r\n      }).then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.isSuccess) {\r\n          setLike(0);\r\n        }\r\n      });\r\n    } else {\r\n      // 좋아요 누르기\r\n      const params = new URLSearchParams({\r\n        animalId: animal.animalId,\r\n      }).toString();\r\n      const url = \"/animals/like?\" + params;\r\n\r\n      API.post(url, null, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n      }).then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.isSuccess) {\r\n          setLike(1);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DarkBackground>\r\n      <DialogBlock>\r\n        <Header>\r\n          <CloseBtn icon={closeBtn} onClick={onClose}></CloseBtn>\r\n        </Header>\r\n        <Body>\r\n          <ImageBox>\r\n            <DogImage src={animal.popfile}></DogImage>\r\n            <RecruiteState processState={animal.processState}>\r\n              {animal.processState}\r\n            </RecruiteState>\r\n          </ImageBox>\r\n          <TextBox>\r\n            <ImageBottomBox>\r\n              <DogKind>{animal.kindCd}</DogKind>\r\n              <LikeIcon\r\n                size=\"2x\"\r\n                icon={like === 1 ? solidHeart : regularHeart}\r\n                onClick={Like}\r\n              ></LikeIcon>\r\n            </ImageBottomBox>\r\n            <DogInfoText>{animal.specialMark}</DogInfoText>\r\n            <Divider></Divider>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>공고번호 :</DogInfoTitle>\r\n              <DogInfoText\r\n                style={{\r\n                  color: \"orange\",\r\n                  fontWeight: \"bolder\",\r\n                }}\r\n              >\r\n                {animal.noticeNo}\r\n              </DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>공고기간 : </DogInfoTitle>\r\n              <DogInfoText>\r\n                {animal.noticeSdt} ~ {animal.noticeEdt}\r\n              </DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>발견장소 :</DogInfoTitle>\r\n              <DogInfoText>{animal.happenPlace}</DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>특이사항 :</DogInfoTitle>\r\n              <DogInfoText>{animal.specialMark}</DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>보호센터 :</DogInfoTitle>\r\n              <DogInfoText>\r\n                {animal.careNm} (Tel : {animal.careTel})\r\n                <br />주소 : {animal.careAddr}\r\n              </DogInfoText>\r\n            </DogInfoTextBox>\r\n            <DogInfoTextBox>\r\n              <DogInfoTitle>담당센터 : </DogInfoTitle>\r\n              <DogInfoText>{animal.orgNm}</DogInfoText>\r\n            </DogInfoTextBox>\r\n\r\n          </TextBox>\r\n        </Body>\r\n      </DialogBlock>\r\n    </DarkBackground>\r\n  );\r\n}\r\n\r\nexport default AnimalPopup;\r\n\r\nconst DarkBackground = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst DialogBlock = styled.div`\r\n  width: 700px;\r\n  height: fit-content;\r\n  padding: 5px;\r\n  background: white;\r\n  border-radius: 2px;\r\n  border: solid;\r\n  border-color: orange;\r\n  border-width: 10px;\r\n  font-size: 15px;\r\n  overflow: auto;\r\n  max-height: 1200px;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  width: 85%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst CloseBtn = styled(FontAwesomeIcon)`\r\n  width: 50px;\r\n  height: 50px;\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  width: fit-content;\r\n  position: relative;\r\n`;\r\n\r\nconst DogImage = styled.img`\r\n  width: 550px;\r\n  height: 400px;\r\n`;\r\n\r\nconst RecruiteState = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  width: 75px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  border-radius: 10%;\r\n  background-color: ${(props) =>\r\n    props.processState === \"보호중\" ? \"orange\" : \"grey\"};\r\n  color: white;\r\n`;\r\n\r\nconst ImageBottomBox = styled.div`\r\n  height: fit-content;\r\n  display: flex;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst DogKind = styled.div`\r\n  padding: 3px;\r\n  font-weight: bolder;\r\n  margin-bottom: 5px;\r\n  font-size: xx-large;\r\n  background-color: rgba(255, 166, 0, 0.3);\r\n`;\r\n\r\nconst DogInfoTitle = styled.div`\r\n  width: 100px;\r\n  text-align: left;\r\n  font-size: large;\r\n`;\r\n\r\nconst DogInfoText = styled.div`\r\n  width: 500px;\r\n  text-align: left;\r\n  font-size: large;\r\n`;\r\n\r\nconst DogInfoTextBox = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: rgb(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst LikeIcon = styled(FontAwesomeIcon)`\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport OptionTab from \"../components/OptionTab\";\r\nimport AnimalItem from \"../components/AnimalItem\";\r\nimport styled from \"styled-components\";\r\nimport AnimalPopup from \"../components/AnimalPopup\";\r\nimport API from \"./../utils/api\";\r\nimport Pagination from \"./../components/Pagination\";\r\n\r\nexport const AbandonedAnimal = ({ myInterest }) => {\r\n  var size = 6;\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [animals, setAnimals] = useState([]);\r\n  const [currentAnimal, setCurrentAnimal] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAnimalList(page, size);\r\n  }, [page, reload]);\r\n\r\n  // 유기동물 리스트 조회하기\r\n  const getAnimalList = (page, size) => {\r\n    var url = \"\";\r\n    if (myInterest === true) {\r\n      url = \"/animals/mypage\";\r\n      size = 4;\r\n    } else {\r\n      url = \"/animals\";\r\n    }\r\n\r\n    if (sessionStorage.getItem(\"userJWT\") === null) {\r\n      console.log(\"null\");\r\n      API.get(url, {\r\n        params: { page: page, size: size },\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": \"\",\r\n        },\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          const pageCriteria = response.data.result.pageCriteria;\r\n          const animalSimpleInfo = response.data.result.animalSimpleInfo;\r\n\r\n          console.log(response.data);\r\n          setPageCount(pageCriteria.totalPage);\r\n          setAnimals(animalSimpleInfo);\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      });\r\n    } else {\r\n      API.get(url, {\r\n        params: { page: page, size: size },\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          const pageCriteria = response.data.result.pageCriteria;\r\n          const animalSimpleInfo = response.data.result.animalSimpleInfo;\r\n\r\n          console.log(response.data);\r\n          setPageCount(pageCriteria.totalPage);\r\n          setAnimals(animalSimpleInfo);\r\n        } else {\r\n          console.log(response);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onClose = () => {\r\n    setDialog(false);\r\n    setReload(true);\r\n  };\r\n\r\n  const onView = (key) => {\r\n    setCurrentAnimal(animals.find((item) => item.animalId === key));\r\n  };\r\n\r\n  const onClick = () => {\r\n    setDialog(true);\r\n    setReload(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!myInterest && (\r\n        <OptionTab ImgSearchVisibility WriteVisibility={false}></OptionTab>\r\n      )}\r\n      <Body>\r\n        <Container myInterest={myInterest}>\r\n          {animals.map((item) => {\r\n            return (\r\n              <AnimalItem\r\n                item={item}\r\n                key={item.animalId}\r\n                onClick={onClick}\r\n                onView={onView}\r\n              ></AnimalItem>\r\n            );\r\n          })}\r\n        </Container>\r\n      </Body>\r\n      {dialog ? (\r\n        <AnimalPopup\r\n          item={currentAnimal}\r\n          key={currentAnimal.animalId}\r\n          onClose={onClose}\r\n          likeFlag={currentAnimal.likeFlag}\r\n        ></AnimalPopup>\r\n      ) : null}\r\n      {animals.length !== 0 && (\r\n        <footer>\r\n          <Pagination total={pageCount} page={page} setPage={setPage} />\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AbandonedAnimal;\r\n\r\nAbandonedAnimal.defaultProps = {\r\n  myInterest: false,\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: fit-content;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  grid-template-columns: ${(props) =>\r\n    props.myInterest === true ? \"1fr 1fr\" : \"1fr 1fr 1fr\"};\r\n`;\r\n\r\nconst Body = styled.div`\r\n  margin-bottom: 100px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabBar = styled.div`\r\n  background: transparent;\r\n  width: max-content;\r\n  margin-bottom: 1rem;\r\n  white-space: nowrap;\r\n  margin-top: 80px;\r\n  padding-right: 50px;\r\n`;\r\n\r\nconst TabUl = styled.ul``;\r\n\r\nconst TabLi = styled.div`\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  white-space: nowrap;\r\n  color: black;\r\n  padding-top: 1rem;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  padding-bottom: 1rem;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  border-color: rgb(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  text-align: center;\r\n\r\n  &.active {\r\n    background-color: rgb(243, 156, 18, 0.2);\r\n  }\r\n`;\r\n\r\nconst TabLink = styled(Link)`\r\n  text-decoration: none;\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nfunction MyPageTab() {\r\n  const currentTab = () => {\r\n    let path = window.location.pathname;\r\n\r\n    if (path === \"/mypage/my_comment\") return 2;\r\n    else if (path === \"/mypage/my_interested_animal\") return 3;\r\n    else if (path === \"/mypage/my_interested_board\") return 4;\r\n    else if (path === \"/mypage/edit_info\") return 5;\r\n    else if (path.includes(\"/mypage\")) return 1;\r\n  };\r\n\r\n  const [menu, setMenu] = useState(currentTab);\r\n\r\n  return (\r\n    <TabBar>\r\n      <TabUl>\r\n        <TabLink to=\"\">\r\n          <TabLi\r\n            className={menu === 1 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 1);\r\n            }}\r\n          >\r\n            내가 작성한 글\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"my_comment\">\r\n          <TabLi\r\n            className={menu === 2 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 2);\r\n            }}\r\n          >\r\n            내가 작성한 댓글\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"my_interested_animal\">\r\n          <TabLi\r\n            className={menu === 3 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 3);\r\n            }}\r\n          >\r\n            관심있는 동물\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"my_interested_board\">\r\n          <TabLi\r\n            className={menu === 4 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 4);\r\n            }}\r\n          >\r\n            관심있는 글\r\n          </TabLi>\r\n        </TabLink>\r\n        <TabLink to=\"edit_info\">\r\n          <TabLi\r\n            className={menu === 5 ? \"active\" : \"\"}\r\n            onClick={() => {\r\n              setMenu(() => 5);\r\n            }}\r\n          >\r\n            내 정보 수정\r\n          </TabLi>\r\n        </TabLink>\r\n      </TabUl>\r\n    </TabBar>\r\n  );\r\n}\r\n\r\nexport default MyPageTab;\r\n","import React from \"react\";\r\nimport { Board } from './../pages/Board';\r\n\r\n\r\nfunction MyBoard() {\r\n  return (\r\n    <div style={{marginTop:\"100px\", marginLeft:\"100px\"}}>\r\n      <Board myBoard={true}></Board>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport API from \"./../utils/api\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nfunction MyComment() {\r\n  var size = 10;\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [checkedComments, setCheckedComments] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getMyComments(page, size);\r\n  }, [page]);\r\n\r\n  // 유기동물 리스트 조회하기\r\n  const getMyComments = (page, size) => {\r\n    var url = \"/comments/mypage\";\r\n\r\n    console.log(\"null\");\r\n    API.get(url, {\r\n      params: { page: page, size: size },\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        const pageCriteria = response.data.result.pageCriteriaDto;\r\n        const comments = response.data.result.commentList;\r\n\r\n        console.log(response.data);\r\n        setPageCount(pageCriteria.totalPage);\r\n        setComments(comments);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    });\r\n  };\r\n\r\n  // 전체 체크 클릭 시 발생하는 함수\r\n  const onCheckedAll = (checked) => {\r\n    if (checked) {\r\n      const checkedListArray = [];\r\n      comments.forEach((item) => checkedListArray.push(item));\r\n      setCheckedComments(checkedListArray);\r\n    } else {\r\n      setCheckedComments([]);\r\n    }\r\n  };\r\n\r\n  // 개별 체크 클릭 시 발생하는 함수\r\n  const onCheckedElement = (checked, item) => {\r\n    if (checked) {\r\n      setCheckedComments([...checkedComments, item]);\r\n    } else if (!checked) {\r\n      setCheckedComments(checkedComments.filter((el) => el !== item));\r\n    }\r\n  };\r\n\r\n  // 댓글 삭제\r\n  const onDelete = async () => {\r\n    var length = checkedComments.length;\r\n    var index = 0;\r\n    try {\r\n      for (const comment of checkedComments) {\r\n        index++;\r\n        console.log(comment);\r\n        await API.delete(\"/comments\" + \"/\" + comment.postId, {\r\n          data: {\r\n            // 서버에서 req.body.{} 로 확인할 수 있다.\r\n            commentId: comment.commentId,\r\n            userId: Number(sessionStorage.getItem(\"userID\")),\r\n          },\r\n          headers: {\r\n            \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              if (index === length) {\r\n                alert(\"댓글이 삭제되었습니다.\");\r\n                window.location.reload();\r\n              }\r\n              console.log(index);\r\n            } else {\r\n              alert(\"댓글 삭제에 실패하였습니다.\");\r\n              return;\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      }\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  // 게시물로 이동\r\n  const onGoToBoard = (postId) => {\r\n    navigate(\"/board/detail/\" + postId, { state: { myBoard: true } });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"100px\", marginLeft: \"100px\" }}>\r\n      {comments.map((item) => {\r\n        return (\r\n          <Container>\r\n            <Checkbox\r\n              type={\"checkbox\"}\r\n              key={item.commentId}\r\n              onChange={(e) => onCheckedElement(e.target.checked, item)}\r\n              checked={checkedComments.includes(item) ? true : false}\r\n            ></Checkbox>\r\n            <Box onClick={() => onGoToBoard(item.postId)}>\r\n              <Comment>{item.commentContent}</Comment>\r\n              <Option>{item.date}</Option>\r\n              <div style={{ display: \"flex\" }}>\r\n                <Option>{item.postTitle}</Option>\r\n                <Option style={{ color: \"orange\" }}>[8]</Option>\r\n              </div>\r\n            </Box>\r\n          </Container>\r\n        );\r\n      })}\r\n\r\n      <Divider></Divider>\r\n      <BottomBox>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Checkbox\r\n            type={\"checkbox\"}\r\n            style={{ marginRight: \"7px\" }}\r\n            onChange={(e) => onCheckedAll(e.target.checked)}\r\n            checked={\r\n              checkedComments.length === 0\r\n                ? false\r\n                : checkedComments.length === comments.length\r\n                ? true\r\n                : false\r\n            }\r\n          ></Checkbox>\r\n          <div style={{ fontSize: \"0.8rem\", marginTop: \"5px\" }}>전체선택</div>\r\n        </div>\r\n        <Button onClick={() => onDelete()}>삭제</Button>\r\n      </BottomBox>\r\n\r\n      {comments.length !== 0 && (\r\n        <footer>\r\n          <Pagination total={pageCount} page={page} setPage={setPage} />\r\n        </footer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComment;\r\n\r\nconst Container = styled.div`\r\n  width: 50vw;\r\n  position: relative;\r\n  text-align: start;\r\n  display: flex;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  cursor: pointer;\r\n  width: 50%;\r\n  text-align: start;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n  font-size: 1em;\r\n  padding: 2px;\r\n`;\r\n\r\nconst Option = styled.div`\r\n  font-size: 0.8em;\r\n  padding: 2px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-top: 7px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: rgb(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst BottomBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 0.7em;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  margin-left: 10px;\r\n  background-color: white;\r\n  border: 1px solid rgba(64, 64, 64, 0.5);\r\n`;\r\n","import React from \"react\";\r\n\r\nimport AbandonedAnimal from \"../pages/AbandonedAnimal\";\r\n\r\nexport const MyInterestedAnimal = () => {\r\n  return (\r\n    <div style={{marginTop:\"100px\", marginLeft:\"100px\"}}>\r\n      <AbandonedAnimal myInterest={true}></AbandonedAnimal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyInterestedAnimal;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Board } from './../pages/Board';\r\n\r\nfunction MyInterestedBoard() {\r\n  return (\r\n    <div style={{marginTop:\"100px\", marginLeft:\"100px\"}}>\r\n    <Board myInterestedBoard={true}></Board>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default MyInterestedBoard;\r\n","import React, {  useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport API from \"./../utils/api\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const EditMyInfo = () => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    nickname: \"\",\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    phoneNum: \"\",\r\n  });\r\n  const { email, nickname, password, newPassword, phoneNum } = inputs; // 비구조화 할당을 통해 값 추출\r\n\r\n  /** 사진 관리 변수 */\r\n  const [prevProfileImg, setPrevProfileImg] = useState(\"\");\r\n  const default_profile_img = \"https://ifh.cc/g/jLgWsT.png\";\r\n  const [image, setImage] = useState({\r\n    image_file: \"\",\r\n    preview_URL: default_profile_img,\r\n  });\r\n \r\n  const [isProfileChanged, setIsProfileChanged] = useState(false);\r\n  const fileInput = useRef(null);\r\n\r\n  /** 닉네임 관리 변수 */\r\n  const [isNicknameChecked, setIsNicknameChecked] = useState(false); // 중복확인 완료\r\n\r\n  /** 비밀번호 관리 변수 */\r\n  const [isPasswordChecked, setIsPasswordChecked] = useState(false); // 비밀번호확인 완료\r\n\r\n  /** 연락처 관리 변수 */\r\n  const [prevPhoneNum, setPrevPhoneNum] = useState(\"\");\r\n\r\n  /** 프로필 사진 업로드 */\r\n  const OnProfileChange = (e) => {\r\n    //화면에 프로필 사진 표시\r\n    const reader = new FileReader();\r\n\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      setIsProfileChanged(true);\r\n    }\r\n    reader.onload = () => {\r\n      setImage({\r\n        image_file: e.target.files[0],\r\n        preview_URL: reader.result,\r\n      });\r\n    };\r\n  };\r\n\r\n\r\n  /** 닉네임 중복확인 */\r\n  const checkDuplicateNickname = async () => {\r\n    if (nickname.length === 0) {\r\n      alert(\"닉네임을 입력해주세요.\");\r\n    } else {\r\n      try {\r\n        const params = { nickname: nickname };\r\n        const res = await API.get(\"/users/chk-nickname\", { params }); // API 가 get 해올 때까지 기다리고, 결과 값을 res 에 담음\r\n        console.log(res.data);\r\n        if (res.data.isSuccess) {\r\n          setIsNicknameChecked(true);\r\n        } else {\r\n          alert(\"이미 사용중인 닉네임입니다.\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.get(\"/users/\" + Number(sessionStorage.getItem(\"userID\")), {\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        const data = response.data.result;\r\n        setPrevProfileImg(data.profileUrl);\r\n        setPrevPhoneNum(data.phoneNum);\r\n        console.log(data);\r\n\r\n        setInputs({\r\n          ...inputs,\r\n          email: data.email,\r\n          nickname: data.nickname,\r\n          phoneNum: data.phoneNum,\r\n        });\r\n        setImage({\r\n          image_file: \"\",\r\n          preview_URL:\r\n            data.profileUrl === null ? default_profile_img : data.profileUrl,\r\n        });\r\n      } else {\r\n        console.log(response.data.result);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onInputChange = (e) => {\r\n    const { value, name } = e.target; // 우선 e.target 에서 name 과 value 를 추출\r\n\r\n    setInputs({\r\n      ...inputs, // 기존의 input 객체를 복사한 뒤\r\n      [name]: value, // name 키를 가진 값을 value 로 설정\r\n    });\r\n\r\n    if (name === \"nickname\") {\r\n      setIsNicknameChecked(false);\r\n    } else if (name === \"password\") {\r\n      setIsPasswordChecked(false);\r\n    } else if (name === \"phoneNum\") {\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: value.replace(/[^0-9]/g, \"\").replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/,\"$1-$2-$3\").replace(\"--\", \"-\")\r\n      })\r\n    }\r\n  };\r\n\r\n  const onSubmitProfile = async () => {\r\n    var deleteFlag = 0;\r\n    if (isProfileChanged && image.image_file !== \"\") {\r\n      // 수정된 것\r\n      console.log(\"수정됨(사진변경) 1\");\r\n    } else if (isProfileChanged && image.image_file === \"\") {\r\n      if (prevProfileImg === null) {\r\n        // 수정안된것\r\n        alert(\"사진이 수정되지 않았습니다.\");\r\n        return;\r\n      } else {\r\n        console.log(\"수정됨(사진 삭제) 3\");\r\n        deleteFlag = 1;\r\n      }\r\n    } else if (!isProfileChanged) {\r\n      alert(\"사진이 수정되지 않았습니다.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      if (deleteFlag === 1) {\r\n        // 프로필 사진 삭제\r\n        formData.append(\"deleteFlag\", 1);\r\n      } else {\r\n        formData.append(\"newProfileImg\", image.image_file);\r\n      }\r\n      if (prevProfileImg !== \"\") {\r\n        formData.append(\"originProfileImgUrl\", prevProfileImg);\r\n      }\r\n\r\n      // JSON.stringify(data)\r\n      await API.patch(\"/mypage/myInfo/profileImg\", formData, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"프로필 사진이 수정되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"프로필 사진 수정에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  const onSubmitNickName = async () => {\r\n    if (!isNicknameChecked) {\r\n      alert(\"닉네임 중복확인을 먼저 진행해주세요.\");\r\n      return;\r\n    } else {\r\n      try {\r\n        // JSON.stringify(data)\r\n        await API.patch(\r\n          \"/mypage/myInfo/nickname\",\r\n          JSON.stringify({ nickname: nickname }),\r\n          {\r\n            headers: {\r\n              \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              alert(\"닉네임이 수정되었습니다.\");\r\n              window.location.reload();\r\n            } else {\r\n              console.log(\"닉네임\", nickname);\r\n              console.log(response);\r\n              alert(\"닉네임 수정에 실패했습니다.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onCheckPassword = async () => {\r\n    let data = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      // JSON.stringify(data)\r\n      await API.post(\"/mypage/myInfo/checkUser\", JSON.stringify(data), {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"비밀번호가 확인되었습니다.\");\r\n            setIsPasswordChecked(true);\r\n          } else {\r\n            console.log(response);\r\n            alert(\"비밀번호가 일치하지 않습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  const onSubmitPassword = async () => {\r\n    if (!isPasswordChecked) {\r\n      alert(\"현재 비밀번호 확인을 먼저 진행해주세요.\");\r\n      return;\r\n    } else {\r\n      try {\r\n        // JSON.stringify(data)\r\n        await API.patch(\r\n          \"/mypage/myInfo/password\",\r\n          JSON.stringify({ newPassword: newPassword }),\r\n          {\r\n            headers: {\r\n              \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              alert(\"비밀번호가 수정되었습니다.\");\r\n              window.location.reload();\r\n            } else {\r\n              console.log(response);\r\n              alert(\"비밀번호 수정에 실패했습니다.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmitPhonenum = async () => {\r\n    if (prevPhoneNum === phoneNum) {\r\n      alert(\"연락처가 수정되지 않았습니다.\");\r\n    } else {\r\n      try {\r\n        // JSON.stringify(data)\r\n        await API.patch(\r\n          \"/mypage/myInfo/phoneNum\",\r\n          JSON.stringify({ phoneNum: phoneNum }),\r\n          {\r\n            headers: {\r\n              \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n          .then((response) => {\r\n            if (response.data.isSuccess) {\r\n              alert(\"연락처가 수정되었습니다.\");\r\n              window.location.reload();\r\n            } else {\r\n              console.log(response);\r\n              alert(\"연락처 수정에 실패했습니다.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: \"100px\" }}>\r\n      <Title> 내 정보 수정</Title>\r\n      <Divider></Divider>\r\n      <Container>\r\n        <BoxContainer>\r\n          <Profile>\r\n            <ProfileText>프로필사진</ProfileText>\r\n            <ProfileImageWrap>\r\n              <ProfileImage src={image.preview_URL}></ProfileImage>\r\n              <input\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n                accept=\"image/*\"\r\n                name=\"profile_img\"\r\n                onChange={OnProfileChange}\r\n                ref={fileInput}\r\n              />\r\n              <div style={{ display: \"flex\" }}>\r\n                <SelectProfileBox\r\n                  onClick={() => {\r\n                    fileInput.current.click();\r\n                  }}\r\n                >\r\n                  사진 업로드\r\n                </SelectProfileBox>\r\n                <SelectProfileBox> | </SelectProfileBox>\r\n                <SelectProfileBox\r\n                  onClick={() => {\r\n                    setImage({\r\n                      image_file: \"\",\r\n                      preview_URL: default_profile_img,\r\n                    });\r\n                    setIsProfileChanged(true);\r\n                  }}\r\n                >\r\n                  삭제\r\n                </SelectProfileBox>\r\n              </div>\r\n            </ProfileImageWrap>\r\n          </Profile>\r\n          <EditBtn onClick={onSubmitProfile}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n        <Divider></Divider>\r\n        <BoxContainer>\r\n          <Box>\r\n            <BoxText>닉네임</BoxText>\r\n            <div style={{ display: \"flex\", width: \"300px\" }}>\r\n              <BoxSearch>\r\n                <InputSearch\r\n                  name=\"nickname\"\r\n                  onChange={onInputChange}\r\n                  value={nickname}\r\n                />\r\n                <BtnSearch onClick={checkDuplicateNickname}>중복확인</BtnSearch>\r\n              </BoxSearch>\r\n              {isNicknameChecked && (\r\n                <CheckIcon size=\"2x\" icon={faCheck} color=\"orange\"></CheckIcon>\r\n              )}\r\n            </div>\r\n          </Box>\r\n          <EditBtn onClick={onSubmitNickName}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n        <Divider></Divider>\r\n        <BoxContainer>\r\n          <div>\r\n            <Box style={{ marginBottom: \"20px\" }}>\r\n              <BoxText>현재 비밀번호</BoxText>\r\n              <div style={{ display: \"flex\", width: \"300px\" }}>\r\n                <BoxSearch>\r\n                  <InputSearch\r\n                    name=\"password\"\r\n                    onChange={onInputChange}\r\n                    value={password}\r\n                  />\r\n                  <BtnSearch onClick={onCheckPassword}>확인</BtnSearch>\r\n                </BoxSearch>\r\n                {isPasswordChecked && (\r\n                  <CheckIcon\r\n                    size=\"2x\"\r\n                    icon={faCheck}\r\n                    color=\"orange\"\r\n                  ></CheckIcon>\r\n                )}\r\n              </div>\r\n            </Box>\r\n            <Box>\r\n              <BoxText>새 비밀번호</BoxText>\r\n              <div style={{ display: \"flex\", width: \"300px\" }}>\r\n                <BoxSearch>\r\n                  <InputSearch\r\n                    name=\"newPassword\"\r\n                    onChange={onInputChange}\r\n                    value={newPassword}\r\n                  />\r\n                </BoxSearch>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n          <EditBtn onClick={onSubmitPassword}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n        <Divider></Divider>\r\n        <BoxContainer>\r\n          <Box>\r\n            <BoxText>연락처</BoxText>\r\n            <div style={{ display: \"flex\", width: \"300px\" }}>\r\n              <BoxSearch>\r\n                <InputSearch\r\n                  name=\"phoneNum\"\r\n                  onChange={onInputChange}\r\n                  value={phoneNum}\r\n                  maxLength=\"13\"\r\n                />\r\n              </BoxSearch>\r\n            </div>\r\n          </Box>\r\n          <EditBtn onClick={onSubmitPhonenum}>수정하기</EditBtn>\r\n        </BoxContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditMyInfo;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 100px;\r\n  font-weight: 700;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: rgb(0, 0, 0, 0.1);\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: fit-content;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 200px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  color: orange;\r\n  font-size: 40px;\r\n  padding: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst BoxContainer = styled.div`\r\n  white-space: nowrap;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst BoxWrapper = styled.div`\r\n  height: 70px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 600px;\r\n  text-align: left;\r\n  display: flex;\r\n  cursor: auto;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst BoxText = styled.div`\r\n  width: 150px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  width: 600px;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: auto;\r\n`;\r\n\r\nconst ProfileText = styled.div`\r\n  width: 150px;\r\n  text-align: left;\r\n  vertical-align: top;\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst SelectProfileBox = styled.div`\r\n  width: 100px;\r\n  text-align: left;\r\n  vertical-align: top;\r\n  margin-top: 5px;\r\n  margin-right: 15px;\r\n  padding: 5px;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ProfileImageWrap = styled.div`\r\n  width: 200px;\r\n  display: inline-block;\r\n  text-align: left;\r\n`;\r\n\r\nconst ProfileImage = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  display: inline-block;\r\n  justify-content: center;\r\n  padding: 3px;\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nconst EditBtn = styled.button`\r\n  width: 150px;\r\n  border: none;\r\n  background-color: orange;\r\n  height: 60px;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  color: white;\r\n  font-weight: bolder;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst BoxSearch = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  border: solid;\r\n  border-width: 1px;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  display: inline-block;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst InputSearch = styled.input`\r\n  width: 200px;\r\n  height: 40px;\r\n  border: none;\r\n  padding-inline: 10px;\r\n  margin-right: 3px;\r\n  :focus {\r\n    outline: 2px solid gray;\r\n  }\r\n`;\r\n\r\nconst BtnSearch = styled.button`\r\n  width: 100px;\r\n  height: 42px;\r\n  line-height: 42px;\r\n  border: none;\r\n  background-color: rgb(255, 224, 166);\r\n`;\r\n\r\nconst CheckIcon = styled(FontAwesomeIcon)`\r\n  margin-left: 10px;\r\n  line-height: 40px;\r\n`;\r\n","import React, {useEffect } from \"react\";\r\nimport {\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport MyPageTab from \"../components/MyPageTab\";\r\nimport styled from \"styled-components\";\r\nimport MyBoard from \"./../components/MyBoard\";\r\nimport MyComment from \"./../components/MyComment\";\r\nimport MyInterestedAnimal from \"./../components/MyInterestedAnimal\";\r\nimport MyInterestedBoard from \"./../components/MyInterestedBoard\";\r\nimport EditMyInfo from \"./../components/EditMyInfo\";\r\n\r\nconst Container = styled.div`\r\n  width: 1200px;\r\n  display: flex;\r\n  white-space: nowrap;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nfunction MyPage() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"userID\") === null) {\r\n      alert(\"로그인을 하신 후에 이용하실 수 있습니다.\");\r\n      navigate(\"/login\");\r\n    }\r\n  });\r\n  return (\r\n    <Container>\r\n      <MyPageTab></MyPageTab>\r\n      <Routes>\r\n        <Route path=\"\" element={<MyBoard />}></Route>\r\n\r\n        <Route path=\"my_comment\" element={<MyComment />}></Route>\r\n\r\n        <Route\r\n          path=\"my_interested_animal\"\r\n          element={<MyInterestedAnimal />}\r\n        ></Route>\r\n\r\n        <Route\r\n          path=\"my_interested_board\"\r\n          element={<MyInterestedBoard />}\r\n        ></Route>\r\n        <Route path=\"edit_info\" element={<EditMyInfo />}></Route>\r\n\r\n        <Route path=\"*\" element={<Navigate to=\"/mypage\" replace />} />\r\n      </Routes>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MyPage;\r\n","import React, { useState } from \"react\";\r\nimport API from \"./../utils/api\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 950px;\r\n  height: fit-content;\r\n  margin-top: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px solid lightgray;\r\n  border-radius: 3px;\r\n  text-align: left;\r\n`;\r\n\r\nconst CommentInput = styled.textarea`\r\n  width: 900px;\r\n  line-height: 30px;\r\n  border: none;\r\n  size: 10;\r\n  word-break: break-all;\r\n  resize: none;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  font-size: 20px;\r\n  color: grey;\r\n  font-weight: bolder;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Count = styled.div`\r\n  text-align: end;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  justify-content: flex-end;\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const CommentWrite = ({ parentCommentId, postId, reply }) => {\r\n  const [commentInput, setCommentInput] = useState(\"\");\r\n  const [textAreaCount, setTextAreaCount] = useState(0);\r\n\r\n  const onInputChange = (e) => {\r\n    setCommentInput(e.currentTarget.value);\r\n    setTextAreaCount(e.target.value.length);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      let data = {\r\n        parentCommentId: parentCommentId,\r\n        postId: Number(postId),\r\n        content: commentInput,\r\n      };\r\n      await API.post(\"/comments\", JSON.stringify(data), {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"댓글이 등록되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"댓글 등록에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Count>\r\n        <span>{textAreaCount}</span>/200\r\n      </Count>\r\n      <CommentInput\r\n        placeholder=\"댓글을 입력해주세요.\"\r\n        onChange={onInputChange}\r\n        value={commentInput}\r\n        maxLength={199}\r\n      ></CommentInput>\r\n      <Box>\r\n        <Btn onClick={onSubmit}>등록</Btn>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import React, {\r\n  useState,\r\n\r\n} from \"react\";\r\nimport API from \"./../utils/api\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 950px;\r\n  height: fit-content;\r\n  margin-top: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px solid lightgray;\r\n  border-radius: 3px;\r\n  text-align: left;\r\n`;\r\n\r\nconst CommentInput = styled.textarea`\r\n  width: 900px;\r\n  line-height: 30px;\r\n  border: none;\r\n  size: 10;\r\n  word-break: break-all;\r\n  resize: none;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  font-size: 20px;\r\n  color: grey;\r\n  font-weight: bolder;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Count = styled.div`\r\n  text-align: end;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  justify-content: flex-end;\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const CommentUpdate = ({\r\n  commentId,\r\n  postId,\r\n  commentValue,\r\n  onCancle,\r\n}) => {\r\n  const [commentInput, setCommentInput] = useState(commentValue);\r\n  const [textAreaCount, setTextAreaCount] = useState(commentValue.length);\r\n\r\n  const onInputChange = (e) => {\r\n    setCommentInput(e.currentTarget.value);\r\n    setTextAreaCount(e.target.value.length);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      let data = {\r\n        commentId: commentId,\r\n        userId: Number(sessionStorage.getItem(\"userID\")),\r\n        postId: Number(postId),\r\n        content: commentInput,\r\n      };\r\n      await API.patch(\"/comments\", JSON.stringify(data), {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"댓글이 수정되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"댓글 수정에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Count>\r\n        <span>{textAreaCount}</span>/200\r\n      </Count>\r\n      <CommentInput\r\n        placeholder=\"댓글을 입력해주세요.\"\r\n        onChange={onInputChange}\r\n        value={commentInput}\r\n        maxLength={199}\r\n      ></CommentInput>\r\n      <Box>\r\n        <Btn onClick={onCancle}>취소</Btn>\r\n        <Btn onClick={onSubmit}>수정</Btn>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import React, {\r\n\r\n  useState,\r\n} from \"react\";\r\nimport API from \"../utils/api\";\r\nimport styled from \"styled-components\";\r\nimport { CommentWrite } from \"./CommentWrite\";\r\nimport { CommentUpdate } from \"./CommentUpdate\";\r\n\r\nconst Container = styled.div`\r\n  width: 1000px;\r\n  height: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: left;\r\n  display: flex;\r\n  margin-top: 20px;\r\n  padding-left: ${(props) => (props.reply ? \"50px\" : \"0px\")};\r\n`;\r\n\r\nconst ProfileImage = styled.div`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProfileImageShow = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 30%;\r\n  object-fit: fill;\r\n`;\r\n\r\nconst ProfileName = styled.div`\r\n  font-size: 17px;\r\n  font-weight: bold;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  font-size: 20px;\r\n  width: ${(props) => (props.reply ? \"850px\" : \"900px\")};\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst ExtraInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst BoxContent = styled.div`\r\n  margin-right: 20px;\r\n  color: grey;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: rgb(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport const SingleComment = ({ comment, postId, reply }) => {\r\n  const [isEditChecked, setIsEditChecked] = useState(false);\r\n  const [isReplying, setIsReplying] = useState(false);\r\n\r\n  const onClickEdit = () => {\r\n    setIsEditChecked(!isEditChecked);\r\n  };\r\n\r\n  const onClickReply = () => {\r\n    setIsReplying(!isReplying);\r\n  };\r\n\r\n  const onEditCancle = () => {\r\n    setIsEditChecked(!isEditChecked);\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      await API.delete(\"/comments\" + \"/\" + postId, {\r\n        data: {\r\n          // 서버에서 req.body.{} 로 확인할 수 있다.\r\n          commentId: comment.commentId,\r\n          userId: Number(sessionStorage.getItem(\"userID\")),\r\n        },\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"댓글이 삭제되었습니다.\");\r\n            window.location.reload();\r\n          } else {\r\n            console.log(response);\r\n            alert(\"댓글 삭제에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isEditChecked && (\r\n        <Container reply={reply}>\r\n          <ProfileImage>\r\n            <ProfileImageShow\r\n              src={comment.profileImgUrl}\r\n              referrerpolicy=\"no-referrer\"\r\n            />\r\n          </ProfileImage>\r\n          <div>\r\n            <ProfileName>{comment.nickname}</ProfileName>\r\n            <ContentBox reply={reply}>{comment.content}</ContentBox>\r\n            <ExtraInfo>\r\n              <Box>\r\n                <BoxContent>{comment.commentUpdateAt}</BoxContent>\r\n                {!reply && (\r\n                  <BoxContent\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={onClickReply}\r\n                  >\r\n                    답글쓰기\r\n                  </BoxContent>\r\n                )}\r\n              </Box>\r\n              {Number(sessionStorage.getItem(\"userID\")) === comment.userId && (\r\n                <Box>\r\n                  <BoxContent\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={onClickEdit}\r\n                  >\r\n                    수정\r\n                  </BoxContent>\r\n                  <BoxContent style={{ cursor: \"pointer\" }} onClick={onDelete}>\r\n                    삭제\r\n                  </BoxContent>\r\n                </Box>\r\n              )}\r\n            </ExtraInfo>\r\n          </div>\r\n        </Container>\r\n      )}\r\n      {isEditChecked && (\r\n        <CommentUpdate\r\n          commentId={comment.commentId}\r\n          postId={postId}\r\n          commentValue={comment.content}\r\n          onCancle={onEditCancle}\r\n        ></CommentUpdate>\r\n      )}\r\n      {isReplying && (\r\n        <CommentWrite\r\n          parentCommentId={comment.commentId}\r\n          postId={postId}\r\n          reply={true}\r\n        ></CommentWrite>\r\n      )}\r\n      <Divider></Divider>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SingleComment } from \"./SingleComment\";\r\n\r\nexport const ReplyComments = ({ commentList, parentCommentId, postId }) => {\r\n  \r\n  const renderReplyComment = (parentCommentId) =>\r\n    commentList.map((comment) => (\r\n      <div>\r\n        {comment.parentCommentId === parentCommentId && (\r\n          <div>\r\n            <SingleComment reply={true} comment={comment} postId={postId} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n\r\n  return <div>{renderReplyComment(parentCommentId)}</div>;\r\n};\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport API from \"./../utils/api\";\r\nimport styled from \"styled-components\";\r\nimport { CommentWrite } from \"./CommentWrite\";\r\nimport { SingleComment } from \"./SingleComment\";\r\nimport { ReplyComments } from \"./ReplyComments\";\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 1000px;\r\n  height: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 80px;\r\n  margin-bottom: 100px;\r\n`;\r\n\r\nexport const BoardComment = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // 서버에서 댓글 조회하기\r\n  const getComments = () => {\r\n    API.get(\"/comments\", { params: { postId: postId } }).then((response) => {\r\n      if (response.data.isSuccess) {\r\n        console.log(response.data);\r\n        setComments(response.data.result);\r\n      } else {\r\n        console.log(response);\r\n      }\r\n    });\r\n  };\r\n  useEffect(getComments, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        {comments.map((item) => {\r\n          if (item.parentCommentId === 0) {\r\n            return (\r\n              <div >\r\n                <SingleComment comment={item} postId={postId}></SingleComment>\r\n                <ReplyComments commentList={comments} parentCommentId={item.commentId} postId={postId}></ReplyComments>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        <CommentWrite parentCommentId={0} postId={postId} reply={false} ></CommentWrite>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport API from \"./../utils/api\";\r\nimport { Link, useNavigate  } from \"react-router-dom\";\r\nimport profileImage from \"../images/profileImage.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as regularHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  width: 1000px;\r\n  height: auto;\r\n  padding: 30px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 100px;\r\n  /* border-color: orange; */\r\n  border: 5px orange solid;\r\n`;\r\nconst ProfileBox = styled.div`\r\n  width: max-content;\r\n  /* background-color: black; */\r\n  display: flex;\r\n`;\r\nconst ProfileImage = styled.div`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ProfileImageShow = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 30%;\r\n  object-fit: fill;\r\n`;\r\nconst ProfileInfo = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n`;\r\nconst ProfileName = styled.div`\r\n  text-align: left;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\nconst ProfileDate = styled.div`\r\n  font-size: 15px;\r\n`;\r\nconst TitleBox = styled.div`\r\n  display: flex;\r\n  margin-top: 15px;\r\n`;\r\nconst Category = styled.div`\r\n  height: 50px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  font-size: 35px;\r\n  color: gray;\r\n  background-color: rgba(243, 156, 18, 0.22);\r\n`;\r\nconst Title = styled.div`\r\n  height: 50px;\r\n  margin-left: 15px;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  line-height: 50px;\r\n`;\r\nconst ContentBox = styled.div`\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  min-height: 300px;\r\n  text-align: start;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Photo = styled.img`\r\n  object-fit: fill;\r\n  width: 230px;\r\n  height: 120px;\r\n`;\r\n\r\nconst ExtraBox = styled.div`\r\n  width: 1000px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ExtraInfo = styled.div`\r\n  border: 2px solid rgba(64, 64, 64, 0.2);\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  line-height: 30px;\r\n`;\r\n\r\nconst LikeIcon = styled(FontAwesomeIcon)`\r\n  margin-left: 10px;\r\n  float: right;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ExtraButton = styled.div``;\r\n\r\nconst Button = styled.button`\r\n  font-size: large;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  margin-left: 10px;\r\n  background-color: white;\r\n  border: 2px solid rgba(64, 64, 64, 0.5);\r\n`;\r\n\r\nexport const BoardContent = ({ postId, myBoard}) => {\r\n  // 1: \"기타\",\r\n  // 2: \"찾아주세요\",\r\n  // 3: \"봤어요\",\r\n  // 4: \"도와주세요\",\r\n\r\n  const navigate = useNavigate();\r\n  const [categoryText, setCategoryText] = useState(\"기타\");\r\n  const WEEKDAY = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\r\n  const [inputs, setInputs] = useState({\r\n    userId: 0,\r\n    nickname: \"\",\r\n    userImgUrl: \"\",\r\n    title: \"\",\r\n    category: 1,\r\n    content: \"\",\r\n    postCreateAt: \"\",\r\n    likeCount: 0,\r\n    commentCount: 0,\r\n    hits: 0,\r\n    userLiked: false,\r\n    imgList: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    API.get(\"/boards/\" + postId, {\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setInputs({\r\n          userId: response.data.result.board.userId,\r\n          nickname: response.data.result.board.nickname,\r\n          userImgUrl:\r\n            response.data.result.board.userImgUrl === null\r\n              ? profileImage\r\n              : response.data.result.board.userImgUrl,\r\n          title: response.data.result.board.title,\r\n          category: response.data.result.board.category,\r\n          content: response.data.result.board.content,\r\n          postCreateAt: response.data.result.board.postCreateAt,\r\n          likeCount: response.data.result.board.likeCount,\r\n          commentCount: response.data.result.board.commentCount,\r\n          hits: response.data.result.board.hits,\r\n          userLiked: response.data.result.userLiked,\r\n          imgList: response.data.result.imgList,\r\n        });\r\n        console.log(response.data);\r\n        // console.log(inputs);\r\n      })\r\n      .catch((err) => console.log(\"error:\", err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // 카테고리\r\n    switch (inputs.category) {\r\n      case 1:\r\n        setCategoryText(\"기타\");\r\n        break;\r\n      case 2:\r\n        setCategoryText(\"찾아주세요\");\r\n        break;\r\n      case 3:\r\n        setCategoryText(\"봤어요\");\r\n        break;\r\n      case 4:\r\n        setCategoryText(\"도와주세요\");\r\n        break;\r\n      default:\r\n        setCategoryText(\"default\");\r\n        break;\r\n    }\r\n  }, [inputs.category]);\r\n\r\n  // Date객체 내용 빼서 형식에 맞춰서 return\r\n  const dateTrans = () => {\r\n    let date = new Date(inputs.postCreateAt);\r\n    let week = WEEKDAY[date.getDay()];\r\n\r\n    date =\r\n      date.getFullYear() +\r\n      \"년\" +\r\n      (date.getMonth() + 1) +\r\n      \"월\" +\r\n      date.getDate() +\r\n      \"일 (\" +\r\n      week +\r\n      \") \" +\r\n      date.getHours() +\r\n      \":\" +\r\n      date.getMinutes();\r\n\r\n    console.log(date);\r\n    return date;\r\n  };\r\n\r\n  const onClickUpdate = () => {\r\n    const data = {\r\n      locPostId: postId,\r\n      locTitle: inputs.title,\r\n      locCategory: inputs.category,\r\n      // locRegion: inputs.region,\r\n      locContent: inputs.content,\r\n      locImgList: inputs.imgList,\r\n    }\r\n    navigate(\"/board/update\", { state: data });\r\n  };\r\n\r\n  const onClickDelete = () => {\r\n    API.delete(\"/boards/\" + postId, {\r\n      headers: {\r\n        \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n      },\r\n      body: {\r\n        userId: sessionStorage.getItem(\"userID\"),\r\n      },\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      alert(\"게시물이 삭제되었습니다.\");\r\n      if (myBoard === true){\r\n        navigate(\"/mypage\");\r\n      } else{\r\n        window.location.reload();\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  const Like = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"postId\", Number(postId));\r\n    if (inputs.userLiked === true) {\r\n      // 좋아요 취소\r\n      API.delete(\"/boards/like\", {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n        data: formData,\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          setInputs({\r\n            ...inputs, // 기존의 input 객체를 복사\r\n            userLiked: false,\r\n          });\r\n        }\r\n      });\r\n\r\n    } else {\r\n      // 좋아요 누르기\r\n      API.post(\"/boards/like\", formData, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n        },\r\n      }).then((response) => {\r\n        if (response.data.isSuccess) {\r\n          setInputs({\r\n            ...inputs, // 기존의 input 객체를 복사\r\n            userLiked: true,\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <ProfileBox>\r\n          <ProfileImage>\r\n            <ProfileImageShow src={inputs.userImgUrl} />\r\n          </ProfileImage>\r\n          <ProfileInfo>\r\n            <ProfileName>{inputs.nickname}</ProfileName>\r\n            <ProfileDate>{dateTrans()}</ProfileDate>\r\n          </ProfileInfo>\r\n        </ProfileBox>\r\n        <TitleBox>\r\n          <Category>{categoryText}</Category>\r\n          <Title>{inputs.title}</Title>\r\n        </TitleBox>\r\n        <hr />\r\n        <ContentBox>{inputs.content}</ContentBox>\r\n        <div style={{ display: \"flex\" }}>\r\n          {inputs.imgList &&\r\n            inputs.imgList.map((item) => {\r\n              return <Photo src={item}></Photo>;\r\n            })}\r\n        </div>\r\n      </Container>\r\n      <ExtraBox>\r\n        <div style={{ display: \"flex\" }}>\r\n          <ExtraInfo>\r\n            좋아요 {inputs.likeCount}&nbsp;&nbsp;&nbsp;&nbsp; 댓글{\" \"}\r\n            {inputs.commentCount}&nbsp;&nbsp;&nbsp;&nbsp; 조회수 {inputs.hits}\r\n          </ExtraInfo>\r\n          <LikeIcon\r\n            size=\"2x\"\r\n            icon={inputs.userLiked ? solidHeart : regularHeart}\r\n            onClick={Like}\r\n          ></LikeIcon>\r\n        </div>\r\n        {inputs.userId === Number(sessionStorage.getItem(\"userID\")) && (\r\n          <ExtraButton>\r\n            <Button onClick={()=>onClickUpdate()}>수정</Button>\r\n            <Link to=\"/board\">\r\n              <Button onClick={()=>onClickDelete()}>삭제</Button>\r\n            </Link>\r\n          </ExtraButton>\r\n        )}\r\n      </ExtraBox>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nBoardContent.defaultProps = {\r\n  postId: 1,\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { BoardComment } from \"../components/BoardComment\";\r\nimport { BoardContent } from \"../components/BoardContent\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const BoardDetail = () => {\r\n  const location = useLocation();\r\n  const myBoard = location.state.myBoard;\r\n  let { postId } = useParams();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <BoardContent postId={postId} myBoard={myBoard} />\r\n      </div>\r\n      <div>\r\n        <BoardComment postId={postId} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","/*global kakao */\r\nimport React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport doghouse from \"../images/doghouse.png\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 100px;\r\n  display: flex;\r\n  margin-left: 15%;\r\n  margin-bottom: 10px;\r\n`;\r\nconst HomeImg = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Intro = styled.div`\r\n  font-size: x-large;\r\n  font-weight: bolder;\r\n  text-align: left;\r\n  color: orange;\r\n`;\r\n\r\nconst MapWrapper = styled.div`\r\n  /* position: sticky; */\r\n  margin-bottom: 100px;\r\n  position: relative;\r\n  width: 70%;\r\n  height: 600px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst ListWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 350px;\r\n  margin: 10px 0 30px 10px;\r\n  padding: 5px;\r\n  overflow-y: auto;\r\n  background: rgba(255, 255, 255, 0.7);\r\n  z-index: 1;\r\n  font-size: 12px;\r\n  border-radius: 10px;\r\n  text-align: start;\r\n`;\r\n\r\nconst Map = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 10px;\r\n  border: solid;\r\n  border-color: orange;\r\n  border-width: 5px;\r\n`;\r\n\r\nconst Pagination = styled.div`\r\n  text-align: center;\r\n  a {\r\n    color: black;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    margin: 0 10px;\r\n\r\n    &.on {\r\n      color: orange;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PlacesList = styled.ul`\r\n  margin-top: 20px;\r\n\r\n  li {\r\n    list-style: none;\r\n\r\n    &.item {\r\n      position: relative;\r\n      border-bottom: 1px solid #888;\r\n      overflow: hidden;\r\n      cursor: pointer;\r\n      min-height: 65px;\r\n\r\n      span {\r\n        display: block;\r\n        margin-top: 4px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CenterMap() {\r\n  var keyword = \"유기동물 보호소\";\r\n\r\n  var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n  var markers = [];\r\n  const options = {\r\n    center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n    level: 13,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"myMap\");\r\n    const map = new kakao.maps.Map(container, options);\r\n\r\n    const ps = new kakao.maps.services.Places();\r\n\r\n    searchPlaces();\r\n\r\n    // 키워드 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n      // // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n      ps.keywordSearch(keyword, placesSearchCB);\r\n    }\r\n\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n        map.setBounds(bounds);\r\n        displayPlaces(data);\r\n        displayPagination(pagination);\r\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n        alert(\"검색 결과가 존재하지 않습니다.\");\r\n        return;\r\n      } else if (status === kakao.maps.services.Status.ERROR) {\r\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 검색결과 목록 하단에 페이지 번호 표시\r\n    function displayPagination(pagination) {\r\n      var paginationEl = document.getElementById(\"pagination\"),\r\n        fragment = document.createDocumentFragment(),\r\n        i;\r\n\r\n      // 기존에 추가된 페이지 번호 삭제\r\n      while (paginationEl.hasChildNodes()) {\r\n        paginationEl.removeChild(paginationEl.lastChild);\r\n      }\r\n\r\n      for (i = 1; i <= pagination.last; i++) {\r\n        var el = document.createElement(\"a\");\r\n        el.href = \"#\";\r\n        el.innerHTML = i;\r\n\r\n        if (i === pagination.current) {\r\n          el.className = \"on\";\r\n        } else {\r\n          el.onclick = (function (i) {\r\n            return function () {\r\n              pagination.gotoPage(i);\r\n            };\r\n          })(i);\r\n        }\r\n\r\n        fragment.appendChild(el);\r\n      }\r\n      paginationEl.appendChild(fragment);\r\n    }\r\n\r\n    // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n    function displayPlaces(places) {\r\n      var listEl = document.getElementById(\"placesList\"),\r\n        menuEl = document.getElementById(\"menu_wrap\"),\r\n        fragment = document.createDocumentFragment(),\r\n        bounds = new kakao.maps.LatLngBounds();\r\n\r\n      // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n      removeAllChildNods(listEl);\r\n\r\n      // 지도에 표시되고 있는 마커를 제거합니다\r\n      removeMarker();\r\n\r\n      for (var i = 0; i < places.length; i++) {\r\n        // 마커를 생성하고 지도에 표시합니다\r\n        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n          marker = addMarker(placePosition, i),\r\n          itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        bounds.extend(placePosition);\r\n\r\n        // 마커와 검색결과 항목에 mouseover 했을때\r\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n        (function (marker, title) {\r\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\r\n            displayInfowindow(marker, title);\r\n          });\r\n\r\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\r\n            infowindow.close();\r\n          });\r\n\r\n          itemEl.onmouseover = function () {\r\n            displayInfowindow(marker, title);\r\n          };\r\n\r\n          itemEl.onmouseout = function () {\r\n            infowindow.close();\r\n          };\r\n        })(marker, places[i].place_name);\r\n\r\n        fragment.appendChild(itemEl);\r\n      }\r\n\r\n      // 검색결과 항목들을 검색결과 목록 Element에 추가합니다\r\n      listEl.appendChild(fragment);\r\n      menuEl.scrollTop = 0;\r\n\r\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n      map.setBounds(bounds);\r\n    }\r\n\r\n    // 검색결과 항목을 Element로 반환하는 함수입니다\r\n    function getListItem(index, place) {\r\n      const imgHeight = 10 + index * 46;\r\n      var el = document.createElement(\"li\"),\r\n        itemStr =\r\n          '<span class=\"markerbg marker_' +\r\n          (index + 1) +\r\n          '\" style=\"float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 10px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;  background-position: 0 -' +\r\n          imgHeight +\r\n          'px;\"></span>' +\r\n          '<div class=\"info\" style=\"padding:10px 0 10px 55px;\">' +\r\n          \"   <h5>\" +\r\n          place.place_name +\r\n          \"</h5>\";\r\n\r\n      if (place.road_address_name) {\r\n        itemStr +=\r\n          \"    <span>\" +\r\n          place.road_address_name +\r\n          \"</span>\" +\r\n          '   <span class=\"jibun gray\" style=\"color:#8a8a8a; padding-left:26px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;\">' +\r\n          place.address_name +\r\n          \"</span>\";\r\n      } else {\r\n        itemStr += \"    <span>\" + place.address_name + \"</span>\";\r\n      }\r\n\r\n      itemStr +=\r\n        '  <span class=\"tel\" style=\"color:#009900;\">' +\r\n        place.phone +\r\n        \"</span>\" +\r\n        \"</div>\";\r\n\r\n      el.innerHTML = itemStr;\r\n      el.className = \"item\";\r\n\r\n      return el;\r\n    }\r\n\r\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n    function removeMarker() {\r\n      for (var i = 0; i < markers.length; i++) {\r\n        markers[i].setMap(null);\r\n      }\r\n      markers = [];\r\n    }\r\n\r\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n    function addMarker(position, idx, title) {\r\n      var imageSrc =\r\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n        imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n        imgOptions = {\r\n          spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n          offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n        },\r\n        markerImage = new kakao.maps.MarkerImage(\r\n          imageSrc,\r\n          imageSize,\r\n          imgOptions\r\n        ),\r\n        marker = new kakao.maps.Marker({\r\n          position: position, // 마커의 위치\r\n          image: markerImage,\r\n        });\r\n\r\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n      markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n\r\n      return marker;\r\n    }\r\n\r\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n    // 인포윈도우에 장소명을 표시합니다\r\n    function displayInfowindow(marker, title) {\r\n      var content =\r\n        '<div style=\"padding:10px; width:max-content;\">' + title + \"</div>\";\r\n\r\n      infowindow.setContent(content);\r\n      infowindow.open(map, marker);\r\n    }\r\n\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el) {\r\n      while (el.hasChildNodes()) {\r\n        el.removeChild(el.lastChild);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <HomeImg src={doghouse}></HomeImg>\r\n        <Intro>전국 유기동물 보호소</Intro>\r\n      </Container>\r\n\r\n      <MapWrapper>\r\n        <Map id=\"myMap\"></Map>\r\n        <ListWrapper id=\"menu_wrap\">\r\n          <PlacesList id=\"placesList\"></PlacesList>\r\n          <Pagination id=\"pagination\"></Pagination>\r\n        </ListWrapper>\r\n      </MapWrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport styles from \"../styles/BoardEditor.module.css\";\r\nimport styled from \"styled-components\";\r\nimport API from \"../utils/api\";\r\n\r\nconst InputPicker = styled.select`\r\n  width: 955px;\r\n  height: 50px;\r\n  text-align: left;\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const BoardUpdate = () => {\r\n  // inputPostId,\r\n  // inputTitle,\r\n  // inputCategory,\r\n  // inputRegion,\r\n  // inputContent,\r\n  // inputImgList,\r\n  const location = useLocation();\r\n\r\n  console.log(\"===location===\");\r\n  console.log(location.state);\r\n\r\n  let [showImages, setShowImages] = useState(location.state.locImgList);\r\n  const [sendingImg, setSendingImg] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    category: location.state.locCategory,\r\n    region: 1,\r\n    content: location.state.locContent,\r\n    title: location.state.locTitle,\r\n    userId: sessionStorage.getItem(\"userID\"),\r\n  });\r\n\r\n  const [postId, setPostId] = useState(location.state.locPostId);\r\n\r\n  useEffect(() => {\r\n    if (location.state.locImgList != null) {\r\n      location.state.locImgList.map((item) => {\r\n        const convertURLtoFile = async (item) => {\r\n          const response = await fetch(item);\r\n          const data = await response.blob();\r\n          const ext = item.split(\".\").pop();\r\n          const filename = item.split(\"/\").pop(); // 맨 뒤에를  file명으로..\r\n          const metadata = { type: `image/${ext}` };\r\n          return new File([data], filename, metadata);\r\n        };\r\n\r\n        convertURLtoFile(item).then((response) => {\r\n          sendingImg.push(response);\r\n        }); // 첫번째 then\r\n      });\r\n    }\r\n    // fetch(item,\r\n    //   {\r\n    //     mode:\"no-cors\"\r\n    //   }).then(async (response) => {\r\n    //   const contentType = response.headers.get(\"content-type\");\r\n    //   const blob = await response.blob();\r\n    //   const file = new File([blob], \"image.\"+ item.slice(-3), { contentType });\r\n    //   console.log(\"파일변환\",file);\r\n    //   sendingImg.push(file);\r\n    //   // access file here\r\n    // });\r\n\r\n    // setShowImages(imageUrlLists);\r\n  }, []);\r\n\r\n  /** input 입력 시 title, content 내용 변경 */\r\n  const onChangeData = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeCategory = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      category: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeRegion = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      region: e.target.value,\r\n    });\r\n  };\r\n\r\n  // category select\r\n  const handleSelect = (e) => {\r\n    setInputs({\r\n      ...inputs,\r\n      categoy: e.target.value,\r\n    });\r\n    console.log(\"handle select\");\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  /** 사진 추가 */\r\n  const handleAddImages = (event) => {\r\n    const imageLists = event.target.files;\r\n    let imageUrlLists = [...showImages];\r\n\r\n    for (let i = 0; i < imageLists.length; i++) {\r\n      const currentImageUrl = URL.createObjectURL(imageLists[i]);\r\n      imageUrlLists.push(currentImageUrl);\r\n      sendingImg.push(imageLists[i]);\r\n    }\r\n\r\n    console.log(\"사진\", sendingImg);\r\n\r\n    if (imageUrlLists.length > 10) {\r\n      imageUrlLists = imageUrlLists.slice(0, 10);\r\n      sendingImg = sendingImg.slice(0, 10);\r\n    }\r\n\r\n    setShowImages(imageUrlLists);\r\n  };\r\n\r\n  /** 사진 삭제 */\r\n  const handleDeleteImage = (id) => {\r\n    setShowImages(showImages.filter((_, index) => index !== id));\r\n    setSendingImg(sendingImg.filter((_, index) => index !== id));\r\n  };\r\n\r\n  /** 확인버튼 누르면 데이터 서버로 전송 */\r\n  const onClickUpload = async () => {\r\n    // console.log(postId);\r\n    // console.log(inputs);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", inputs.title);\r\n      formData.append(\"category\", Number(inputs.category));\r\n      formData.append(\"region\", Number(inputs.region));\r\n      formData.append(\"content\", inputs.content);\r\n\r\n      Object.values(sendingImg).forEach((image) =>\r\n        formData.append(\"imgFiles\", image)\r\n      );\r\n\r\n      for (var value of formData.values()) {\r\n        console.log(\"파일값\", value);\r\n      }\r\n\r\n      // JSON.stringify(data)\r\n      await API.patch(`/boards/update/${postId}`, formData, {\r\n        headers: {\r\n          \"X-ACCESS-TOKEN\": sessionStorage.getItem(\"userJWT\"),\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.data.isSuccess) {\r\n            alert(\"게시물이 수정되었습니다.\");\r\n            navigate(\"/board/detail/\" + postId, { state: { myBoard: false } });\r\n          } else {\r\n            console.log(response);\r\n            alert(\"게시물 수정에 실패했습니다.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.frag}>\r\n      <div className={styles.container}>\r\n        {/* title */}\r\n        <div>\r\n          <input\r\n            className={styles.title}\r\n            type=\"text\"\r\n            placeholder=\" 제목\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            onChange={onChangeData}\r\n            defaultValue={inputs.title}\r\n          />\r\n        </div>\r\n        <div>\r\n          <InputPicker\r\n            style={{ marginBottom: \"20px\" }}\r\n            onChange={onChangeCategory}\r\n            defaultValue={inputs.category}\r\n          >\r\n            <option key={1} value={1}>\r\n              기타\r\n            </option>\r\n            <option key={2} value={2}>\r\n              찾아주세요\r\n            </option>\r\n            <option key={3} value={3}>\r\n              봤어요\r\n            </option>\r\n            <option key={4} value={4}>\r\n              도와주세요\r\n            </option>\r\n          </InputPicker>\r\n          <InputPicker onChange={onChangeRegion} defaultValue={inputs.region}>\r\n            <option key={1} value={1}>\r\n              서울\r\n            </option>\r\n            <option key={2} value={2}>\r\n              경기도\r\n            </option>\r\n            <option key={3} value={3}>\r\n              인천\r\n            </option>\r\n            <option key={4} value={4}>\r\n              강원도\r\n            </option>\r\n            <option key={5} value={5}>\r\n              충청도\r\n            </option>\r\n            <option key={6} value={6}>\r\n              경상도\r\n            </option>\r\n            <option key={7} value={7}>\r\n              전라도\r\n            </option>\r\n            <option key={8} value={8}>\r\n              제주도\r\n            </option>\r\n          </InputPicker>\r\n        </div>\r\n        {/* content */}\r\n        <div>\r\n          <textarea\r\n            type=\"textarea\"\r\n            className={styles.content}\r\n            id=\"content\"\r\n            name=\"content\"\r\n            onChange={onChangeData}\r\n            defaultValue={inputs.content}\r\n          />\r\n        </div>\r\n        {/* 파일 업로드 부분 */}\r\n        <div>\r\n          <div>\r\n            {/* <strong>업로드 이미지</strong> */}\r\n            <div className={styles.file__container}>\r\n              {showImages.map((image, id) => (\r\n                <div className={styles.ImageBox} key={id}>\r\n                  <img\r\n                    className={styles.imageContainer}\r\n                    src={image}\r\n                    alt={`${image}`}\r\n                  />\r\n                  <div>\r\n                    <button onClick={() => handleDeleteImage(id)}>삭제</button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <form className={styles.ImageSelect}>\r\n            <input\r\n              type=\"file\"\r\n              id=\"image\"\r\n              accept=\"img/*\"\r\n              multiple=\"multiple\"\r\n              onChange={handleAddImages}\r\n            />\r\n            <label htmlFor=\"image\"></label>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btn__container}>\r\n        <Link to=\"/board\">\r\n          <button className={styles.btn__cancel}>취소</button>\r\n        </Link>\r\n        <button className={styles.btn__confirm} onClick={onClickUpload}>\r\n          수정\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {  useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Tab from \"./components/Tab\";\r\nimport Login from \"./pages/Login\";\r\nimport { NotFound } from \"./pages/NotFound\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport { BoardEditor } from \"./components/BoardEditor\";\r\nimport { Board } from \"./pages/Board\";\r\nimport AbandonedAnimal from \"./pages/AbandonedAnimal\";\r\nimport MyPage from \"./pages/MyPage\";\r\nimport { BoardDetail } from \"./pages/BoardDetail\";\r\nimport CenterMap from \"./pages/CenterMap\";\r\nimport { BoardUpdate } from \"./components/BoardUpdate\";\r\n\r\nfunction App() {\r\n\r\n  // 로그인 상태 관리\r\n  const [isLogin, setIsLogin] = useState(\r\n    sessionStorage.getItem(\"userJWT\") != null ? true : false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isLogin === false) {\r\n      console.log(\"false\");\r\n    } else {\r\n      console.log(\"true\");\r\n    }\r\n  });\r\n\r\n  const currentTab = () => {\r\n    let path = window.location.pathname;\r\n    if (path === \"/\") return 1;\r\n    else if (path === \"/board\") return 2;\r\n    else if (path === \"/*\") return 3;\r\n    else if (path.includes(\"/mypage/\")) return 4;\r\n  };\r\n\r\n  const [tabMenu, setTabMenu] = useState(currentTab);\r\n\r\n  const tabMenuChange = (tabMenu) => {\r\n    setTabMenu(tabMenu);\r\n  };\r\n\r\n  const isLoginChange = (isLogin) => {\r\n    setIsLogin(isLogin);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Header\r\n          tabMenu={tabMenu}\r\n          tabMenuChange={tabMenuChange}\r\n          isLogin={isLogin}\r\n          isLoginChange={isLoginChange}\r\n        />\r\n        <Tab tabMenu={tabMenu} tabMenuChange={tabMenuChange} />\r\n        <Routes>\r\n          <Route path=\"/\" element={<AbandonedAnimal />}></Route>\r\n          <Route path=\"/board\" element={<Board />}></Route>\r\n          <Route path=\"/centermap\" element={<CenterMap />}></Route>\r\n          <Route path=\"*\" element={<NotFound />}></Route>\r\n          <Route path=\"/mypage/*\" element={<MyPage />}></Route>\r\n          <Route path=\"/signup\" element={<SignUp />}></Route>\r\n          <Route path=\"/board/edit\" element={<BoardEditor />}></Route>\r\n          <Route path=\"/board/update\" element={<BoardUpdate />}></Route>\r\n          <Route path=\"/login\" element={<Login />}></Route>\r\n          <Route path=\"/board/detail/:postId\" element={<BoardDetail />}></Route>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <BoardDetail /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/profileImage.5405d77c.png\";","module.exports = __webpack_public_path__ + \"static/media/header_dog.85950ef0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doghouse.e6f73a99.png\";"],"sourceRoot":""}